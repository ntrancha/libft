a.out: ELF 64-bit LSB  executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.24, BuildID[sha1]=7f95635706740753948ce54c2d255f1307bb6fc8, not stripped
/lib64/ld-linux-x86-64.so.2
L-%_
libc.so.6
malloc
__libc_start_main
write
free
__gmon_start__
GLIBC_2.2.5
%z+ 
%r+ 
UH-P0`
UH-P0`
gfff
gfff
gfff
[]A\A]A^A_
) : 
===========INFOS===========
allocs               :
actifs               :
frees                :
bytes allocated      :
stack size           :
stack free           :
===========STACK===========
-2147483648
;*3$"
GCC: (Ubuntu 4.8.4-2ubuntu1~14.04) 4.8.4
GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2
	del
	put
	cpy
	sys
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
Alloc.c
stddef.h
src/mem
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_memmove.c
stddef.h
src/mem
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_memalloc.c
stddef.h
src/mem
ft_memdel.c
src/strings
ft_strcmp.c
src/strings
ft_strdel.c
src/strings
ft_strdup.c
src/strings
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_strlen.c
stddef.h
src/put
ft_putstr.c
src/put
ft_putendl.c
src/put
ft_putnbr_endl.c
src/convert
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_itoa.c
stddef.h
src/mem
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_memset.c
stddef.h
src/strings
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_strnew.c
stddef.h
src/strings
ft_strclr.c
src/count
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_nbrlen.c
stddef.h
wuguh=vL
src/put
ft_putchar.c
src/put
ft_putnbr.c
ft_alloc_get
ft_calloc
ft_cpyvoid
new_name
short int
size_t
sizetype
/home/nk42/PROJECT/libft
ft_alloc_getvoid
ft_alloc_pdel
main
dest
ft_stack_memalloc
s_type
content
ft_stack_free
ft_stack_size
ft_vartype_add
s_alloc
ft_alloc_del
long long int
s_stacks
ft_stack_randomid
ft_stack_strdup
Alloc.c
node
ft_alloc
ft_vartype_free
types
ft_alloc_nget
ft_malloc
unsigned char
argc
ft_stack_memmove
long long unsigned int
ft_alloc_vget
stack
argv
ft_stack_init
ft_vartype_addput
short unsigned int
ft_stack_clean
n_octet
ft_alloc_copy
t_stacks
GNU C 4.8.4 -mtune=generic -march=x86-64 -g -fstack-protector
id_rand
t_type
ft_alloc_include
ft_alloc_more
ft_vartype_addcpy
ft_alloc_type
ft_vartype_init
ft_putvoid
alloc_prev
ft_stack_display
alloc_next
elements
ft_vartype_get
ft_stack_infos
ft_vartype_delete
ft_alloc_delete
ft_alloc_rename
GNU C 4.8.4 -mtune=generic -march=x86-64 -g -fPIC -fstack-protector
pdst
src/mem/ft_memmove.c
psrc
ft_memmove
src/mem/ft_memalloc.c
ft_memalloc
ft_memdel
src/mem/ft_memdel.c
src/strings/ft_strcmp.c
ft_strcmp
ft_strdel
src/strings/ft_strdel.c
src/strings/ft_strdup.c
count
ft_strdup
src/strings/ft_strlen.c
ft_strlen
ft_putstr
src/put/ft_putstr.c
src/put/ft_putendl.c
ft_putendl
ft_putnbr_endl
src/put/ft_putnbr_endl.c
src/convert/ft_itoa.c
ft_itoa
src/mem/ft_memset.c
index
ft_memset
src/strings/ft_strnew.c
ft_strnew
src/strings/ft_strclr.c
ft_strclr
src/count/ft_nbrlen.c
ft_nbrlen
src/put/ft_putchar.c
ft_putchar
src/put/ft_putnbr.c
ft_putnbr
.symtab
.strtab
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.dynamic
.got
.got.plt
.data
.bss
.comment
.debug_aranges
.debug_info
.debug_abbrev
.debug_line
.debug_str
crtstuff.c
__JCR_LIST__
deregister_tm_clones
register_tm_clones
__do_global_dtors_aux
completed.6973
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
Alloc.c
ft_cpyvoid
ft_putvoid
ft_stack_randomid
id_rand.5192
ft_stack_memmove
ft_stack_memalloc
ft_stack_strdup
ft_stack_display
ft_alloc_delete
alloc.5239
ft_stack_size
ft_alloc_more
ft_memmove.c
ft_memalloc.c
ft_memdel.c
ft_strcmp.c
ft_strdel.c
ft_strdup.c
ft_strlen.c
ft_putstr.c
ft_putendl.c
ft_putnbr_endl.c
ft_itoa.c
ft_memset.c
ft_strnew.c
ft_strclr.c
ft_nbrlen.c
ft_putchar.c
ft_putnbr.c
__FRAME_END__
__JCR_END__
__init_array_end
_DYNAMIC
__init_array_start
_GLOBAL_OFFSET_TABLE_
__libc_csu_fini
ft_vartype_add
free@@GLIBC_2.2.5
ft_vartype_init
ft_memdel
ft_calloc
_ITM_deregisterTMCloneTable
data_start
ft_vartype_delete
ft_strclr
ft_stack_infos
ft_itoa
write@@GLIBC_2.2.5
ft_strlen
_edata
ft_putnbr_endl
ft_vartype_get
ft_alloc_getvoid
_fini
ft_stack_init
ft_alloc_vget
ft_putendl
ft_stack_free
ft_memset
__libc_start_main@@GLIBC_2.2.5
ft_vartype_free
__data_start
ft_strdel
ft_alloc_rename
ft_strnew
__gmon_start__
__dso_handle
_IO_stdin_used
ft_alloc_nget
ft_vartype_addcpy
ft_memmove
ft_alloc_copy
ft_putchar
ft_strdup
__libc_csu_init
malloc@@GLIBC_2.2.5
ft_alloc
_end
ft_alloc_include
_start
ft_stack_clean
ft_alloc_get
ft_memalloc
__bss_start
ft_putnbr
ft_malloc
main
ft_strcmp
ft_vartype_addput
ft_alloc_del
ft_alloc_pdel
_Jv_RegisterClasses
ft_putstr
__TMC_END__
_ITM_registerTMCloneTable
_init
ft_alloc_type
ft_nbrlen

Table de symboles « .dynsym » contient 6 entrées:
   Num:    Valeur         Tail Type    Lien   Vis      Ndx Nom
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND free@GLIBC_2.2.5 (2)
     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND write@GLIBC_2.2.5 (2)
     3: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (2)
     4: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
     5: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND malloc@GLIBC_2.2.5 (2)

Table de symboles « .symtab » contient 142 entrées:
   Num:    Valeur         Tail Type    Lien   Vis      Ndx Nom
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000400238     0 SECTION LOCAL  DEFAULT    1 
     2: 0000000000400254     0 SECTION LOCAL  DEFAULT    2 
     3: 0000000000400274     0 SECTION LOCAL  DEFAULT    3 
     4: 0000000000400298     0 SECTION LOCAL  DEFAULT    4 
     5: 00000000004002b8     0 SECTION LOCAL  DEFAULT    5 
     6: 0000000000400348     0 SECTION LOCAL  DEFAULT    6 
     7: 0000000000400392     0 SECTION LOCAL  DEFAULT    7 
     8: 00000000004003a0     0 SECTION LOCAL  DEFAULT    8 
     9: 00000000004003c0     0 SECTION LOCAL  DEFAULT    9 
    10: 00000000004003d8     0 SECTION LOCAL  DEFAULT   10 
    11: 0000000000400450     0 SECTION LOCAL  DEFAULT   11 
    12: 0000000000400470     0 SECTION LOCAL  DEFAULT   12 
    13: 00000000004004d0     0 SECTION LOCAL  DEFAULT   13 
    14: 0000000000401fe4     0 SECTION LOCAL  DEFAULT   14 
    15: 0000000000401ff0     0 SECTION LOCAL  DEFAULT   15 
    16: 00000000004020ec     0 SECTION LOCAL  DEFAULT   16 
    17: 00000000004022b8     0 SECTION LOCAL  DEFAULT   17 
    18: 0000000000602e10     0 SECTION LOCAL  DEFAULT   18 
    19: 0000000000602e18     0 SECTION LOCAL  DEFAULT   19 
    20: 0000000000602e20     0 SECTION LOCAL  DEFAULT   20 
    21: 0000000000602e28     0 SECTION LOCAL  DEFAULT   21 
    22: 0000000000602ff8     0 SECTION LOCAL  DEFAULT   22 
    23: 0000000000603000     0 SECTION LOCAL  DEFAULT   23 
    24: 0000000000603040     0 SECTION LOCAL  DEFAULT   24 
    25: 0000000000603050     0 SECTION LOCAL  DEFAULT   25 
    26: 0000000000000000     0 SECTION LOCAL  DEFAULT   26 
    27: 0000000000000000     0 SECTION LOCAL  DEFAULT   27 
    28: 0000000000000000     0 SECTION LOCAL  DEFAULT   28 
    29: 0000000000000000     0 SECTION LOCAL  DEFAULT   29 
    30: 0000000000000000     0 SECTION LOCAL  DEFAULT   30 
    31: 0000000000000000     0 SECTION LOCAL  DEFAULT   31 
    32: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    33: 0000000000602e20     0 OBJECT  LOCAL  DEFAULT   20 __JCR_LIST__
    34: 0000000000400500     0 FUNC    LOCAL  DEFAULT   13 deregister_tm_clones
    35: 0000000000400530     0 FUNC    LOCAL  DEFAULT   13 register_tm_clones
    36: 0000000000400570     0 FUNC    LOCAL  DEFAULT   13 __do_global_dtors_aux
    37: 0000000000603050     1 OBJECT  LOCAL  DEFAULT   25 completed.6973
    38: 0000000000602e18     0 OBJECT  LOCAL  DEFAULT   19 __do_global_dtors_aux_fin
    39: 0000000000400590     0 FUNC    LOCAL  DEFAULT   13 frame_dummy
    40: 0000000000602e10     0 OBJECT  LOCAL  DEFAULT   18 __frame_dummy_init_array_
    41: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS Alloc.c
    42: 00000000004005bd    69 FUNC    LOCAL  DEFAULT   13 ft_cpyvoid
    43: 0000000000400602    26 FUNC    LOCAL  DEFAULT   13 ft_putvoid
    44: 000000000040061c    34 FUNC    LOCAL  DEFAULT   13 ft_stack_randomid
    45: 0000000000603058     4 OBJECT  LOCAL  DEFAULT   25 id_rand.5192
    46: 000000000040063e    85 FUNC    LOCAL  DEFAULT   13 ft_stack_memmove
    47: 0000000000400693    66 FUNC    LOCAL  DEFAULT   13 ft_stack_memalloc
    48: 00000000004006d5    81 FUNC    LOCAL  DEFAULT   13 ft_stack_strdup
    49: 0000000000400726   243 FUNC    LOCAL  DEFAULT   13 ft_stack_display
    50: 0000000000400ad7   225 FUNC    LOCAL  DEFAULT   13 ft_alloc_delete
    51: 0000000000603060     8 OBJECT  LOCAL  DEFAULT   25 alloc.5239
    52: 0000000000400a66   113 FUNC    LOCAL  DEFAULT   13 ft_stack_size
    53: 0000000000400f2e    88 FUNC    LOCAL  DEFAULT   13 ft_alloc_more
    54: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_memmove.c
    55: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_memalloc.c
    56: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_memdel.c
    57: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strcmp.c
    58: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strdel.c
    59: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strdup.c
    60: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strlen.c
    61: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putstr.c
    62: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putendl.c
    63: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putnbr_endl.c
    64: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_itoa.c
    65: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_memset.c
    66: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strnew.c
    67: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strclr.c
    68: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_nbrlen.c
    69: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putchar.c
    70: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putnbr.c
    71: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    72: 0000000000402a20     0 OBJECT  LOCAL  DEFAULT   17 __FRAME_END__
    73: 0000000000602e20     0 OBJECT  LOCAL  DEFAULT   20 __JCR_END__
    74: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS 
    75: 0000000000602e18     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_end
    76: 0000000000602e28     0 OBJECT  LOCAL  DEFAULT   21 _DYNAMIC
    77: 0000000000602e10     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_start
    78: 0000000000603000     0 OBJECT  LOCAL  DEFAULT   23 _GLOBAL_OFFSET_TABLE_
    79: 0000000000401fe0     2 FUNC    GLOBAL DEFAULT   13 __libc_csu_fini
    80: 0000000000401710   292 FUNC    GLOBAL DEFAULT   13 ft_vartype_add
    81: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND free@@GLIBC_2.2.5
    82: 0000000000401515   119 FUNC    GLOBAL DEFAULT   13 ft_vartype_init
    83: 0000000000401aaa    59 FUNC    GLOBAL DEFAULT   13 ft_memdel
    84: 000000000040115d   311 FUNC    GLOBAL DEFAULT   13 ft_calloc
    85: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab
    86: 0000000000603040     0 NOTYPE  WEAK   DEFAULT   24 data_start
    87: 0000000000401857    88 FUNC    GLOBAL DEFAULT   13 ft_vartype_delete
    88: 0000000000401e60    79 FUNC    GLOBAL DEFAULT   13 ft_strclr
    89: 0000000000400819   215 FUNC    GLOBAL DEFAULT   13 ft_stack_infos
    90: 0000000000401cb9   268 FUNC    GLOBAL DEFAULT   13 ft_itoa
    91: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND write@@GLIBC_2.2.5
    92: 0000000000401c05    47 FUNC    GLOBAL DEFAULT   13 ft_strlen
    93: 0000000000603050     0 NOTYPE  GLOBAL DEFAULT   24 _edata
    94: 0000000000401c98    33 FUNC    GLOBAL DEFAULT   13 ft_putnbr_endl
    95: 000000000040158c   126 FUNC    GLOBAL DEFAULT   13 ft_vartype_get
    96: 0000000000400e64    94 FUNC    GLOBAL DEFAULT   13 ft_alloc_getvoid
    97: 0000000000401fe4     0 FUNC    GLOBAL DEFAULT   14 _fini
    98: 00000000004009b2   180 FUNC    GLOBAL DEFAULT   13 ft_stack_init
    99: 0000000000400de6    63 FUNC    GLOBAL DEFAULT   13 ft_alloc_vget
   100: 0000000000401c65    51 FUNC    GLOBAL DEFAULT   13 ft_putendl
   101: 0000000000400974    62 FUNC    GLOBAL DEFAULT   13 ft_stack_free
   102: 0000000000401dc5    77 FUNC    GLOBAL DEFAULT   13 ft_memset
   103: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_
   104: 0000000000401834    35 FUNC    GLOBAL DEFAULT   13 ft_vartype_free
   105: 0000000000603040     0 NOTYPE  GLOBAL DEFAULT   24 __data_start
   106: 0000000000401b3f    44 FUNC    GLOBAL DEFAULT   13 ft_strdel
   107: 0000000000400c71   161 FUNC    GLOBAL DEFAULT   13 ft_alloc_rename
   108: 0000000000401e12    78 FUNC    GLOBAL DEFAULT   13 ft_strnew
   109: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
   110: 0000000000603048     0 OBJECT  GLOBAL HIDDEN    24 __dso_handle
   111: 0000000000401ff0     4 OBJECT  GLOBAL DEFAULT   15 _IO_stdin_used
   112: 0000000000400e25    63 FUNC    GLOBAL DEFAULT   13 ft_alloc_nget
   113: 000000000040160a   131 FUNC    GLOBAL DEFAULT   13 ft_vartype_addcpy
   114: 000000000040197c   215 FUNC    GLOBAL DEFAULT   13 ft_memmove
   115: 0000000000400fe5    99 FUNC    GLOBAL DEFAULT   13 ft_alloc_copy
   116: 0000000000401f0a    37 FUNC    GLOBAL DEFAULT   13 ft_putchar
   117: 0000000000401b6b   154 FUNC    GLOBAL DEFAULT   13 ft_strdup
   118: 0000000000401f70   101 FUNC    GLOBAL DEFAULT   13 __libc_csu_init
   119: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND malloc@@GLIBC_2.2.5
   120: 000000000040139f   374 FUNC    GLOBAL DEFAULT   13 ft_alloc
   121: 0000000000603068     0 NOTYPE  GLOBAL DEFAULT   25 _end
   122: 0000000000401294   267 FUNC    GLOBAL DEFAULT   13 ft_alloc_include
   123: 00000000004004d0     0 FUNC    GLOBAL DEFAULT   13 _start
   124: 00000000004008f0   132 FUNC    GLOBAL DEFAULT   13 ft_stack_clean
   125: 0000000000400ec2   108 FUNC    GLOBAL DEFAULT   13 ft_alloc_get
   126: 0000000000401a53    87 FUNC    GLOBAL DEFAULT   13 ft_memalloc
   127: 0000000000603050     0 NOTYPE  GLOBAL DEFAULT   25 __bss_start
   128: 0000000000401f2f    51 FUNC    GLOBAL DEFAULT   13 ft_putnbr
   129: 0000000000401048   277 FUNC    GLOBAL DEFAULT   13 ft_malloc
   130: 00000000004018af   205 FUNC    GLOBAL DEFAULT   13 main
   131: 0000000000401ae5    90 FUNC    GLOBAL DEFAULT   13 ft_strcmp
   132: 000000000040168d   131 FUNC    GLOBAL DEFAULT   13 ft_vartype_addput
   133: 0000000000400d12   212 FUNC    GLOBAL DEFAULT   13 ft_alloc_del
   134: 0000000000400bb8   185 FUNC    GLOBAL DEFAULT   13 ft_alloc_pdel
   135: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses
   136: 0000000000401c34    49 FUNC    GLOBAL DEFAULT   13 ft_putstr
   137: 0000000000603050     0 OBJECT  GLOBAL HIDDEN    24 __TMC_END__
   138: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable
   139: 0000000000400450     0 FUNC    GLOBAL DEFAULT   11 _init
   140: 0000000000400f86    95 FUNC    GLOBAL DEFAULT   13 ft_alloc_type
   141: 0000000000401eaf    91 FUNC    GLOBAL DEFAULT   13 ft_nbrlen

a.out:     format de fichier elf64-x86-64


Déassemblage de la section .init:

0000000000400450 <_init>:
  400450:	48 83 ec 08          	sub    $0x8,%rsp
  400454:	48 8b 05 9d 2b 20 00 	mov    0x202b9d(%rip),%rax        # 602ff8 <_DYNAMIC+0x1d0>
  40045b:	48 85 c0             	test   %rax,%rax
  40045e:	74 05                	je     400465 <_init+0x15>
  400460:	e8 4b 00 00 00       	callq  4004b0 <__gmon_start__@plt>
  400465:	48 83 c4 08          	add    $0x8,%rsp
  400469:	c3                   	retq   

Déassemblage de la section .plt:

0000000000400470 <free@plt-0x10>:
  400470:	ff 35 92 2b 20 00    	pushq  0x202b92(%rip)        # 603008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400476:	ff 25 94 2b 20 00    	jmpq   *0x202b94(%rip)        # 603010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40047c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400480 <free@plt>:
  400480:	ff 25 92 2b 20 00    	jmpq   *0x202b92(%rip)        # 603018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400486:	68 00 00 00 00       	pushq  $0x0
  40048b:	e9 e0 ff ff ff       	jmpq   400470 <_init+0x20>

0000000000400490 <write@plt>:
  400490:	ff 25 8a 2b 20 00    	jmpq   *0x202b8a(%rip)        # 603020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400496:	68 01 00 00 00       	pushq  $0x1
  40049b:	e9 d0 ff ff ff       	jmpq   400470 <_init+0x20>

00000000004004a0 <__libc_start_main@plt>:
  4004a0:	ff 25 82 2b 20 00    	jmpq   *0x202b82(%rip)        # 603028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004a6:	68 02 00 00 00       	pushq  $0x2
  4004ab:	e9 c0 ff ff ff       	jmpq   400470 <_init+0x20>

00000000004004b0 <__gmon_start__@plt>:
  4004b0:	ff 25 7a 2b 20 00    	jmpq   *0x202b7a(%rip)        # 603030 <_GLOBAL_OFFSET_TABLE_+0x30>
  4004b6:	68 03 00 00 00       	pushq  $0x3
  4004bb:	e9 b0 ff ff ff       	jmpq   400470 <_init+0x20>

00000000004004c0 <malloc@plt>:
  4004c0:	ff 25 72 2b 20 00    	jmpq   *0x202b72(%rip)        # 603038 <_GLOBAL_OFFSET_TABLE_+0x38>
  4004c6:	68 04 00 00 00       	pushq  $0x4
  4004cb:	e9 a0 ff ff ff       	jmpq   400470 <_init+0x20>

Déassemblage de la section .text:

00000000004004d0 <_start>:
  4004d0:	31 ed                	xor    %ebp,%ebp
  4004d2:	49 89 d1             	mov    %rdx,%r9
  4004d5:	5e                   	pop    %rsi
  4004d6:	48 89 e2             	mov    %rsp,%rdx
  4004d9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4004dd:	50                   	push   %rax
  4004de:	54                   	push   %rsp
  4004df:	49 c7 c0 e0 1f 40 00 	mov    $0x401fe0,%r8
  4004e6:	48 c7 c1 70 1f 40 00 	mov    $0x401f70,%rcx
  4004ed:	48 c7 c7 af 18 40 00 	mov    $0x4018af,%rdi
  4004f4:	e8 a7 ff ff ff       	callq  4004a0 <__libc_start_main@plt>
  4004f9:	f4                   	hlt    
  4004fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400500 <deregister_tm_clones>:
  400500:	b8 57 30 60 00       	mov    $0x603057,%eax
  400505:	55                   	push   %rbp
  400506:	48 2d 50 30 60 00    	sub    $0x603050,%rax
  40050c:	48 83 f8 0e          	cmp    $0xe,%rax
  400510:	48 89 e5             	mov    %rsp,%rbp
  400513:	77 02                	ja     400517 <deregister_tm_clones+0x17>
  400515:	5d                   	pop    %rbp
  400516:	c3                   	retq   
  400517:	b8 00 00 00 00       	mov    $0x0,%eax
  40051c:	48 85 c0             	test   %rax,%rax
  40051f:	74 f4                	je     400515 <deregister_tm_clones+0x15>
  400521:	5d                   	pop    %rbp
  400522:	bf 50 30 60 00       	mov    $0x603050,%edi
  400527:	ff e0                	jmpq   *%rax
  400529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400530 <register_tm_clones>:
  400530:	b8 50 30 60 00       	mov    $0x603050,%eax
  400535:	55                   	push   %rbp
  400536:	48 2d 50 30 60 00    	sub    $0x603050,%rax
  40053c:	48 c1 f8 03          	sar    $0x3,%rax
  400540:	48 89 e5             	mov    %rsp,%rbp
  400543:	48 89 c2             	mov    %rax,%rdx
  400546:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40054a:	48 01 d0             	add    %rdx,%rax
  40054d:	48 d1 f8             	sar    %rax
  400550:	75 02                	jne    400554 <register_tm_clones+0x24>
  400552:	5d                   	pop    %rbp
  400553:	c3                   	retq   
  400554:	ba 00 00 00 00       	mov    $0x0,%edx
  400559:	48 85 d2             	test   %rdx,%rdx
  40055c:	74 f4                	je     400552 <register_tm_clones+0x22>
  40055e:	5d                   	pop    %rbp
  40055f:	48 89 c6             	mov    %rax,%rsi
  400562:	bf 50 30 60 00       	mov    $0x603050,%edi
  400567:	ff e2                	jmpq   *%rdx
  400569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400570 <__do_global_dtors_aux>:
  400570:	80 3d d9 2a 20 00 00 	cmpb   $0x0,0x202ad9(%rip)        # 603050 <__TMC_END__>
  400577:	75 11                	jne    40058a <__do_global_dtors_aux+0x1a>
  400579:	55                   	push   %rbp
  40057a:	48 89 e5             	mov    %rsp,%rbp
  40057d:	e8 7e ff ff ff       	callq  400500 <deregister_tm_clones>
  400582:	5d                   	pop    %rbp
  400583:	c6 05 c6 2a 20 00 01 	movb   $0x1,0x202ac6(%rip)        # 603050 <__TMC_END__>
  40058a:	f3 c3                	repz retq 
  40058c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400590 <frame_dummy>:
  400590:	48 83 3d 88 28 20 00 	cmpq   $0x0,0x202888(%rip)        # 602e20 <__JCR_END__>
  400597:	00 
  400598:	74 1e                	je     4005b8 <frame_dummy+0x28>
  40059a:	b8 00 00 00 00       	mov    $0x0,%eax
  40059f:	48 85 c0             	test   %rax,%rax
  4005a2:	74 14                	je     4005b8 <frame_dummy+0x28>
  4005a4:	55                   	push   %rbp
  4005a5:	bf 20 2e 60 00       	mov    $0x602e20,%edi
  4005aa:	48 89 e5             	mov    %rsp,%rbp
  4005ad:	ff d0                	callq  *%rax
  4005af:	5d                   	pop    %rbp
  4005b0:	e9 7b ff ff ff       	jmpq   400530 <register_tm_clones>
  4005b5:	0f 1f 00             	nopl   (%rax)
  4005b8:	e9 73 ff ff ff       	jmpq   400530 <register_tm_clones>

00000000004005bd <ft_cpyvoid>:
  4005bd:	55                   	push   %rbp
  4005be:	48 89 e5             	mov    %rsp,%rbp
  4005c1:	48 83 ec 20          	sub    $0x20,%rsp
  4005c5:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4005c9:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4005cd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4005d1:	48 89 c7             	mov    %rax,%rdi
  4005d4:	e8 e9 08 00 00       	callq  400ec2 <ft_alloc_get>
  4005d9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4005dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4005e1:	48 8b 48 08          	mov    0x8(%rax),%rcx
  4005e5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4005e9:	48 8b 70 18          	mov    0x18(%rax),%rsi
  4005ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4005f1:	48 8b 00             	mov    (%rax),%rax
  4005f4:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  4005f8:	48 89 c7             	mov    %rax,%rdi
  4005fb:	e8 9f 0d 00 00       	callq  40139f <ft_alloc>
  400600:	c9                   	leaveq 
  400601:	c3                   	retq   

0000000000400602 <ft_putvoid>:
  400602:	55                   	push   %rbp
  400603:	48 89 e5             	mov    %rsp,%rbp
  400606:	48 83 ec 10          	sub    $0x10,%rsp
  40060a:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40060e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400612:	48 89 c7             	mov    %rax,%rdi
  400615:	e8 1a 16 00 00       	callq  401c34 <ft_putstr>
  40061a:	c9                   	leaveq 
  40061b:	c3                   	retq   

000000000040061c <ft_stack_randomid>:
  40061c:	55                   	push   %rbp
  40061d:	48 89 e5             	mov    %rsp,%rbp
  400620:	8b 05 32 2a 20 00    	mov    0x202a32(%rip),%eax        # 603058 <id_rand.5192>
  400626:	83 c0 01             	add    $0x1,%eax
  400629:	89 05 29 2a 20 00    	mov    %eax,0x202a29(%rip)        # 603058 <id_rand.5192>
  40062f:	8b 05 23 2a 20 00    	mov    0x202a23(%rip),%eax        # 603058 <id_rand.5192>
  400635:	89 c7                	mov    %eax,%edi
  400637:	e8 7d 16 00 00       	callq  401cb9 <ft_itoa>
  40063c:	5d                   	pop    %rbp
  40063d:	c3                   	retq   

000000000040063e <ft_stack_memmove>:
  40063e:	55                   	push   %rbp
  40063f:	48 89 e5             	mov    %rsp,%rbp
  400642:	48 83 ec 30          	sub    $0x30,%rsp
  400646:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40064a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40064e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  400652:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  400656:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  40065a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40065e:	48 89 ce             	mov    %rcx,%rsi
  400661:	48 89 c7             	mov    %rax,%rdi
  400664:	e8 13 13 00 00       	callq  40197c <ft_memmove>
  400669:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40066d:	e8 40 03 00 00       	callq  4009b2 <ft_stack_init>
  400672:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400676:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40067a:	48 8b 50 18          	mov    0x18(%rax),%rdx
  40067e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400682:	48 01 c2             	add    %rax,%rdx
  400685:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400689:	48 89 50 18          	mov    %rdx,0x18(%rax)
  40068d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400691:	c9                   	leaveq 
  400692:	c3                   	retq   

0000000000400693 <ft_stack_memalloc>:
  400693:	55                   	push   %rbp
  400694:	48 89 e5             	mov    %rsp,%rbp
  400697:	48 83 ec 20          	sub    $0x20,%rsp
  40069b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40069f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4006a3:	48 89 c7             	mov    %rax,%rdi
  4006a6:	e8 a8 13 00 00       	callq  401a53 <ft_memalloc>
  4006ab:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4006af:	e8 fe 02 00 00       	callq  4009b2 <ft_stack_init>
  4006b4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4006b8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006bc:	48 8b 50 18          	mov    0x18(%rax),%rdx
  4006c0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4006c4:	48 01 c2             	add    %rax,%rdx
  4006c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4006cb:	48 89 50 18          	mov    %rdx,0x18(%rax)
  4006cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4006d3:	c9                   	leaveq 
  4006d4:	c3                   	retq   

00000000004006d5 <ft_stack_strdup>:
  4006d5:	55                   	push   %rbp
  4006d6:	48 89 e5             	mov    %rsp,%rbp
  4006d9:	53                   	push   %rbx
  4006da:	48 83 ec 28          	sub    $0x28,%rsp
  4006de:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4006e2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4006e6:	48 89 c7             	mov    %rax,%rdi
  4006e9:	e8 7d 14 00 00       	callq  401b6b <ft_strdup>
  4006ee:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4006f2:	e8 bb 02 00 00       	callq  4009b2 <ft_stack_init>
  4006f7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4006fb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4006ff:	48 8b 58 18          	mov    0x18(%rax),%rbx
  400703:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400707:	48 89 c7             	mov    %rax,%rdi
  40070a:	e8 f6 14 00 00       	callq  401c05 <ft_strlen>
  40070f:	48 8d 14 03          	lea    (%rbx,%rax,1),%rdx
  400713:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400717:	48 89 50 18          	mov    %rdx,0x18(%rax)
  40071b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40071f:	48 83 c4 28          	add    $0x28,%rsp
  400723:	5b                   	pop    %rbx
  400724:	5d                   	pop    %rbp
  400725:	c3                   	retq   

0000000000400726 <ft_stack_display>:
  400726:	55                   	push   %rbp
  400727:	48 89 e5             	mov    %rsp,%rbp
  40072a:	48 83 ec 20          	sub    $0x20,%rsp
  40072e:	e8 7f 02 00 00       	callq  4009b2 <ft_stack_init>
  400733:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400737:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40073b:	48 8b 40 30          	mov    0x30(%rax),%rax
  40073f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400743:	e9 c4 00 00 00       	jmpq   40080c <ft_stack_display+0xe6>
  400748:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40074c:	48 8b 40 08          	mov    0x8(%rax),%rax
  400750:	48 89 c7             	mov    %rax,%rdi
  400753:	e8 34 0e 00 00       	callq  40158c <ft_vartype_get>
  400758:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40075c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400760:	48 8b 40 10          	mov    0x10(%rax),%rax
  400764:	48 85 c0             	test   %rax,%rax
  400767:	74 12                	je     40077b <ft_stack_display+0x55>
  400769:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40076d:	48 8b 40 10          	mov    0x10(%rax),%rax
  400771:	48 89 c7             	mov    %rax,%rdi
  400774:	e8 bb 14 00 00       	callq  401c34 <ft_putstr>
  400779:	eb 0a                	jmp    400785 <ft_stack_display+0x5f>
  40077b:	bf f4 1f 40 00       	mov    $0x401ff4,%edi
  400780:	e8 af 14 00 00       	callq  401c34 <ft_putstr>
  400785:	bf f6 1f 40 00       	mov    $0x401ff6,%edi
  40078a:	e8 a5 14 00 00       	callq  401c34 <ft_putstr>
  40078f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400793:	48 8b 40 08          	mov    0x8(%rax),%rax
  400797:	48 85 c0             	test   %rax,%rax
  40079a:	74 12                	je     4007ae <ft_stack_display+0x88>
  40079c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4007a0:	48 8b 40 08          	mov    0x8(%rax),%rax
  4007a4:	48 89 c7             	mov    %rax,%rdi
  4007a7:	e8 88 14 00 00       	callq  401c34 <ft_putstr>
  4007ac:	eb 0a                	jmp    4007b8 <ft_stack_display+0x92>
  4007ae:	bf f9 1f 40 00       	mov    $0x401ff9,%edi
  4007b3:	e8 7c 14 00 00       	callq  401c34 <ft_putstr>
  4007b8:	bf fd 1f 40 00       	mov    $0x401ffd,%edi
  4007bd:	e8 72 14 00 00       	callq  401c34 <ft_putstr>
  4007c2:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4007c7:	74 2d                	je     4007f6 <ft_stack_display+0xd0>
  4007c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4007cd:	48 8b 00             	mov    (%rax),%rax
  4007d0:	48 85 c0             	test   %rax,%rax
  4007d3:	74 21                	je     4007f6 <ft_stack_display+0xd0>
  4007d5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4007d9:	48 8b 40 18          	mov    0x18(%rax),%rax
  4007dd:	48 85 c0             	test   %rax,%rax
  4007e0:	74 14                	je     4007f6 <ft_stack_display+0xd0>
  4007e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4007e6:	48 8b 40 18          	mov    0x18(%rax),%rax
  4007ea:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4007ee:	48 8b 12             	mov    (%rdx),%rdx
  4007f1:	48 89 d7             	mov    %rdx,%rdi
  4007f4:	ff d0                	callq  *%rax
  4007f6:	bf 02 20 40 00       	mov    $0x402002,%edi
  4007fb:	e8 65 14 00 00       	callq  401c65 <ft_putendl>
  400800:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400804:	48 8b 40 20          	mov    0x20(%rax),%rax
  400808:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40080c:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  400811:	0f 85 31 ff ff ff    	jne    400748 <ft_stack_display+0x22>
  400817:	c9                   	leaveq 
  400818:	c3                   	retq   

0000000000400819 <ft_stack_infos>:
  400819:	55                   	push   %rbp
  40081a:	48 89 e5             	mov    %rsp,%rbp
  40081d:	48 83 ec 10          	sub    $0x10,%rsp
  400821:	e8 8c 01 00 00       	callq  4009b2 <ft_stack_init>
  400826:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40082a:	bf 03 20 40 00       	mov    $0x402003,%edi
  40082f:	e8 31 14 00 00       	callq  401c65 <ft_putendl>
  400834:	bf 1f 20 40 00       	mov    $0x40201f,%edi
  400839:	e8 f6 13 00 00       	callq  401c34 <ft_putstr>
  40083e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400842:	48 8b 40 10          	mov    0x10(%rax),%rax
  400846:	89 c2                	mov    %eax,%edx
  400848:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40084c:	48 8b 40 20          	mov    0x20(%rax),%rax
  400850:	01 d0                	add    %edx,%eax
  400852:	89 c7                	mov    %eax,%edi
  400854:	e8 3f 14 00 00       	callq  401c98 <ft_putnbr_endl>
  400859:	bf 36 20 40 00       	mov    $0x402036,%edi
  40085e:	e8 d1 13 00 00       	callq  401c34 <ft_putstr>
  400863:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400867:	48 8b 40 10          	mov    0x10(%rax),%rax
  40086b:	89 c7                	mov    %eax,%edi
  40086d:	e8 26 14 00 00       	callq  401c98 <ft_putnbr_endl>
  400872:	bf 4d 20 40 00       	mov    $0x40204d,%edi
  400877:	e8 b8 13 00 00       	callq  401c34 <ft_putstr>
  40087c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400880:	48 8b 40 20          	mov    0x20(%rax),%rax
  400884:	89 c7                	mov    %eax,%edi
  400886:	e8 0d 14 00 00       	callq  401c98 <ft_putnbr_endl>
  40088b:	bf 64 20 40 00       	mov    $0x402064,%edi
  400890:	e8 9f 13 00 00       	callq  401c34 <ft_putstr>
  400895:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400899:	48 8b 40 18          	mov    0x18(%rax),%rax
  40089d:	89 c7                	mov    %eax,%edi
  40089f:	e8 f4 13 00 00       	callq  401c98 <ft_putnbr_endl>
  4008a4:	bf 7b 20 40 00       	mov    $0x40207b,%edi
  4008a9:	e8 86 13 00 00       	callq  401c34 <ft_putstr>
  4008ae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4008b2:	48 8b 00             	mov    (%rax),%rax
  4008b5:	89 c7                	mov    %eax,%edi
  4008b7:	e8 dc 13 00 00       	callq  401c98 <ft_putnbr_endl>
  4008bc:	bf 92 20 40 00       	mov    $0x402092,%edi
  4008c1:	e8 6e 13 00 00       	callq  401c34 <ft_putstr>
  4008c6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4008ca:	48 8b 40 08          	mov    0x8(%rax),%rax
  4008ce:	89 c7                	mov    %eax,%edi
  4008d0:	e8 c3 13 00 00       	callq  401c98 <ft_putnbr_endl>
  4008d5:	bf a9 20 40 00       	mov    $0x4020a9,%edi
  4008da:	e8 86 13 00 00       	callq  401c65 <ft_putendl>
  4008df:	e8 42 fe ff ff       	callq  400726 <ft_stack_display>
  4008e4:	bf a9 20 40 00       	mov    $0x4020a9,%edi
  4008e9:	e8 77 13 00 00       	callq  401c65 <ft_putendl>
  4008ee:	c9                   	leaveq 
  4008ef:	c3                   	retq   

00000000004008f0 <ft_stack_clean>:
  4008f0:	55                   	push   %rbp
  4008f1:	48 89 e5             	mov    %rsp,%rbp
  4008f4:	48 83 ec 20          	sub    $0x20,%rsp
  4008f8:	e8 b5 00 00 00       	callq  4009b2 <ft_stack_init>
  4008fd:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400901:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  400906:	75 07                	jne    40090f <ft_stack_clean+0x1f>
  400908:	b8 00 00 00 00       	mov    $0x0,%eax
  40090d:	eb 63                	jmp    400972 <ft_stack_clean+0x82>
  40090f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400913:	48 8b 40 30          	mov    0x30(%rax),%rax
  400917:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40091b:	eb 3b                	jmp    400958 <ft_stack_clean+0x68>
  40091d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400921:	48 8b 40 20          	mov    0x20(%rax),%rax
  400925:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400929:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40092d:	48 8b 40 08          	mov    0x8(%rax),%rax
  400931:	48 85 c0             	test   %rax,%rax
  400934:	74 0e                	je     400944 <ft_stack_clean+0x54>
  400936:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40093a:	48 89 c7             	mov    %rax,%rdi
  40093d:	e8 95 01 00 00       	callq  400ad7 <ft_alloc_delete>
  400942:	eb 0c                	jmp    400950 <ft_stack_clean+0x60>
  400944:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
  400948:	48 89 c7             	mov    %rax,%rdi
  40094b:	e8 5a 11 00 00       	callq  401aaa <ft_memdel>
  400950:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400954:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400958:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40095c:	48 85 c0             	test   %rax,%rax
  40095f:	75 bc                	jne    40091d <ft_stack_clean+0x2d>
  400961:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400965:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  40096c:	00 
  40096d:	b8 00 00 00 00       	mov    $0x0,%eax
  400972:	c9                   	leaveq 
  400973:	c3                   	retq   

0000000000400974 <ft_stack_free>:
  400974:	55                   	push   %rbp
  400975:	48 89 e5             	mov    %rsp,%rbp
  400978:	48 83 ec 10          	sub    $0x10,%rsp
  40097c:	e8 31 00 00 00       	callq  4009b2 <ft_stack_init>
  400981:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400985:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400989:	48 85 c0             	test   %rax,%rax
  40098c:	75 07                	jne    400995 <ft_stack_free+0x21>
  40098e:	b8 00 00 00 00       	mov    $0x0,%eax
  400993:	eb 1b                	jmp    4009b0 <ft_stack_free+0x3c>
  400995:	e8 56 ff ff ff       	callq  4008f0 <ft_stack_clean>
  40099a:	e8 95 0e 00 00       	callq  401834 <ft_vartype_free>
  40099f:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  4009a3:	48 89 c7             	mov    %rax,%rdi
  4009a6:	e8 ff 10 00 00       	callq  401aaa <ft_memdel>
  4009ab:	b8 00 00 00 00       	mov    $0x0,%eax
  4009b0:	c9                   	leaveq 
  4009b1:	c3                   	retq   

00000000004009b2 <ft_stack_init>:
  4009b2:	55                   	push   %rbp
  4009b3:	48 89 e5             	mov    %rsp,%rbp
  4009b6:	53                   	push   %rbx
  4009b7:	48 83 ec 08          	sub    $0x8,%rsp
  4009bb:	48 8b 05 9e 26 20 00 	mov    0x20269e(%rip),%rax        # 603060 <alloc.5239>
  4009c2:	48 85 c0             	test   %rax,%rax
  4009c5:	0f 85 8d 00 00 00    	jne    400a58 <ft_stack_init+0xa6>
  4009cb:	bf 38 00 00 00       	mov    $0x38,%edi
  4009d0:	e8 7e 10 00 00       	callq  401a53 <ft_memalloc>
  4009d5:	48 89 05 84 26 20 00 	mov    %rax,0x202684(%rip)        # 603060 <alloc.5239>
  4009dc:	48 8b 05 7d 26 20 00 	mov    0x20267d(%rip),%rax        # 603060 <alloc.5239>
  4009e3:	48 85 c0             	test   %rax,%rax
  4009e6:	75 07                	jne    4009ef <ft_stack_init+0x3d>
  4009e8:	b8 00 00 00 00       	mov    $0x0,%eax
  4009ed:	eb 70                	jmp    400a5f <ft_stack_init+0xad>
  4009ef:	48 8b 05 6a 26 20 00 	mov    0x20266a(%rip),%rax        # 603060 <alloc.5239>
  4009f6:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4009fd:	48 8b 05 5c 26 20 00 	mov    0x20265c(%rip),%rax        # 603060 <alloc.5239>
  400a04:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  400a0b:	00 
  400a0c:	48 8b 05 4d 26 20 00 	mov    0x20264d(%rip),%rax        # 603060 <alloc.5239>
  400a13:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  400a1a:	00 
  400a1b:	48 8b 05 3e 26 20 00 	mov    0x20263e(%rip),%rax        # 603060 <alloc.5239>
  400a22:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  400a29:	00 
  400a2a:	48 8b 05 2f 26 20 00 	mov    0x20262f(%rip),%rax        # 603060 <alloc.5239>
  400a31:	48 c7 40 18 38 00 00 	movq   $0x38,0x18(%rax)
  400a38:	00 
  400a39:	48 8b 05 20 26 20 00 	mov    0x202620(%rip),%rax        # 603060 <alloc.5239>
  400a40:	48 c7 40 30 00 00 00 	movq   $0x0,0x30(%rax)
  400a47:	00 
  400a48:	48 8b 1d 11 26 20 00 	mov    0x202611(%rip),%rbx        # 603060 <alloc.5239>
  400a4f:	e8 c1 0a 00 00       	callq  401515 <ft_vartype_init>
  400a54:	48 89 43 28          	mov    %rax,0x28(%rbx)
  400a58:	48 8b 05 01 26 20 00 	mov    0x202601(%rip),%rax        # 603060 <alloc.5239>
  400a5f:	48 83 c4 08          	add    $0x8,%rsp
  400a63:	5b                   	pop    %rbx
  400a64:	5d                   	pop    %rbp
  400a65:	c3                   	retq   

0000000000400a66 <ft_stack_size>:
  400a66:	55                   	push   %rbp
  400a67:	48 89 e5             	mov    %rsp,%rbp
  400a6a:	53                   	push   %rbx
  400a6b:	48 83 ec 28          	sub    $0x28,%rsp
  400a6f:	e8 3e ff ff ff       	callq  4009b2 <ft_stack_init>
  400a74:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400a78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400a7c:	48 8b 40 30          	mov    0x30(%rax),%rax
  400a80:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  400a84:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%rbp)
  400a8b:	eb 39                	jmp    400ac6 <ft_stack_size+0x60>
  400a8d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400a91:	48 8b 40 10          	mov    0x10(%rax),%rax
  400a95:	48 89 c7             	mov    %rax,%rdi
  400a98:	e8 68 11 00 00       	callq  401c05 <ft_strlen>
  400a9d:	89 c3                	mov    %eax,%ebx
  400a9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400aa3:	48 8b 40 08          	mov    0x8(%rax),%rax
  400aa7:	48 89 c7             	mov    %rax,%rdi
  400aaa:	e8 56 11 00 00       	callq  401c05 <ft_strlen>
  400aaf:	8d 14 03             	lea    (%rbx,%rax,1),%edx
  400ab2:	8b 45 dc             	mov    -0x24(%rbp),%eax
  400ab5:	01 d0                	add    %edx,%eax
  400ab7:	89 45 dc             	mov    %eax,-0x24(%rbp)
  400aba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400abe:	48 8b 40 20          	mov    0x20(%rax),%rax
  400ac2:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  400ac6:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  400acb:	75 c0                	jne    400a8d <ft_stack_size+0x27>
  400acd:	8b 45 dc             	mov    -0x24(%rbp),%eax
  400ad0:	48 83 c4 28          	add    $0x28,%rsp
  400ad4:	5b                   	pop    %rbx
  400ad5:	5d                   	pop    %rbp
  400ad6:	c3                   	retq   

0000000000400ad7 <ft_alloc_delete>:
  400ad7:	55                   	push   %rbp
  400ad8:	48 89 e5             	mov    %rsp,%rbp
  400adb:	48 83 ec 20          	sub    $0x20,%rsp
  400adf:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400ae3:	e8 ca fe ff ff       	callq  4009b2 <ft_stack_init>
  400ae8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400aec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400af0:	48 8b 40 08          	mov    0x8(%rax),%rax
  400af4:	48 89 c7             	mov    %rax,%rdi
  400af7:	e8 90 0a 00 00       	callq  40158c <ft_vartype_get>
  400afc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400b00:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400b04:	48 8b 10             	mov    (%rax),%rdx
  400b07:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400b0b:	48 8b 48 08          	mov    0x8(%rax),%rcx
  400b0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400b13:	48 8b 40 18          	mov    0x18(%rax),%rax
  400b17:	48 0f af c1          	imul   %rcx,%rax
  400b1b:	48 29 c2             	sub    %rax,%rdx
  400b1e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400b22:	48 89 10             	mov    %rdx,(%rax)
  400b25:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400b29:	48 8b 50 08          	mov    0x8(%rax),%rdx
  400b2d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400b31:	48 8b 48 18          	mov    0x18(%rax),%rcx
  400b35:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400b39:	48 8b 40 08          	mov    0x8(%rax),%rax
  400b3d:	48 0f af c1          	imul   %rcx,%rax
  400b41:	48 01 c2             	add    %rax,%rdx
  400b44:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400b48:	48 89 50 08          	mov    %rdx,0x8(%rax)
  400b4c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400b50:	48 8b 40 10          	mov    0x10(%rax),%rax
  400b54:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400b58:	48 89 d7             	mov    %rdx,%rdi
  400b5b:	ff d0                	callq  *%rax
  400b5d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400b61:	48 83 c0 08          	add    $0x8,%rax
  400b65:	48 89 c7             	mov    %rax,%rdi
  400b68:	e8 d2 0f 00 00       	callq  401b3f <ft_strdel>
  400b6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400b71:	48 83 c0 10          	add    $0x10,%rax
  400b75:	48 89 c7             	mov    %rax,%rdi
  400b78:	e8 c2 0f 00 00       	callq  401b3f <ft_strdel>
  400b7d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400b81:	48 8b 40 10          	mov    0x10(%rax),%rax
  400b85:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  400b89:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400b8d:	48 89 50 10          	mov    %rdx,0x10(%rax)
  400b91:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400b95:	48 8b 40 20          	mov    0x20(%rax),%rax
  400b99:	48 8d 50 01          	lea    0x1(%rax),%rdx
  400b9d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400ba1:	48 89 50 20          	mov    %rdx,0x20(%rax)
  400ba5:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
  400ba9:	48 89 c7             	mov    %rax,%rdi
  400bac:	e8 f9 0e 00 00       	callq  401aaa <ft_memdel>
  400bb1:	b8 00 00 00 00       	mov    $0x0,%eax
  400bb6:	c9                   	leaveq 
  400bb7:	c3                   	retq   

0000000000400bb8 <ft_alloc_pdel>:
  400bb8:	55                   	push   %rbp
  400bb9:	48 89 e5             	mov    %rsp,%rbp
  400bbc:	48 83 ec 30          	sub    $0x30,%rsp
  400bc0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  400bc4:	e8 e9 fd ff ff       	callq  4009b2 <ft_stack_init>
  400bc9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400bcd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  400bd2:	74 0d                	je     400be1 <ft_alloc_pdel+0x29>
  400bd4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400bd8:	48 8b 40 30          	mov    0x30(%rax),%rax
  400bdc:	48 85 c0             	test   %rax,%rax
  400bdf:	75 0a                	jne    400beb <ft_alloc_pdel+0x33>
  400be1:	b8 00 00 00 00       	mov    $0x0,%eax
  400be6:	e9 84 00 00 00       	jmpq   400c6f <ft_alloc_pdel+0xb7>
  400beb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400bef:	48 8b 40 30          	mov    0x30(%rax),%rax
  400bf3:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  400bf7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400bfb:	48 8b 40 20          	mov    0x20(%rax),%rax
  400bff:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400c03:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  400c0a:	00 
  400c0b:	eb 56                	jmp    400c63 <ft_alloc_pdel+0xab>
  400c0d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400c11:	48 8b 40 20          	mov    0x20(%rax),%rax
  400c15:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400c19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400c1d:	48 8b 00             	mov    (%rax),%rax
  400c20:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  400c24:	75 2d                	jne    400c53 <ft_alloc_pdel+0x9b>
  400c26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400c2a:	48 89 c7             	mov    %rax,%rdi
  400c2d:	e8 a5 fe ff ff       	callq  400ad7 <ft_alloc_delete>
  400c32:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  400c37:	75 0e                	jne    400c47 <ft_alloc_pdel+0x8f>
  400c39:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400c3d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  400c41:	48 89 50 30          	mov    %rdx,0x30(%rax)
  400c45:	eb 0c                	jmp    400c53 <ft_alloc_pdel+0x9b>
  400c47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400c4b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  400c4f:	48 89 50 20          	mov    %rdx,0x20(%rax)
  400c53:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400c57:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400c5b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400c5f:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  400c63:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  400c68:	75 a3                	jne    400c0d <ft_alloc_pdel+0x55>
  400c6a:	b8 00 00 00 00       	mov    $0x0,%eax
  400c6f:	c9                   	leaveq 
  400c70:	c3                   	retq   

0000000000400c71 <ft_alloc_rename>:
  400c71:	55                   	push   %rbp
  400c72:	48 89 e5             	mov    %rsp,%rbp
  400c75:	48 83 ec 20          	sub    $0x20,%rsp
  400c79:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400c7d:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  400c81:	e8 2c fd ff ff       	callq  4009b2 <ft_stack_init>
  400c86:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400c8a:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  400c8f:	74 0d                	je     400c9e <ft_alloc_rename+0x2d>
  400c91:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400c95:	48 8b 40 30          	mov    0x30(%rax),%rax
  400c99:	48 85 c0             	test   %rax,%rax
  400c9c:	75 07                	jne    400ca5 <ft_alloc_rename+0x34>
  400c9e:	b8 00 00 00 00       	mov    $0x0,%eax
  400ca3:	eb 6b                	jmp    400d10 <ft_alloc_rename+0x9f>
  400ca5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400ca9:	48 8b 40 30          	mov    0x30(%rax),%rax
  400cad:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400cb1:	eb 51                	jmp    400d04 <ft_alloc_rename+0x93>
  400cb3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400cb7:	48 8b 40 10          	mov    0x10(%rax),%rax
  400cbb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400cbf:	48 89 d6             	mov    %rdx,%rsi
  400cc2:	48 89 c7             	mov    %rax,%rdi
  400cc5:	e8 1b 0e 00 00       	callq  401ae5 <ft_strcmp>
  400cca:	85 c0                	test   %eax,%eax
  400ccc:	75 2a                	jne    400cf8 <ft_alloc_rename+0x87>
  400cce:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400cd2:	48 83 c0 10          	add    $0x10,%rax
  400cd6:	48 89 c7             	mov    %rax,%rdi
  400cd9:	e8 61 0e 00 00       	callq  401b3f <ft_strdel>
  400cde:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400ce2:	48 89 c7             	mov    %rax,%rdi
  400ce5:	e8 81 0e 00 00       	callq  401b6b <ft_strdup>
  400cea:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  400cee:	48 89 42 10          	mov    %rax,0x10(%rdx)
  400cf2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400cf6:	eb 18                	jmp    400d10 <ft_alloc_rename+0x9f>
  400cf8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400cfc:	48 8b 40 20          	mov    0x20(%rax),%rax
  400d00:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400d04:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  400d09:	75 a8                	jne    400cb3 <ft_alloc_rename+0x42>
  400d0b:	b8 00 00 00 00       	mov    $0x0,%eax
  400d10:	c9                   	leaveq 
  400d11:	c3                   	retq   

0000000000400d12 <ft_alloc_del>:
  400d12:	55                   	push   %rbp
  400d13:	48 89 e5             	mov    %rsp,%rbp
  400d16:	48 83 ec 30          	sub    $0x30,%rsp
  400d1a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  400d1e:	e8 8f fc ff ff       	callq  4009b2 <ft_stack_init>
  400d23:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400d27:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  400d2c:	74 0d                	je     400d3b <ft_alloc_del+0x29>
  400d2e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400d32:	48 8b 40 30          	mov    0x30(%rax),%rax
  400d36:	48 85 c0             	test   %rax,%rax
  400d39:	75 0a                	jne    400d45 <ft_alloc_del+0x33>
  400d3b:	b8 00 00 00 00       	mov    $0x0,%eax
  400d40:	e9 9f 00 00 00       	jmpq   400de4 <ft_alloc_del+0xd2>
  400d45:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400d49:	48 8b 40 30          	mov    0x30(%rax),%rax
  400d4d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  400d51:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400d55:	48 8b 40 20          	mov    0x20(%rax),%rax
  400d59:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400d5d:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
  400d64:	00 
  400d65:	eb 71                	jmp    400dd8 <ft_alloc_del+0xc6>
  400d67:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400d6b:	48 8b 40 20          	mov    0x20(%rax),%rax
  400d6f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400d73:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400d77:	48 8b 40 10          	mov    0x10(%rax),%rax
  400d7b:	48 85 c0             	test   %rax,%rax
  400d7e:	74 48                	je     400dc8 <ft_alloc_del+0xb6>
  400d80:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400d84:	48 8b 40 10          	mov    0x10(%rax),%rax
  400d88:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  400d8c:	48 89 d6             	mov    %rdx,%rsi
  400d8f:	48 89 c7             	mov    %rax,%rdi
  400d92:	e8 4e 0d 00 00       	callq  401ae5 <ft_strcmp>
  400d97:	85 c0                	test   %eax,%eax
  400d99:	75 2d                	jne    400dc8 <ft_alloc_del+0xb6>
  400d9b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400d9f:	48 89 c7             	mov    %rax,%rdi
  400da2:	e8 30 fd ff ff       	callq  400ad7 <ft_alloc_delete>
  400da7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  400dac:	75 0e                	jne    400dbc <ft_alloc_del+0xaa>
  400dae:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400db2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  400db6:	48 89 50 30          	mov    %rdx,0x30(%rax)
  400dba:	eb 0c                	jmp    400dc8 <ft_alloc_del+0xb6>
  400dbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400dc0:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  400dc4:	48 89 50 20          	mov    %rdx,0x20(%rax)
  400dc8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400dcc:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400dd0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400dd4:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  400dd8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  400ddd:	75 88                	jne    400d67 <ft_alloc_del+0x55>
  400ddf:	b8 00 00 00 00       	mov    $0x0,%eax
  400de4:	c9                   	leaveq 
  400de5:	c3                   	retq   

0000000000400de6 <ft_alloc_vget>:
  400de6:	55                   	push   %rbp
  400de7:	48 89 e5             	mov    %rsp,%rbp
  400dea:	48 83 ec 20          	sub    $0x20,%rsp
  400dee:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400df2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400df6:	48 89 c7             	mov    %rax,%rdi
  400df9:	e8 c4 00 00 00       	callq  400ec2 <ft_alloc_get>
  400dfe:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400e02:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  400e07:	74 15                	je     400e1e <ft_alloc_vget+0x38>
  400e09:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400e0d:	48 8b 00             	mov    (%rax),%rax
  400e10:	48 85 c0             	test   %rax,%rax
  400e13:	74 09                	je     400e1e <ft_alloc_vget+0x38>
  400e15:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400e19:	48 8b 00             	mov    (%rax),%rax
  400e1c:	eb 05                	jmp    400e23 <ft_alloc_vget+0x3d>
  400e1e:	b8 00 00 00 00       	mov    $0x0,%eax
  400e23:	c9                   	leaveq 
  400e24:	c3                   	retq   

0000000000400e25 <ft_alloc_nget>:
  400e25:	55                   	push   %rbp
  400e26:	48 89 e5             	mov    %rsp,%rbp
  400e29:	48 83 ec 20          	sub    $0x20,%rsp
  400e2d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400e31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400e35:	48 89 c7             	mov    %rax,%rdi
  400e38:	e8 27 00 00 00       	callq  400e64 <ft_alloc_getvoid>
  400e3d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400e41:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  400e46:	74 15                	je     400e5d <ft_alloc_nget+0x38>
  400e48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400e4c:	48 8b 00             	mov    (%rax),%rax
  400e4f:	48 85 c0             	test   %rax,%rax
  400e52:	74 09                	je     400e5d <ft_alloc_nget+0x38>
  400e54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400e58:	48 8b 00             	mov    (%rax),%rax
  400e5b:	eb 05                	jmp    400e62 <ft_alloc_nget+0x3d>
  400e5d:	b8 00 00 00 00       	mov    $0x0,%eax
  400e62:	c9                   	leaveq 
  400e63:	c3                   	retq   

0000000000400e64 <ft_alloc_getvoid>:
  400e64:	55                   	push   %rbp
  400e65:	48 89 e5             	mov    %rsp,%rbp
  400e68:	48 83 ec 20          	sub    $0x20,%rsp
  400e6c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400e70:	e8 3d fb ff ff       	callq  4009b2 <ft_stack_init>
  400e75:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400e79:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  400e7e:	75 07                	jne    400e87 <ft_alloc_getvoid+0x23>
  400e80:	b8 00 00 00 00       	mov    $0x0,%eax
  400e85:	eb 39                	jmp    400ec0 <ft_alloc_getvoid+0x5c>
  400e87:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400e8b:	48 8b 40 30          	mov    0x30(%rax),%rax
  400e8f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400e93:	eb 1f                	jmp    400eb4 <ft_alloc_getvoid+0x50>
  400e95:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400e99:	48 8b 00             	mov    (%rax),%rax
  400e9c:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
  400ea0:	75 06                	jne    400ea8 <ft_alloc_getvoid+0x44>
  400ea2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400ea6:	eb 18                	jmp    400ec0 <ft_alloc_getvoid+0x5c>
  400ea8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400eac:	48 8b 40 20          	mov    0x20(%rax),%rax
  400eb0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400eb4:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  400eb9:	75 da                	jne    400e95 <ft_alloc_getvoid+0x31>
  400ebb:	b8 00 00 00 00       	mov    $0x0,%eax
  400ec0:	c9                   	leaveq 
  400ec1:	c3                   	retq   

0000000000400ec2 <ft_alloc_get>:
  400ec2:	55                   	push   %rbp
  400ec3:	48 89 e5             	mov    %rsp,%rbp
  400ec6:	48 83 ec 20          	sub    $0x20,%rsp
  400eca:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400ece:	e8 df fa ff ff       	callq  4009b2 <ft_stack_init>
  400ed3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400ed7:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  400edc:	75 07                	jne    400ee5 <ft_alloc_get+0x23>
  400ede:	b8 00 00 00 00       	mov    $0x0,%eax
  400ee3:	eb 47                	jmp    400f2c <ft_alloc_get+0x6a>
  400ee5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400ee9:	48 8b 40 30          	mov    0x30(%rax),%rax
  400eed:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400ef1:	eb 2d                	jmp    400f20 <ft_alloc_get+0x5e>
  400ef3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400ef7:	48 8b 40 10          	mov    0x10(%rax),%rax
  400efb:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400eff:	48 89 d6             	mov    %rdx,%rsi
  400f02:	48 89 c7             	mov    %rax,%rdi
  400f05:	e8 db 0b 00 00       	callq  401ae5 <ft_strcmp>
  400f0a:	85 c0                	test   %eax,%eax
  400f0c:	75 06                	jne    400f14 <ft_alloc_get+0x52>
  400f0e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400f12:	eb 18                	jmp    400f2c <ft_alloc_get+0x6a>
  400f14:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400f18:	48 8b 40 20          	mov    0x20(%rax),%rax
  400f1c:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400f20:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  400f25:	75 cc                	jne    400ef3 <ft_alloc_get+0x31>
  400f27:	b8 00 00 00 00       	mov    $0x0,%eax
  400f2c:	c9                   	leaveq 
  400f2d:	c3                   	retq   

0000000000400f2e <ft_alloc_more>:
  400f2e:	55                   	push   %rbp
  400f2f:	48 89 e5             	mov    %rsp,%rbp
  400f32:	48 83 ec 30          	sub    $0x30,%rsp
  400f36:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400f3a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  400f3e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  400f42:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400f46:	48 89 c7             	mov    %rax,%rdi
  400f49:	e8 3e 06 00 00       	callq  40158c <ft_vartype_get>
  400f4e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400f52:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400f56:	48 8b 40 10          	mov    0x10(%rax),%rax
  400f5a:	48 8d 50 01          	lea    0x1(%rax),%rdx
  400f5e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400f62:	48 89 50 10          	mov    %rdx,0x10(%rax)
  400f66:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400f6a:	48 8b 10             	mov    (%rax),%rdx
  400f6d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400f71:	48 8b 40 08          	mov    0x8(%rax),%rax
  400f75:	48 0f af 45 d8       	imul   -0x28(%rbp),%rax
  400f7a:	48 01 c2             	add    %rax,%rdx
  400f7d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400f81:	48 89 10             	mov    %rdx,(%rax)
  400f84:	c9                   	leaveq 
  400f85:	c3                   	retq   

0000000000400f86 <ft_alloc_type>:
  400f86:	55                   	push   %rbp
  400f87:	48 89 e5             	mov    %rsp,%rbp
  400f8a:	48 83 ec 20          	sub    $0x20,%rsp
  400f8e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400f92:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  400f97:	74 45                	je     400fde <ft_alloc_type+0x58>
  400f99:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400f9d:	48 89 c7             	mov    %rax,%rdi
  400fa0:	e8 1d ff ff ff       	callq  400ec2 <ft_alloc_get>
  400fa5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400fa9:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  400fae:	74 2e                	je     400fde <ft_alloc_type+0x58>
  400fb0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400fb4:	48 8b 40 08          	mov    0x8(%rax),%rax
  400fb8:	48 85 c0             	test   %rax,%rax
  400fbb:	74 21                	je     400fde <ft_alloc_type+0x58>
  400fbd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400fc1:	48 8b 40 08          	mov    0x8(%rax),%rax
  400fc5:	48 89 c7             	mov    %rax,%rdi
  400fc8:	e8 bf 05 00 00       	callq  40158c <ft_vartype_get>
  400fcd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400fd1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  400fd6:	74 06                	je     400fde <ft_alloc_type+0x58>
  400fd8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400fdc:	eb 05                	jmp    400fe3 <ft_alloc_type+0x5d>
  400fde:	b8 00 00 00 00       	mov    $0x0,%eax
  400fe3:	c9                   	leaveq 
  400fe4:	c3                   	retq   

0000000000400fe5 <ft_alloc_copy>:
  400fe5:	55                   	push   %rbp
  400fe6:	48 89 e5             	mov    %rsp,%rbp
  400fe9:	48 83 ec 20          	sub    $0x20,%rsp
  400fed:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400ff1:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  400ff5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  400ffa:	74 45                	je     401041 <ft_alloc_copy+0x5c>
  400ffc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401000:	48 89 c7             	mov    %rax,%rdi
  401003:	e8 7e ff ff ff       	callq  400f86 <ft_alloc_type>
  401008:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40100c:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401011:	74 2e                	je     401041 <ft_alloc_copy+0x5c>
  401013:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  401018:	74 27                	je     401041 <ft_alloc_copy+0x5c>
  40101a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40101e:	48 8b 40 20          	mov    0x20(%rax),%rax
  401022:	48 85 c0             	test   %rax,%rax
  401025:	74 1a                	je     401041 <ft_alloc_copy+0x5c>
  401027:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40102b:	48 8b 40 20          	mov    0x20(%rax),%rax
  40102f:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  401033:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401037:	48 89 ce             	mov    %rcx,%rsi
  40103a:	48 89 d7             	mov    %rdx,%rdi
  40103d:	ff d0                	callq  *%rax
  40103f:	eb 05                	jmp    401046 <ft_alloc_copy+0x61>
  401041:	b8 00 00 00 00       	mov    $0x0,%eax
  401046:	c9                   	leaveq 
  401047:	c3                   	retq   

0000000000401048 <ft_malloc>:
  401048:	55                   	push   %rbp
  401049:	48 89 e5             	mov    %rsp,%rbp
  40104c:	48 83 ec 30          	sub    $0x30,%rsp
  401050:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  401054:	e8 59 f9 ff ff       	callq  4009b2 <ft_stack_init>
  401059:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40105d:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  401062:	75 0a                	jne    40106e <ft_malloc+0x26>
  401064:	b8 00 00 00 00       	mov    $0x0,%eax
  401069:	e9 ed 00 00 00       	jmpq   40115b <ft_malloc+0x113>
  40106e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401072:	48 8b 40 30          	mov    0x30(%rax),%rax
  401076:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40107a:	eb 0c                	jmp    401088 <ft_malloc+0x40>
  40107c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401080:	48 8b 40 20          	mov    0x20(%rax),%rax
  401084:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  401088:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40108d:	74 0d                	je     40109c <ft_malloc+0x54>
  40108f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401093:	48 8b 40 20          	mov    0x20(%rax),%rax
  401097:	48 85 c0             	test   %rax,%rax
  40109a:	75 e0                	jne    40107c <ft_malloc+0x34>
  40109c:	bf 28 00 00 00       	mov    $0x28,%edi
  4010a1:	e8 ed f5 ff ff       	callq  400693 <ft_stack_memalloc>
  4010a6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4010aa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4010af:	75 0a                	jne    4010bb <ft_malloc+0x73>
  4010b1:	b8 00 00 00 00       	mov    $0x0,%eax
  4010b6:	e9 a0 00 00 00       	jmpq   40115b <ft_malloc+0x113>
  4010bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4010bf:	48 89 c7             	mov    %rax,%rdi
  4010c2:	e8 cc f5 ff ff       	callq  400693 <ft_stack_memalloc>
  4010c7:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4010cb:	48 89 02             	mov    %rax,(%rdx)
  4010ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4010d2:	48 8b 00             	mov    (%rax),%rax
  4010d5:	48 85 c0             	test   %rax,%rax
  4010d8:	75 07                	jne    4010e1 <ft_malloc+0x99>
  4010da:	b8 00 00 00 00       	mov    $0x0,%eax
  4010df:	eb 7a                	jmp    40115b <ft_malloc+0x113>
  4010e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4010e5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4010e9:	48 89 50 18          	mov    %rdx,0x18(%rax)
  4010ed:	e8 2a f5 ff ff       	callq  40061c <ft_stack_randomid>
  4010f2:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4010f6:	48 89 42 10          	mov    %rax,0x10(%rdx)
  4010fa:	bf c5 20 40 00       	mov    $0x4020c5,%edi
  4010ff:	e8 d1 f5 ff ff       	callq  4006d5 <ft_stack_strdup>
  401104:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401108:	48 89 42 08          	mov    %rax,0x8(%rdx)
  40110c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401110:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  401117:	00 
  401118:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  40111c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401120:	48 89 c6             	mov    %rax,%rsi
  401123:	bf c5 20 40 00       	mov    $0x4020c5,%edi
  401128:	e8 01 fe ff ff       	callq  400f2e <ft_alloc_more>
  40112d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401131:	48 8b 40 30          	mov    0x30(%rax),%rax
  401135:	48 85 c0             	test   %rax,%rax
  401138:	75 0e                	jne    401148 <ft_malloc+0x100>
  40113a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40113e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401142:	48 89 50 30          	mov    %rdx,0x30(%rax)
  401146:	eb 0c                	jmp    401154 <ft_malloc+0x10c>
  401148:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40114c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401150:	48 89 50 20          	mov    %rdx,0x20(%rax)
  401154:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401158:	48 8b 00             	mov    (%rax),%rax
  40115b:	c9                   	leaveq 
  40115c:	c3                   	retq   

000000000040115d <ft_calloc>:
  40115d:	55                   	push   %rbp
  40115e:	48 89 e5             	mov    %rsp,%rbp
  401161:	48 83 ec 40          	sub    $0x40,%rsp
  401165:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  401169:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  40116d:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  401171:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  401175:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40117a:	74 21                	je     40119d <ft_calloc+0x40>
  40117c:	e8 31 f8 ff ff       	callq  4009b2 <ft_stack_init>
  401181:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401185:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  40118a:	74 11                	je     40119d <ft_calloc+0x40>
  40118c:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  401190:	48 89 c7             	mov    %rax,%rdi
  401193:	e8 f4 03 00 00       	callq  40158c <ft_vartype_get>
  401198:	48 85 c0             	test   %rax,%rax
  40119b:	75 0a                	jne    4011a7 <ft_calloc+0x4a>
  40119d:	b8 00 00 00 00       	mov    $0x0,%eax
  4011a2:	e9 eb 00 00 00       	jmpq   401292 <ft_calloc+0x135>
  4011a7:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4011ab:	48 8b 40 30          	mov    0x30(%rax),%rax
  4011af:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4011b3:	eb 0c                	jmp    4011c1 <ft_calloc+0x64>
  4011b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4011b9:	48 8b 40 20          	mov    0x20(%rax),%rax
  4011bd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4011c1:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4011c6:	74 0d                	je     4011d5 <ft_calloc+0x78>
  4011c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4011cc:	48 8b 40 20          	mov    0x20(%rax),%rax
  4011d0:	48 85 c0             	test   %rax,%rax
  4011d3:	75 e0                	jne    4011b5 <ft_calloc+0x58>
  4011d5:	bf 28 00 00 00       	mov    $0x28,%edi
  4011da:	e8 b4 f4 ff ff       	callq  400693 <ft_stack_memalloc>
  4011df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4011e3:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4011e8:	75 0a                	jne    4011f4 <ft_calloc+0x97>
  4011ea:	b8 00 00 00 00       	mov    $0x0,%eax
  4011ef:	e9 9e 00 00 00       	jmpq   401292 <ft_calloc+0x135>
  4011f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4011f8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4011fc:	48 89 10             	mov    %rdx,(%rax)
  4011ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401203:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  401207:	48 89 50 18          	mov    %rdx,0x18(%rax)
  40120b:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  401210:	74 0e                	je     401220 <ft_calloc+0xc3>
  401212:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  401216:	48 89 c7             	mov    %rax,%rdi
  401219:	e8 b7 f4 ff ff       	callq  4006d5 <ft_stack_strdup>
  40121e:	eb 05                	jmp    401225 <ft_calloc+0xc8>
  401220:	e8 f7 f3 ff ff       	callq  40061c <ft_stack_randomid>
  401225:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401229:	48 89 42 10          	mov    %rax,0x10(%rdx)
  40122d:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  401231:	48 89 c7             	mov    %rax,%rdi
  401234:	e8 9c f4 ff ff       	callq  4006d5 <ft_stack_strdup>
  401239:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40123d:	48 89 42 08          	mov    %rax,0x8(%rdx)
  401241:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401245:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  40124c:	00 
  40124d:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  401251:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401255:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  401259:	48 89 ce             	mov    %rcx,%rsi
  40125c:	48 89 c7             	mov    %rax,%rdi
  40125f:	e8 ca fc ff ff       	callq  400f2e <ft_alloc_more>
  401264:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401268:	48 8b 40 30          	mov    0x30(%rax),%rax
  40126c:	48 85 c0             	test   %rax,%rax
  40126f:	75 0e                	jne    40127f <ft_calloc+0x122>
  401271:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401275:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401279:	48 89 50 30          	mov    %rdx,0x30(%rax)
  40127d:	eb 0c                	jmp    40128b <ft_calloc+0x12e>
  40127f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401283:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401287:	48 89 50 20          	mov    %rdx,0x20(%rax)
  40128b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40128f:	48 8b 00             	mov    (%rax),%rax
  401292:	c9                   	leaveq 
  401293:	c3                   	retq   

0000000000401294 <ft_alloc_include>:
  401294:	55                   	push   %rbp
  401295:	48 89 e5             	mov    %rsp,%rbp
  401298:	48 83 ec 30          	sub    $0x30,%rsp
  40129c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4012a0:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4012a4:	e8 09 f7 ff ff       	callq  4009b2 <ft_stack_init>
  4012a9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4012ad:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4012b2:	75 0a                	jne    4012be <ft_alloc_include+0x2a>
  4012b4:	b8 00 00 00 00       	mov    $0x0,%eax
  4012b9:	e9 df 00 00 00       	jmpq   40139d <ft_alloc_include+0x109>
  4012be:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4012c2:	48 8b 40 30          	mov    0x30(%rax),%rax
  4012c6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4012ca:	eb 0c                	jmp    4012d8 <ft_alloc_include+0x44>
  4012cc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4012d0:	48 8b 40 20          	mov    0x20(%rax),%rax
  4012d4:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4012d8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4012dd:	74 0d                	je     4012ec <ft_alloc_include+0x58>
  4012df:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4012e3:	48 8b 40 20          	mov    0x20(%rax),%rax
  4012e7:	48 85 c0             	test   %rax,%rax
  4012ea:	75 e0                	jne    4012cc <ft_alloc_include+0x38>
  4012ec:	bf 28 00 00 00       	mov    $0x28,%edi
  4012f1:	e8 9d f3 ff ff       	callq  400693 <ft_stack_memalloc>
  4012f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4012fa:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4012ff:	75 0a                	jne    40130b <ft_alloc_include+0x77>
  401301:	b8 00 00 00 00       	mov    $0x0,%eax
  401306:	e9 92 00 00 00       	jmpq   40139d <ft_alloc_include+0x109>
  40130b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40130f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  401313:	48 89 10             	mov    %rdx,(%rax)
  401316:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40131a:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40131e:	48 89 50 18          	mov    %rdx,0x18(%rax)
  401322:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401326:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
  40132d:	00 
  40132e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401332:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
  401339:	00 
  40133a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40133e:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  401345:	00 
  401346:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40134a:	48 8b 40 10          	mov    0x10(%rax),%rax
  40134e:	48 8d 50 01          	lea    0x1(%rax),%rdx
  401352:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401356:	48 89 50 10          	mov    %rdx,0x10(%rax)
  40135a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40135e:	48 8b 10             	mov    (%rax),%rdx
  401361:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  401365:	48 01 c2             	add    %rax,%rdx
  401368:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40136c:	48 89 10             	mov    %rdx,(%rax)
  40136f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401373:	48 8b 40 30          	mov    0x30(%rax),%rax
  401377:	48 85 c0             	test   %rax,%rax
  40137a:	75 0e                	jne    40138a <ft_alloc_include+0xf6>
  40137c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401380:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401384:	48 89 50 30          	mov    %rdx,0x30(%rax)
  401388:	eb 0c                	jmp    401396 <ft_alloc_include+0x102>
  40138a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40138e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401392:	48 89 50 20          	mov    %rdx,0x20(%rax)
  401396:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40139a:	48 8b 00             	mov    (%rax),%rax
  40139d:	c9                   	leaveq 
  40139e:	c3                   	retq   

000000000040139f <ft_alloc>:
  40139f:	55                   	push   %rbp
  4013a0:	48 89 e5             	mov    %rsp,%rbp
  4013a3:	48 83 ec 40          	sub    $0x40,%rsp
  4013a7:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4013ab:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4013af:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4013b3:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
  4013b7:	e8 f6 f5 ff ff       	callq  4009b2 <ft_stack_init>
  4013bc:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4013c0:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4013c5:	74 11                	je     4013d8 <ft_alloc+0x39>
  4013c7:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4013cb:	48 89 c7             	mov    %rax,%rdi
  4013ce:	e8 b9 01 00 00       	callq  40158c <ft_vartype_get>
  4013d3:	48 85 c0             	test   %rax,%rax
  4013d6:	75 0a                	jne    4013e2 <ft_alloc+0x43>
  4013d8:	b8 00 00 00 00       	mov    $0x0,%eax
  4013dd:	e9 31 01 00 00       	jmpq   401513 <ft_alloc+0x174>
  4013e2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4013e6:	48 8b 40 30          	mov    0x30(%rax),%rax
  4013ea:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4013ee:	eb 0c                	jmp    4013fc <ft_alloc+0x5d>
  4013f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4013f4:	48 8b 40 20          	mov    0x20(%rax),%rax
  4013f8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4013fc:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401401:	74 0d                	je     401410 <ft_alloc+0x71>
  401403:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401407:	48 8b 40 20          	mov    0x20(%rax),%rax
  40140b:	48 85 c0             	test   %rax,%rax
  40140e:	75 e0                	jne    4013f0 <ft_alloc+0x51>
  401410:	bf 28 00 00 00       	mov    $0x28,%edi
  401415:	e8 79 f2 ff ff       	callq  400693 <ft_stack_memalloc>
  40141a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40141e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401423:	75 0a                	jne    40142f <ft_alloc+0x90>
  401425:	b8 00 00 00 00       	mov    $0x0,%eax
  40142a:	e9 e4 00 00 00       	jmpq   401513 <ft_alloc+0x174>
  40142f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  401433:	48 89 c7             	mov    %rax,%rdi
  401436:	e8 58 f2 ff ff       	callq  400693 <ft_stack_memalloc>
  40143b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40143f:	48 89 02             	mov    %rax,(%rdx)
  401442:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401446:	48 8b 00             	mov    (%rax),%rax
  401449:	48 85 c0             	test   %rax,%rax
  40144c:	75 0a                	jne    401458 <ft_alloc+0xb9>
  40144e:	b8 00 00 00 00       	mov    $0x0,%eax
  401453:	e9 bb 00 00 00       	jmpq   401513 <ft_alloc+0x174>
  401458:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  40145d:	74 21                	je     401480 <ft_alloc+0xe1>
  40145f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401463:	48 8b 00             	mov    (%rax),%rax
  401466:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  40146a:	48 8b 4d d8          	mov    -0x28(%rbp),%rcx
  40146e:	48 89 ce             	mov    %rcx,%rsi
  401471:	48 89 c7             	mov    %rax,%rdi
  401474:	e8 c5 f1 ff ff       	callq  40063e <ft_stack_memmove>
  401479:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40147d:	48 89 02             	mov    %rax,(%rdx)
  401480:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401484:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  401488:	48 89 50 18          	mov    %rdx,0x18(%rax)
  40148c:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  401491:	74 0e                	je     4014a1 <ft_alloc+0x102>
  401493:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  401497:	48 89 c7             	mov    %rax,%rdi
  40149a:	e8 36 f2 ff ff       	callq  4006d5 <ft_stack_strdup>
  40149f:	eb 05                	jmp    4014a6 <ft_alloc+0x107>
  4014a1:	e8 76 f1 ff ff       	callq  40061c <ft_stack_randomid>
  4014a6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4014aa:	48 89 42 10          	mov    %rax,0x10(%rdx)
  4014ae:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4014b2:	48 89 c7             	mov    %rax,%rdi
  4014b5:	e8 1b f2 ff ff       	callq  4006d5 <ft_stack_strdup>
  4014ba:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4014be:	48 89 42 08          	mov    %rax,0x8(%rdx)
  4014c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4014c6:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  4014cd:	00 
  4014ce:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4014d2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  4014d6:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4014da:	48 89 ce             	mov    %rcx,%rsi
  4014dd:	48 89 c7             	mov    %rax,%rdi
  4014e0:	e8 49 fa ff ff       	callq  400f2e <ft_alloc_more>
  4014e5:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4014e9:	48 8b 40 30          	mov    0x30(%rax),%rax
  4014ed:	48 85 c0             	test   %rax,%rax
  4014f0:	75 0e                	jne    401500 <ft_alloc+0x161>
  4014f2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4014f6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4014fa:	48 89 50 30          	mov    %rdx,0x30(%rax)
  4014fe:	eb 0c                	jmp    40150c <ft_alloc+0x16d>
  401500:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401504:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401508:	48 89 50 20          	mov    %rdx,0x20(%rax)
  40150c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401510:	48 8b 00             	mov    (%rax),%rax
  401513:	c9                   	leaveq 
  401514:	c3                   	retq   

0000000000401515 <ft_vartype_init>:
  401515:	55                   	push   %rbp
  401516:	48 89 e5             	mov    %rsp,%rbp
  401519:	48 83 ec 10          	sub    $0x10,%rsp
  40151d:	bf 30 00 00 00       	mov    $0x30,%edi
  401522:	e8 6c f1 ff ff       	callq  400693 <ft_stack_memalloc>
  401527:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40152b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401530:	75 07                	jne    401539 <ft_vartype_init+0x24>
  401532:	b8 00 00 00 00       	mov    $0x0,%eax
  401537:	eb 51                	jmp    40158a <ft_vartype_init+0x75>
  401539:	bf c5 20 40 00       	mov    $0x4020c5,%edi
  40153e:	e8 92 f1 ff ff       	callq  4006d5 <ft_stack_strdup>
  401543:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401547:	48 89 02             	mov    %rax,(%rdx)
  40154a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40154e:	48 c7 40 08 01 00 00 	movq   $0x1,0x8(%rax)
  401555:	00 
  401556:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40155a:	48 c7 40 10 aa 1a 40 	movq   $0x401aaa,0x10(%rax)
  401561:	00 
  401562:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401566:	48 c7 40 18 02 06 40 	movq   $0x400602,0x18(%rax)
  40156d:	00 
  40156e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401572:	48 c7 40 20 bd 05 40 	movq   $0x4005bd,0x20(%rax)
  401579:	00 
  40157a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40157e:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
  401585:	00 
  401586:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40158a:	c9                   	leaveq 
  40158b:	c3                   	retq   

000000000040158c <ft_vartype_get>:
  40158c:	55                   	push   %rbp
  40158d:	48 89 e5             	mov    %rsp,%rbp
  401590:	48 83 ec 20          	sub    $0x20,%rsp
  401594:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401598:	e8 15 f4 ff ff       	callq  4009b2 <ft_stack_init>
  40159d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4015a1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4015a5:	48 8b 40 28          	mov    0x28(%rax),%rax
  4015a9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4015ad:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4015b2:	75 07                	jne    4015bb <ft_vartype_get+0x2f>
  4015b4:	b8 00 00 00 00       	mov    $0x0,%eax
  4015b9:	eb 4d                	jmp    401608 <ft_vartype_get+0x7c>
  4015bb:	eb 38                	jmp    4015f5 <ft_vartype_get+0x69>
  4015bd:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4015c1:	48 8b 00             	mov    (%rax),%rax
  4015c4:	48 85 c0             	test   %rax,%rax
  4015c7:	74 20                	je     4015e9 <ft_vartype_get+0x5d>
  4015c9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4015cd:	48 8b 00             	mov    (%rax),%rax
  4015d0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4015d4:	48 89 d6             	mov    %rdx,%rsi
  4015d7:	48 89 c7             	mov    %rax,%rdi
  4015da:	e8 06 05 00 00       	callq  401ae5 <ft_strcmp>
  4015df:	85 c0                	test   %eax,%eax
  4015e1:	75 06                	jne    4015e9 <ft_vartype_get+0x5d>
  4015e3:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4015e7:	eb 1f                	jmp    401608 <ft_vartype_get+0x7c>
  4015e9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4015ed:	48 8b 40 28          	mov    0x28(%rax),%rax
  4015f1:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4015f5:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4015fa:	74 07                	je     401603 <ft_vartype_get+0x77>
  4015fc:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  401601:	75 ba                	jne    4015bd <ft_vartype_get+0x31>
  401603:	b8 00 00 00 00       	mov    $0x0,%eax
  401608:	c9                   	leaveq 
  401609:	c3                   	retq   

000000000040160a <ft_vartype_addcpy>:
  40160a:	55                   	push   %rbp
  40160b:	48 89 e5             	mov    %rsp,%rbp
  40160e:	48 83 ec 20          	sub    $0x20,%rsp
  401612:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401616:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40161a:	e8 93 f3 ff ff       	callq  4009b2 <ft_stack_init>
  40161f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401623:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401628:	74 18                	je     401642 <ft_vartype_addcpy+0x38>
  40162a:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  40162f:	74 11                	je     401642 <ft_vartype_addcpy+0x38>
  401631:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401635:	48 89 c7             	mov    %rax,%rdi
  401638:	e8 4f ff ff ff       	callq  40158c <ft_vartype_get>
  40163d:	48 85 c0             	test   %rax,%rax
  401640:	74 07                	je     401649 <ft_vartype_addcpy+0x3f>
  401642:	b8 00 00 00 00       	mov    $0x0,%eax
  401647:	eb 42                	jmp    40168b <ft_vartype_addcpy+0x81>
  401649:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40164d:	48 8b 40 28          	mov    0x28(%rax),%rax
  401651:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401655:	eb 0c                	jmp    401663 <ft_vartype_addcpy+0x59>
  401657:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40165b:	48 8b 40 28          	mov    0x28(%rax),%rax
  40165f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401663:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  401668:	74 0d                	je     401677 <ft_vartype_addcpy+0x6d>
  40166a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40166e:	48 8b 40 28          	mov    0x28(%rax),%rax
  401672:	48 85 c0             	test   %rax,%rax
  401675:	75 e0                	jne    401657 <ft_vartype_addcpy+0x4d>
  401677:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40167b:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40167f:	48 89 50 20          	mov    %rdx,0x20(%rax)
  401683:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401687:	48 8b 40 28          	mov    0x28(%rax),%rax
  40168b:	c9                   	leaveq 
  40168c:	c3                   	retq   

000000000040168d <ft_vartype_addput>:
  40168d:	55                   	push   %rbp
  40168e:	48 89 e5             	mov    %rsp,%rbp
  401691:	48 83 ec 20          	sub    $0x20,%rsp
  401695:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401699:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  40169d:	e8 10 f3 ff ff       	callq  4009b2 <ft_stack_init>
  4016a2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4016a6:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4016ab:	74 18                	je     4016c5 <ft_vartype_addput+0x38>
  4016ad:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
  4016b2:	74 11                	je     4016c5 <ft_vartype_addput+0x38>
  4016b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4016b8:	48 89 c7             	mov    %rax,%rdi
  4016bb:	e8 cc fe ff ff       	callq  40158c <ft_vartype_get>
  4016c0:	48 85 c0             	test   %rax,%rax
  4016c3:	74 07                	je     4016cc <ft_vartype_addput+0x3f>
  4016c5:	b8 00 00 00 00       	mov    $0x0,%eax
  4016ca:	eb 42                	jmp    40170e <ft_vartype_addput+0x81>
  4016cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4016d0:	48 8b 40 28          	mov    0x28(%rax),%rax
  4016d4:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4016d8:	eb 0c                	jmp    4016e6 <ft_vartype_addput+0x59>
  4016da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4016de:	48 8b 40 28          	mov    0x28(%rax),%rax
  4016e2:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  4016e6:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4016eb:	74 0d                	je     4016fa <ft_vartype_addput+0x6d>
  4016ed:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4016f1:	48 8b 40 28          	mov    0x28(%rax),%rax
  4016f5:	48 85 c0             	test   %rax,%rax
  4016f8:	75 e0                	jne    4016da <ft_vartype_addput+0x4d>
  4016fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4016fe:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  401702:	48 89 50 18          	mov    %rdx,0x18(%rax)
  401706:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40170a:	48 8b 40 28          	mov    0x28(%rax),%rax
  40170e:	c9                   	leaveq 
  40170f:	c3                   	retq   

0000000000401710 <ft_vartype_add>:
  401710:	55                   	push   %rbp
  401711:	48 89 e5             	mov    %rsp,%rbp
  401714:	48 83 ec 40          	sub    $0x40,%rsp
  401718:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40171c:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  401720:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  401724:	e8 89 f2 ff ff       	callq  4009b2 <ft_stack_init>
  401729:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40172d:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  401732:	74 18                	je     40174c <ft_vartype_add+0x3c>
  401734:	48 83 7d c8 00       	cmpq   $0x0,-0x38(%rbp)
  401739:	74 11                	je     40174c <ft_vartype_add+0x3c>
  40173b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40173f:	48 89 c7             	mov    %rax,%rdi
  401742:	e8 45 fe ff ff       	callq  40158c <ft_vartype_get>
  401747:	48 85 c0             	test   %rax,%rax
  40174a:	74 0a                	je     401756 <ft_vartype_add+0x46>
  40174c:	b8 00 00 00 00       	mov    $0x0,%eax
  401751:	e9 dc 00 00 00       	jmpq   401832 <ft_vartype_add+0x122>
  401756:	bf 30 00 00 00       	mov    $0x30,%edi
  40175b:	e8 33 ef ff ff       	callq  400693 <ft_stack_memalloc>
  401760:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401764:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401769:	75 0a                	jne    401775 <ft_vartype_add+0x65>
  40176b:	b8 00 00 00 00       	mov    $0x0,%eax
  401770:	e9 bd 00 00 00       	jmpq   401832 <ft_vartype_add+0x122>
  401775:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401779:	48 89 c7             	mov    %rax,%rdi
  40177c:	e8 54 ef ff ff       	callq  4006d5 <ft_stack_strdup>
  401781:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401785:	48 89 02             	mov    %rax,(%rdx)
  401788:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40178c:	48 8b 00             	mov    (%rax),%rax
  40178f:	48 85 c0             	test   %rax,%rax
  401792:	75 0a                	jne    40179e <ft_vartype_add+0x8e>
  401794:	b8 00 00 00 00       	mov    $0x0,%eax
  401799:	e9 94 00 00 00       	jmpq   401832 <ft_vartype_add+0x122>
  40179e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4017a2:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4017a6:	48 89 50 08          	mov    %rdx,0x8(%rax)
  4017aa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4017ae:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
  4017b2:	48 89 50 10          	mov    %rdx,0x10(%rax)
  4017b6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4017ba:	48 c7 40 18 00 00 00 	movq   $0x0,0x18(%rax)
  4017c1:	00 
  4017c2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4017c6:	48 c7 40 20 00 00 00 	movq   $0x0,0x20(%rax)
  4017cd:	00 
  4017ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4017d2:	48 c7 40 28 00 00 00 	movq   $0x0,0x28(%rax)
  4017d9:	00 
  4017da:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4017de:	48 8b 40 28          	mov    0x28(%rax),%rax
  4017e2:	48 8b 40 28          	mov    0x28(%rax),%rax
  4017e6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4017ea:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4017ef:	75 12                	jne    401803 <ft_vartype_add+0xf3>
  4017f1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4017f5:	48 8b 40 28          	mov    0x28(%rax),%rax
  4017f9:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4017fd:	48 89 50 28          	mov    %rdx,0x28(%rax)
  401801:	eb 27                	jmp    40182a <ft_vartype_add+0x11a>
  401803:	eb 0c                	jmp    401811 <ft_vartype_add+0x101>
  401805:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401809:	48 8b 40 28          	mov    0x28(%rax),%rax
  40180d:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  401811:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401815:	48 8b 40 28          	mov    0x28(%rax),%rax
  401819:	48 85 c0             	test   %rax,%rax
  40181c:	75 e7                	jne    401805 <ft_vartype_add+0xf5>
  40181e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401822:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401826:	48 89 50 28          	mov    %rdx,0x28(%rax)
  40182a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40182e:	48 8b 40 28          	mov    0x28(%rax),%rax
  401832:	c9                   	leaveq 
  401833:	c3                   	retq   

0000000000401834 <ft_vartype_free>:
  401834:	55                   	push   %rbp
  401835:	48 89 e5             	mov    %rsp,%rbp
  401838:	48 83 ec 10          	sub    $0x10,%rsp
  40183c:	e8 71 f1 ff ff       	callq  4009b2 <ft_stack_init>
  401841:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401845:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401849:	48 8b 40 28          	mov    0x28(%rax),%rax
  40184d:	48 89 c7             	mov    %rax,%rdi
  401850:	e8 02 00 00 00       	callq  401857 <ft_vartype_delete>
  401855:	c9                   	leaveq 
  401856:	c3                   	retq   

0000000000401857 <ft_vartype_delete>:
  401857:	55                   	push   %rbp
  401858:	48 89 e5             	mov    %rsp,%rbp
  40185b:	48 83 ec 20          	sub    $0x20,%rsp
  40185f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401863:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401867:	48 85 c0             	test   %rax,%rax
  40186a:	74 3c                	je     4018a8 <ft_vartype_delete+0x51>
  40186c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401870:	48 8b 40 28          	mov    0x28(%rax),%rax
  401874:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401878:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40187c:	48 8b 00             	mov    (%rax),%rax
  40187f:	48 85 c0             	test   %rax,%rax
  401882:	74 0c                	je     401890 <ft_vartype_delete+0x39>
  401884:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401888:	48 89 c7             	mov    %rax,%rdi
  40188b:	e8 af 02 00 00       	callq  401b3f <ft_strdel>
  401890:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
  401894:	48 89 c7             	mov    %rax,%rdi
  401897:	e8 0e 02 00 00       	callq  401aaa <ft_memdel>
  40189c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4018a0:	48 89 c7             	mov    %rax,%rdi
  4018a3:	e8 af ff ff ff       	callq  401857 <ft_vartype_delete>
  4018a8:	b8 00 00 00 00       	mov    $0x0,%eax
  4018ad:	c9                   	leaveq 
  4018ae:	c3                   	retq   

00000000004018af <main>:
  4018af:	55                   	push   %rbp
  4018b0:	48 89 e5             	mov    %rsp,%rbp
  4018b3:	48 83 ec 20          	sub    $0x20,%rsp
  4018b7:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4018ba:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4018be:	b9 c5 20 40 00       	mov    $0x4020c5,%ecx
  4018c3:	ba c9 20 40 00       	mov    $0x4020c9,%edx
  4018c8:	be 02 00 00 00       	mov    $0x2,%esi
  4018cd:	bf cb 20 40 00       	mov    $0x4020cb,%edi
  4018d2:	e8 c8 fa ff ff       	callq  40139f <ft_alloc>
  4018d7:	b9 c5 20 40 00       	mov    $0x4020c5,%ecx
  4018dc:	ba cd 20 40 00       	mov    $0x4020cd,%edx
  4018e1:	be 02 00 00 00       	mov    $0x2,%esi
  4018e6:	bf 00 00 00 00       	mov    $0x0,%edi
  4018eb:	e8 af fa ff ff       	callq  40139f <ft_alloc>
  4018f0:	b9 c5 20 40 00       	mov    $0x4020c5,%ecx
  4018f5:	ba cf 20 40 00       	mov    $0x4020cf,%edx
  4018fa:	be 02 00 00 00       	mov    $0x2,%esi
  4018ff:	bf d1 20 40 00       	mov    $0x4020d1,%edi
  401904:	e8 96 fa ff ff       	callq  40139f <ft_alloc>
  401909:	be d3 20 40 00       	mov    $0x4020d3,%esi
  40190e:	bf cd 20 40 00       	mov    $0x4020cd,%edi
  401913:	e8 cd f6 ff ff       	callq  400fe5 <ft_alloc_copy>
  401918:	bf d5 20 40 00       	mov    $0x4020d5,%edi
  40191d:	e8 49 02 00 00       	callq  401b6b <ft_strdup>
  401922:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401926:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40192a:	be 07 00 00 00       	mov    $0x7,%esi
  40192f:	48 89 c7             	mov    %rax,%rdi
  401932:	e8 5d f9 ff ff       	callq  401294 <ft_alloc_include>
  401937:	b9 c5 20 40 00       	mov    $0x4020c5,%ecx
  40193c:	ba d7 20 40 00       	mov    $0x4020d7,%edx
  401941:	be 02 00 00 00       	mov    $0x2,%esi
  401946:	bf d9 20 40 00       	mov    $0x4020d9,%edi
  40194b:	e8 4f fa ff ff       	callq  40139f <ft_alloc>
  401950:	e8 c4 ee ff ff       	callq  400819 <ft_stack_infos>
  401955:	bf c9 20 40 00       	mov    $0x4020c9,%edi
  40195a:	e8 b3 f3 ff ff       	callq  400d12 <ft_alloc_del>
  40195f:	e8 b5 ee ff ff       	callq  400819 <ft_stack_infos>
  401964:	e8 0b f0 ff ff       	callq  400974 <ft_stack_free>
  401969:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  40196d:	48 89 c7             	mov    %rax,%rdi
  401970:	e8 ca 01 00 00       	callq  401b3f <ft_strdel>
  401975:	b8 01 00 00 00       	mov    $0x1,%eax
  40197a:	c9                   	leaveq 
  40197b:	c3                   	retq   

000000000040197c <ft_memmove>:
  40197c:	55                   	push   %rbp
  40197d:	48 89 e5             	mov    %rsp,%rbp
  401980:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401984:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  401988:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  40198c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401990:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401994:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401998:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40199c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4019a0:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
  4019a4:	76 11                	jbe    4019b7 <ft_memmove+0x3b>
  4019a6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4019aa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4019ae:	48 01 d0             	add    %rdx,%rax
  4019b1:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
  4019b5:	77 40                	ja     4019f7 <ft_memmove+0x7b>
  4019b7:	eb 1d                	jmp    4019d6 <ft_memmove+0x5a>
  4019b9:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4019bd:	48 8d 50 01          	lea    0x1(%rax),%rdx
  4019c1:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  4019c5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  4019c9:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
  4019cd:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  4019d1:	0f b6 12             	movzbl (%rdx),%edx
  4019d4:	88 10                	mov    %dl,(%rax)
  4019d6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4019db:	74 18                	je     4019f5 <ft_memmove+0x79>
  4019dd:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  4019e2:	74 11                	je     4019f5 <ft_memmove+0x79>
  4019e4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4019e8:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  4019ec:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4019f0:	48 85 c0             	test   %rax,%rax
  4019f3:	75 c4                	jne    4019b9 <ft_memmove+0x3d>
  4019f5:	eb 56                	jmp    401a4d <ft_memmove+0xd1>
  4019f7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4019fb:	48 83 e8 01          	sub    $0x1,%rax
  4019ff:	48 01 45 f0          	add    %rax,-0x10(%rbp)
  401a03:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401a07:	48 83 e8 01          	sub    $0x1,%rax
  401a0b:	48 01 45 f8          	add    %rax,-0x8(%rbp)
  401a0f:	eb 1d                	jmp    401a2e <ft_memmove+0xb2>
  401a11:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401a15:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  401a19:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
  401a1d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401a21:	48 8d 4a ff          	lea    -0x1(%rdx),%rcx
  401a25:	48 89 4d f8          	mov    %rcx,-0x8(%rbp)
  401a29:	0f b6 12             	movzbl (%rdx),%edx
  401a2c:	88 10                	mov    %dl,(%rax)
  401a2e:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401a33:	74 18                	je     401a4d <ft_memmove+0xd1>
  401a35:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
  401a3a:	74 11                	je     401a4d <ft_memmove+0xd1>
  401a3c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401a40:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  401a44:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  401a48:	48 85 c0             	test   %rax,%rax
  401a4b:	75 c4                	jne    401a11 <ft_memmove+0x95>
  401a4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401a51:	5d                   	pop    %rbp
  401a52:	c3                   	retq   

0000000000401a53 <ft_memalloc>:
  401a53:	55                   	push   %rbp
  401a54:	48 89 e5             	mov    %rsp,%rbp
  401a57:	48 83 ec 20          	sub    $0x20,%rsp
  401a5b:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401a5f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401a64:	75 07                	jne    401a6d <ft_memalloc+0x1a>
  401a66:	b8 00 00 00 00       	mov    $0x0,%eax
  401a6b:	eb 3b                	jmp    401aa8 <ft_memalloc+0x55>
  401a6d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401a71:	48 89 c7             	mov    %rax,%rdi
  401a74:	e8 47 ea ff ff       	callq  4004c0 <malloc@plt>
  401a79:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401a7d:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401a82:	75 07                	jne    401a8b <ft_memalloc+0x38>
  401a84:	b8 00 00 00 00       	mov    $0x0,%eax
  401a89:	eb 1d                	jmp    401aa8 <ft_memalloc+0x55>
  401a8b:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401a8f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401a93:	be 00 00 00 00       	mov    $0x0,%esi
  401a98:	48 89 c7             	mov    %rax,%rdi
  401a9b:	e8 25 03 00 00       	callq  401dc5 <ft_memset>
  401aa0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401aa4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401aa8:	c9                   	leaveq 
  401aa9:	c3                   	retq   

0000000000401aaa <ft_memdel>:
  401aaa:	55                   	push   %rbp
  401aab:	48 89 e5             	mov    %rsp,%rbp
  401aae:	48 83 ec 10          	sub    $0x10,%rsp
  401ab2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401ab6:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401abb:	74 26                	je     401ae3 <ft_memdel+0x39>
  401abd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401ac1:	48 8b 00             	mov    (%rax),%rax
  401ac4:	48 85 c0             	test   %rax,%rax
  401ac7:	74 1a                	je     401ae3 <ft_memdel+0x39>
  401ac9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401acd:	48 8b 00             	mov    (%rax),%rax
  401ad0:	48 89 c7             	mov    %rax,%rdi
  401ad3:	e8 a8 e9 ff ff       	callq  400480 <free@plt>
  401ad8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401adc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  401ae3:	c9                   	leaveq 
  401ae4:	c3                   	retq   

0000000000401ae5 <ft_strcmp>:
  401ae5:	55                   	push   %rbp
  401ae6:	48 89 e5             	mov    %rsp,%rbp
  401ae9:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401aed:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  401af1:	eb 0a                	jmp    401afd <ft_strcmp+0x18>
  401af3:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  401af8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  401afd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401b01:	0f b6 00             	movzbl (%rax),%eax
  401b04:	84 c0                	test   %al,%al
  401b06:	74 1d                	je     401b25 <ft_strcmp+0x40>
  401b08:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401b0c:	0f b6 00             	movzbl (%rax),%eax
  401b0f:	84 c0                	test   %al,%al
  401b11:	74 12                	je     401b25 <ft_strcmp+0x40>
  401b13:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401b17:	0f b6 10             	movzbl (%rax),%edx
  401b1a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401b1e:	0f b6 00             	movzbl (%rax),%eax
  401b21:	38 c2                	cmp    %al,%dl
  401b23:	74 ce                	je     401af3 <ft_strcmp+0xe>
  401b25:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401b29:	0f b6 00             	movzbl (%rax),%eax
  401b2c:	0f b6 d0             	movzbl %al,%edx
  401b2f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401b33:	0f b6 00             	movzbl (%rax),%eax
  401b36:	0f b6 c0             	movzbl %al,%eax
  401b39:	29 c2                	sub    %eax,%edx
  401b3b:	89 d0                	mov    %edx,%eax
  401b3d:	5d                   	pop    %rbp
  401b3e:	c3                   	retq   

0000000000401b3f <ft_strdel>:
  401b3f:	55                   	push   %rbp
  401b40:	48 89 e5             	mov    %rsp,%rbp
  401b43:	48 83 ec 10          	sub    $0x10,%rsp
  401b47:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401b4b:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401b50:	74 17                	je     401b69 <ft_strdel+0x2a>
  401b52:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401b56:	48 89 c7             	mov    %rax,%rdi
  401b59:	e8 4c ff ff ff       	callq  401aaa <ft_memdel>
  401b5e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401b62:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  401b69:	c9                   	leaveq 
  401b6a:	c3                   	retq   

0000000000401b6b <ft_strdup>:
  401b6b:	55                   	push   %rbp
  401b6c:	48 89 e5             	mov    %rsp,%rbp
  401b6f:	48 83 ec 20          	sub    $0x20,%rsp
  401b73:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401b77:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  401b7e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401b83:	75 07                	jne    401b8c <ft_strdup+0x21>
  401b85:	b8 00 00 00 00       	mov    $0x0,%eax
  401b8a:	eb 77                	jmp    401c03 <ft_strdup+0x98>
  401b8c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401b90:	48 89 c7             	mov    %rax,%rdi
  401b93:	e8 6d 00 00 00       	callq  401c05 <ft_strlen>
  401b98:	48 83 c0 01          	add    $0x1,%rax
  401b9c:	48 89 c7             	mov    %rax,%rdi
  401b9f:	e8 af fe ff ff       	callq  401a53 <ft_memalloc>
  401ba4:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401ba8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401bad:	75 07                	jne    401bb6 <ft_strdup+0x4b>
  401baf:	b8 00 00 00 00       	mov    $0x0,%eax
  401bb4:	eb 4d                	jmp    401c03 <ft_strdup+0x98>
  401bb6:	eb 23                	jmp    401bdb <ft_strdup+0x70>
  401bb8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401bbb:	48 63 d0             	movslq %eax,%rdx
  401bbe:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401bc2:	48 01 c2             	add    %rax,%rdx
  401bc5:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401bc8:	48 63 c8             	movslq %eax,%rcx
  401bcb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401bcf:	48 01 c8             	add    %rcx,%rax
  401bd2:	0f b6 00             	movzbl (%rax),%eax
  401bd5:	88 02                	mov    %al,(%rdx)
  401bd7:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  401bdb:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401bde:	48 63 d0             	movslq %eax,%rdx
  401be1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401be5:	48 01 d0             	add    %rdx,%rax
  401be8:	0f b6 00             	movzbl (%rax),%eax
  401beb:	84 c0                	test   %al,%al
  401bed:	75 c9                	jne    401bb8 <ft_strdup+0x4d>
  401bef:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401bf2:	48 63 d0             	movslq %eax,%rdx
  401bf5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401bf9:	48 01 d0             	add    %rdx,%rax
  401bfc:	c6 00 00             	movb   $0x0,(%rax)
  401bff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c03:	c9                   	leaveq 
  401c04:	c3                   	retq   

0000000000401c05 <ft_strlen>:
  401c05:	55                   	push   %rbp
  401c06:	48 89 e5             	mov    %rsp,%rbp
  401c09:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401c0d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  401c14:	00 
  401c15:	eb 05                	jmp    401c1c <ft_strlen+0x17>
  401c17:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  401c1c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c20:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401c24:	48 01 d0             	add    %rdx,%rax
  401c27:	0f b6 00             	movzbl (%rax),%eax
  401c2a:	84 c0                	test   %al,%al
  401c2c:	75 e9                	jne    401c17 <ft_strlen+0x12>
  401c2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c32:	5d                   	pop    %rbp
  401c33:	c3                   	retq   

0000000000401c34 <ft_putstr>:
  401c34:	55                   	push   %rbp
  401c35:	48 89 e5             	mov    %rsp,%rbp
  401c38:	48 83 ec 10          	sub    $0x10,%rsp
  401c3c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401c40:	eb 16                	jmp    401c58 <ft_putstr+0x24>
  401c42:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c46:	0f b6 00             	movzbl (%rax),%eax
  401c49:	0f be c0             	movsbl %al,%eax
  401c4c:	89 c7                	mov    %eax,%edi
  401c4e:	e8 b7 02 00 00       	callq  401f0a <ft_putchar>
  401c53:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  401c58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c5c:	0f b6 00             	movzbl (%rax),%eax
  401c5f:	84 c0                	test   %al,%al
  401c61:	75 df                	jne    401c42 <ft_putstr+0xe>
  401c63:	c9                   	leaveq 
  401c64:	c3                   	retq   

0000000000401c65 <ft_putendl>:
  401c65:	55                   	push   %rbp
  401c66:	48 89 e5             	mov    %rsp,%rbp
  401c69:	48 83 ec 20          	sub    $0x20,%rsp
  401c6d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401c71:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401c76:	74 1e                	je     401c96 <ft_putendl+0x31>
  401c78:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401c7c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401c80:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c84:	48 89 c7             	mov    %rax,%rdi
  401c87:	e8 a8 ff ff ff       	callq  401c34 <ft_putstr>
  401c8c:	bf 0a 00 00 00       	mov    $0xa,%edi
  401c91:	e8 74 02 00 00       	callq  401f0a <ft_putchar>
  401c96:	c9                   	leaveq 
  401c97:	c3                   	retq   

0000000000401c98 <ft_putnbr_endl>:
  401c98:	55                   	push   %rbp
  401c99:	48 89 e5             	mov    %rsp,%rbp
  401c9c:	48 83 ec 10          	sub    $0x10,%rsp
  401ca0:	89 7d fc             	mov    %edi,-0x4(%rbp)
  401ca3:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401ca6:	89 c7                	mov    %eax,%edi
  401ca8:	e8 82 02 00 00       	callq  401f2f <ft_putnbr>
  401cad:	bf 0a 00 00 00       	mov    $0xa,%edi
  401cb2:	e8 53 02 00 00       	callq  401f0a <ft_putchar>
  401cb7:	c9                   	leaveq 
  401cb8:	c3                   	retq   

0000000000401cb9 <ft_itoa>:
  401cb9:	55                   	push   %rbp
  401cba:	48 89 e5             	mov    %rsp,%rbp
  401cbd:	48 83 ec 20          	sub    $0x20,%rsp
  401cc1:	89 7d ec             	mov    %edi,-0x14(%rbp)
  401cc4:	81 7d ec 00 00 00 80 	cmpl   $0x80000000,-0x14(%rbp)
  401ccb:	75 11                	jne    401cde <ft_itoa+0x25>
  401ccd:	48 8d 3d 07 04 00 00 	lea    0x407(%rip),%rdi        # 4020db <_IO_stdin_used+0xeb>
  401cd4:	e8 92 fe ff ff       	callq  401b6b <ft_strdup>
  401cd9:	e9 e5 00 00 00       	jmpq   401dc3 <ft_itoa+0x10a>
  401cde:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  401ce2:	75 11                	jne    401cf5 <ft_itoa+0x3c>
  401ce4:	48 8d 3d fc 03 00 00 	lea    0x3fc(%rip),%rdi        # 4020e7 <_IO_stdin_used+0xf7>
  401ceb:	e8 7b fe ff ff       	callq  401b6b <ft_strdup>
  401cf0:	e9 ce 00 00 00       	jmpq   401dc3 <ft_itoa+0x10a>
  401cf5:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401cf8:	89 c7                	mov    %eax,%edi
  401cfa:	e8 b0 01 00 00       	callq  401eaf <ft_nbrlen>
  401cff:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401d03:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401d07:	48 83 c0 01          	add    $0x1,%rax
  401d0b:	48 89 c7             	mov    %rax,%rdi
  401d0e:	e8 ff 00 00 00       	callq  401e12 <ft_strnew>
  401d13:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401d17:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401d1c:	75 0a                	jne    401d28 <ft_itoa+0x6f>
  401d1e:	b8 00 00 00 00       	mov    $0x0,%eax
  401d23:	e9 9b 00 00 00       	jmpq   401dc3 <ft_itoa+0x10a>
  401d28:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  401d2c:	79 0a                	jns    401d38 <ft_itoa+0x7f>
  401d2e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401d32:	c6 00 2d             	movb   $0x2d,(%rax)
  401d35:	f7 5d ec             	negl   -0x14(%rbp)
  401d38:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401d3c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401d40:	48 01 d0             	add    %rdx,%rax
  401d43:	c6 00 00             	movb   $0x0,(%rax)
  401d46:	eb 5a                	jmp    401da2 <ft_itoa+0xe9>
  401d48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401d4c:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  401d50:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401d54:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
  401d58:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  401d5b:	ba 67 66 66 66       	mov    $0x66666667,%edx
  401d60:	89 c8                	mov    %ecx,%eax
  401d62:	f7 ea                	imul   %edx
  401d64:	c1 fa 02             	sar    $0x2,%edx
  401d67:	89 c8                	mov    %ecx,%eax
  401d69:	c1 f8 1f             	sar    $0x1f,%eax
  401d6c:	29 c2                	sub    %eax,%edx
  401d6e:	89 d0                	mov    %edx,%eax
  401d70:	c1 e0 02             	shl    $0x2,%eax
  401d73:	01 d0                	add    %edx,%eax
  401d75:	01 c0                	add    %eax,%eax
  401d77:	29 c1                	sub    %eax,%ecx
  401d79:	89 ca                	mov    %ecx,%edx
  401d7b:	89 d0                	mov    %edx,%eax
  401d7d:	83 c0 30             	add    $0x30,%eax
  401d80:	88 06                	mov    %al,(%rsi)
  401d82:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  401d85:	ba 67 66 66 66       	mov    $0x66666667,%edx
  401d8a:	89 c8                	mov    %ecx,%eax
  401d8c:	f7 ea                	imul   %edx
  401d8e:	c1 fa 02             	sar    $0x2,%edx
  401d91:	89 c8                	mov    %ecx,%eax
  401d93:	c1 f8 1f             	sar    $0x1f,%eax
  401d96:	29 c2                	sub    %eax,%edx
  401d98:	89 d0                	mov    %edx,%eax
  401d9a:	89 45 ec             	mov    %eax,-0x14(%rbp)
  401d9d:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
  401da2:	83 7d ec 09          	cmpl   $0x9,-0x14(%rbp)
  401da6:	7f a0                	jg     401d48 <ft_itoa+0x8f>
  401da8:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401dac:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  401db0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401db4:	48 01 c2             	add    %rax,%rdx
  401db7:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401dba:	83 c0 30             	add    $0x30,%eax
  401dbd:	88 02                	mov    %al,(%rdx)
  401dbf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401dc3:	c9                   	leaveq 
  401dc4:	c3                   	retq   

0000000000401dc5 <ft_memset>:
  401dc5:	55                   	push   %rbp
  401dc6:	48 89 e5             	mov    %rsp,%rbp
  401dc9:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401dcd:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  401dd0:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  401dd4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  401ddb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401ddf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401de3:	eb 16                	jmp    401dfb <ft_memset+0x36>
  401de5:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401de8:	48 63 d0             	movslq %eax,%rdx
  401deb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401def:	48 01 c2             	add    %rax,%rdx
  401df2:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401df5:	88 02                	mov    %al,(%rdx)
  401df7:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  401dfb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401dff:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  401e03:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  401e07:	48 85 c0             	test   %rax,%rax
  401e0a:	75 d9                	jne    401de5 <ft_memset+0x20>
  401e0c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401e10:	5d                   	pop    %rbp
  401e11:	c3                   	retq   

0000000000401e12 <ft_strnew>:
  401e12:	55                   	push   %rbp
  401e13:	48 89 e5             	mov    %rsp,%rbp
  401e16:	48 83 ec 20          	sub    $0x20,%rsp
  401e1a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401e1e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401e22:	48 83 c0 01          	add    $0x1,%rax
  401e26:	48 89 c7             	mov    %rax,%rdi
  401e29:	e8 25 fc ff ff       	callq  401a53 <ft_memalloc>
  401e2e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401e32:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401e37:	75 07                	jne    401e40 <ft_strnew+0x2e>
  401e39:	b8 00 00 00 00       	mov    $0x0,%eax
  401e3e:	eb 1e                	jmp    401e5e <ft_strnew+0x4c>
  401e40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401e44:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  401e48:	48 01 d0             	add    %rdx,%rax
  401e4b:	c6 00 00             	movb   $0x0,(%rax)
  401e4e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401e52:	48 89 c7             	mov    %rax,%rdi
  401e55:	e8 06 00 00 00       	callq  401e60 <ft_strclr>
  401e5a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401e5e:	c9                   	leaveq 
  401e5f:	c3                   	retq   

0000000000401e60 <ft_strclr>:
  401e60:	55                   	push   %rbp
  401e61:	48 89 e5             	mov    %rsp,%rbp
  401e64:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401e68:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  401e6f:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401e74:	74 37                	je     401ead <ft_strclr+0x4d>
  401e76:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401e7a:	0f b6 00             	movzbl (%rax),%eax
  401e7d:	84 c0                	test   %al,%al
  401e7f:	74 2c                	je     401ead <ft_strclr+0x4d>
  401e81:	eb 16                	jmp    401e99 <ft_strclr+0x39>
  401e83:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401e86:	8d 50 01             	lea    0x1(%rax),%edx
  401e89:	89 55 fc             	mov    %edx,-0x4(%rbp)
  401e8c:	48 63 d0             	movslq %eax,%rdx
  401e8f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401e93:	48 01 d0             	add    %rdx,%rax
  401e96:	c6 00 00             	movb   $0x0,(%rax)
  401e99:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401e9c:	48 63 d0             	movslq %eax,%rdx
  401e9f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401ea3:	48 01 d0             	add    %rdx,%rax
  401ea6:	0f b6 00             	movzbl (%rax),%eax
  401ea9:	84 c0                	test   %al,%al
  401eab:	75 d6                	jne    401e83 <ft_strclr+0x23>
  401ead:	5d                   	pop    %rbp
  401eae:	c3                   	retq   

0000000000401eaf <ft_nbrlen>:
  401eaf:	55                   	push   %rbp
  401eb0:	48 89 e5             	mov    %rsp,%rbp
  401eb3:	89 7d ec             	mov    %edi,-0x14(%rbp)
  401eb6:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  401ebd:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  401ec1:	75 07                	jne    401eca <ft_nbrlen+0x1b>
  401ec3:	b8 01 00 00 00       	mov    $0x1,%eax
  401ec8:	eb 3e                	jmp    401f08 <ft_nbrlen+0x59>
  401eca:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  401ece:	79 0c                	jns    401edc <ft_nbrlen+0x2d>
  401ed0:	f7 5d ec             	negl   -0x14(%rbp)
  401ed3:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  401eda:	eb 21                	jmp    401efd <ft_nbrlen+0x4e>
  401edc:	eb 1f                	jmp    401efd <ft_nbrlen+0x4e>
  401ede:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  401ee1:	ba 67 66 66 66       	mov    $0x66666667,%edx
  401ee6:	89 c8                	mov    %ecx,%eax
  401ee8:	f7 ea                	imul   %edx
  401eea:	c1 fa 02             	sar    $0x2,%edx
  401eed:	89 c8                	mov    %ecx,%eax
  401eef:	c1 f8 1f             	sar    $0x1f,%eax
  401ef2:	29 c2                	sub    %eax,%edx
  401ef4:	89 d0                	mov    %edx,%eax
  401ef6:	89 45 ec             	mov    %eax,-0x14(%rbp)
  401ef9:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  401efd:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  401f01:	7f db                	jg     401ede <ft_nbrlen+0x2f>
  401f03:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401f06:	48 98                	cltq   
  401f08:	5d                   	pop    %rbp
  401f09:	c3                   	retq   

0000000000401f0a <ft_putchar>:
  401f0a:	55                   	push   %rbp
  401f0b:	48 89 e5             	mov    %rsp,%rbp
  401f0e:	48 83 ec 10          	sub    $0x10,%rsp
  401f12:	89 f8                	mov    %edi,%eax
  401f14:	88 45 fc             	mov    %al,-0x4(%rbp)
  401f17:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
  401f1b:	ba 01 00 00 00       	mov    $0x1,%edx
  401f20:	48 89 c6             	mov    %rax,%rsi
  401f23:	bf 01 00 00 00       	mov    $0x1,%edi
  401f28:	e8 63 e5 ff ff       	callq  400490 <write@plt>
  401f2d:	c9                   	leaveq 
  401f2e:	c3                   	retq   

0000000000401f2f <ft_putnbr>:
  401f2f:	55                   	push   %rbp
  401f30:	48 89 e5             	mov    %rsp,%rbp
  401f33:	48 83 ec 20          	sub    $0x20,%rsp
  401f37:	89 7d ec             	mov    %edi,-0x14(%rbp)
  401f3a:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401f3d:	89 c7                	mov    %eax,%edi
  401f3f:	e8 75 fd ff ff       	callq  401cb9 <ft_itoa>
  401f44:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401f48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401f4c:	48 89 c7             	mov    %rax,%rdi
  401f4f:	e8 e0 fc ff ff       	callq  401c34 <ft_putstr>
  401f54:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  401f58:	48 89 c7             	mov    %rax,%rdi
  401f5b:	e8 df fb ff ff       	callq  401b3f <ft_strdel>
  401f60:	c9                   	leaveq 
  401f61:	c3                   	retq   
  401f62:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401f69:	00 00 00 
  401f6c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000401f70 <__libc_csu_init>:
  401f70:	41 57                	push   %r15
  401f72:	41 89 ff             	mov    %edi,%r15d
  401f75:	41 56                	push   %r14
  401f77:	49 89 f6             	mov    %rsi,%r14
  401f7a:	41 55                	push   %r13
  401f7c:	49 89 d5             	mov    %rdx,%r13
  401f7f:	41 54                	push   %r12
  401f81:	4c 8d 25 88 0e 20 00 	lea    0x200e88(%rip),%r12        # 602e10 <__frame_dummy_init_array_entry>
  401f88:	55                   	push   %rbp
  401f89:	48 8d 2d 88 0e 20 00 	lea    0x200e88(%rip),%rbp        # 602e18 <__init_array_end>
  401f90:	53                   	push   %rbx
  401f91:	4c 29 e5             	sub    %r12,%rbp
  401f94:	31 db                	xor    %ebx,%ebx
  401f96:	48 c1 fd 03          	sar    $0x3,%rbp
  401f9a:	48 83 ec 08          	sub    $0x8,%rsp
  401f9e:	e8 ad e4 ff ff       	callq  400450 <_init>
  401fa3:	48 85 ed             	test   %rbp,%rbp
  401fa6:	74 1e                	je     401fc6 <__libc_csu_init+0x56>
  401fa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401faf:	00 
  401fb0:	4c 89 ea             	mov    %r13,%rdx
  401fb3:	4c 89 f6             	mov    %r14,%rsi
  401fb6:	44 89 ff             	mov    %r15d,%edi
  401fb9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  401fbd:	48 83 c3 01          	add    $0x1,%rbx
  401fc1:	48 39 eb             	cmp    %rbp,%rbx
  401fc4:	75 ea                	jne    401fb0 <__libc_csu_init+0x40>
  401fc6:	48 83 c4 08          	add    $0x8,%rsp
  401fca:	5b                   	pop    %rbx
  401fcb:	5d                   	pop    %rbp
  401fcc:	41 5c                	pop    %r12
  401fce:	41 5d                	pop    %r13
  401fd0:	41 5e                	pop    %r14
  401fd2:	41 5f                	pop    %r15
  401fd4:	c3                   	retq   
  401fd5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  401fdc:	00 00 00 00 

0000000000401fe0 <__libc_csu_fini>:
  401fe0:	f3 c3                	repz retq 

Déassemblage de la section .fini:

0000000000401fe4 <_fini>:
  401fe4:	48 83 ec 08          	sub    $0x8,%rsp
  401fe8:	48 83 c4 08          	add    $0x8,%rsp
  401fec:	c3                   	retq   
