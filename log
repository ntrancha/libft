a.out: ELF 64-bit LSB  executable, x86-64, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.24, BuildID[sha1]=f1fc0775fe4e6d67bc61347216bd94eaeb9b3445, not stripped
/lib64/ld-linux-x86-64.so.2
libc.so.6
malloc
__libc_start_main
write
free
__gmon_start__
GLIBC_2.2.5
%z+ 
%r+ 
UH-P0`
UH-P0`
gfff
gfff
gfffffffH
gfffffffH
gfff
gfffffffH
[]A\A]A^A_
-2147483648
;*3$"
GCC: (Ubuntu 4.8.4-2ubuntu1~14.04) 4.8.4
GCC: (Ubuntu 4.8.2-19ubuntu1) 4.8.2
	num
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
includes
test.c
stddef.h
bits.h
src/bits
src/bits/../../includes
ft_octet_ror.c
bits.h
src/bits
src/bits/../../includes
ft_octet_rol.c
bits.h
src/strings
ft_strdel.c
src/strings
ft_strdup.c
src/strings
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_strlen.c
stddef.h
src/math
ft_addsubstr.c
src/put
ft_putaddr.c
src/put
ft_putendl.c
src/put
ft_putnbr_endl.c
src/put
ft_putlong.c
src/put
src/put/../../includes
ft_putoctet.c
bits.h
src/convert
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_itoa.c
stddef.h
src/convert
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_ltoa.c
stddef.h
src/convert
ft_dectobin.c
fgK=
src/mem
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_memalloc.c
stddef.h
src/mem
ft_memdel.c
src/bits
src/bits/../../includes
ft_octetgetbit.c
bits.h
src/bits
src/bits/../../includes
ft_octetsetbit.c
bits.h
src/bits
src/bits/../../includes
ft_octet_shr.c
bits.h
src/bits
src/bits/../../includes
ft_octet_shl.c
bits.h
src/strings
ft_strcmp.c
src/strings
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_strnew.c
stddef.h
src/strings
ft_strjoin.c
src/strings
ft_straddcharf.c
src/strings
ft_strcleanfront.c
src/strings
ft_strclr.c
src/strings
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_strsub.c
stddef.h
=uuu0
src/math
ft_neg.c
src/math
ft_power.c
ugugugY/
src/math
ft_addstr.c
uhuL
src/math
ft_substr.c
uhuL
src/count
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_nbrlen.c
stddef.h
wuguh=vL
src/count
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_longlen.c
stddef.h
src/put
ft_putchar.c
src/put
ft_putstr.c
src/put
ft_putnbr.c
src/mem
/usr/lib/gcc/x86_64-linux-gnu/4.8/include
ft_memset.c
stddef.h
src/strings
ft_strint.c
src/strings
ft_strcpy.c
src/strings
ft_strcat.c
s_bits
size_t
/home/nk42/PROJECT/libft
test.c
t_bits
unsigned char
GNU C 4.8.4 -mtune=generic -march=x86-64 -g -fstack-protector
short unsigned int
main
str2
mem2
test
sizetype
long long int
short int
t_octet
memory
long long unsigned int
t_octets
GNU C 4.8.4 -mtune=generic -march=x86-64 -g -fPIC -fstack-protector
ft_octet_ror
src/bits/ft_octet_ror.c
src/bits/ft_octet_rol.c
ft_octet_rol
ft_strdel
src/strings/ft_strdel.c
src/strings/ft_strdup.c
count
ft_strdup
src/strings/ft_strlen.c
ft_strlen
operation
abs_b
addsubstr_next
absolute
abs_a
src/math/ft_addsubstr.c
ft_addsubstr
src/put/ft_putaddr.c
ft_putaddr
src/put/ft_putendl.c
ft_putendl
ft_putnbr_endl
src/put/ft_putnbr_endl.c
src/put/ft_putlong.c
ft_putlong
src/put/ft_putoctet.c
ft_putoctet
src/convert/ft_itoa.c
ft_itoa
ft_ltoa
src/convert/ft_ltoa.c
src/convert/ft_dectobin.c
findpower
ft_dectobin
src/mem/ft_memalloc.c
size
ft_memalloc
ft_memdel
src/mem/ft_memdel.c
ft_octetgetbit
src/bits/ft_octetgetbit.c
value
ft_octetsetbit
src/bits/ft_octetsetbit.c
src/bits/ft_octet_shr.c
ft_octet_shr
ft_octet_shl
src/bits/ft_octet_shl.c
src/strings/ft_strcmp.c
ft_strcmp
src/strings/ft_strnew.c
ft_strnew
src/strings/ft_strjoin.c
ft_strjoin
tmp2
src/strings/ft_straddcharf.c
index
ft_straddcharf
src/strings/ft_strcleanfront.c
ft_strcleanfront
src/strings/ft_strclr.c
ft_strclr
ft_strsub
src/strings/ft_strsub.c
start
result
src/math/ft_neg.c
ft_neg
ft_power
src/math/ft_power.c
tmp_a
src/math/ft_addstr.c
strlennum
index2
retenu
ft_addstr
tmp_b
ft_substr
src/math/ft_substr.c
src/count/ft_nbrlen.c
ft_nbrlen
ft_longlen
src/count/ft_longlen.c
src/put/ft_putchar.c
ft_putchar
ft_putstr
src/put/ft_putstr.c
src/put/ft_putnbr.c
ft_putnbr
src/mem/ft_memset.c
ft_memset
ft_strint
src/strings/ft_strint.c
src/strings/ft_strcpy.c
ft_strcpy
count2
ft_strcat
src/strings/ft_strcat.c
.symtab
.strtab
.shstrtab
.interp
.note.ABI-tag
.note.gnu.build-id
.gnu.hash
.dynsym
.dynstr
.gnu.version
.gnu.version_r
.rela.dyn
.rela.plt
.init
.text
.fini
.rodata
.eh_frame_hdr
.eh_frame
.init_array
.fini_array
.jcr
.dynamic
.got
.got.plt
.data
.bss
.comment
.debug_aranges
.debug_info
.debug_abbrev
.debug_line
.debug_str
crtstuff.c
__JCR_LIST__
deregister_tm_clones
register_tm_clones
__do_global_dtors_aux
completed.6973
__do_global_dtors_aux_fini_array_entry
frame_dummy
__frame_dummy_init_array_entry
test.c
ft_octet_ror.c
ft_octet_rol.c
ft_strdel.c
ft_strdup.c
ft_strlen.c
ft_addsubstr.c
ft_putaddr.c
ft_putendl.c
ft_putnbr_endl.c
ft_putlong.c
ft_putoctet.c
ft_itoa.c
ft_ltoa.c
ft_dectobin.c
findpower
ft_memalloc.c
ft_memdel.c
ft_octetgetbit.c
ft_octetsetbit.c
ft_octet_shr.c
ft_octet_shl.c
ft_strcmp.c
ft_strnew.c
ft_strjoin.c
ft_straddcharf.c
ft_strcleanfront.c
ft_strclr.c
ft_strsub.c
ft_neg.c
ft_power.c
ft_addstr.c
strlennum
addstr
ft_substr.c
substr
ft_nbrlen.c
ft_longlen.c
ft_putchar.c
ft_putstr.c
ft_putnbr.c
ft_memset.c
ft_strint.c
ft_strcpy.c
ft_strcat.c
__FRAME_END__
__JCR_END__
__init_array_end
_DYNAMIC
__init_array_start
_GLOBAL_OFFSET_TABLE_
__libc_csu_fini
free@@GLIBC_2.2.5
ft_strcpy
ft_memdel
ft_octet_rol
_ITM_deregisterTMCloneTable
data_start
ft_putoctet
ft_strcleanfront
ft_strclr
ft_itoa
write@@GLIBC_2.2.5
ft_strlen
_edata
ft_putnbr_endl
ft_octetsetbit
ft_strcat
_fini
ft_neg
ft_putendl
ft_strsub
absolute
ft_memset
addsubstr_next
ft_substr
ft_dectobin
__libc_start_main@@GLIBC_2.2.5
__data_start
ft_strdel
ft_strnew
__gmon_start__
__dso_handle
ft_ltoa
_IO_stdin_used
ft_octet_ror
operation
ft_putchar
ft_strdup
__libc_csu_init
malloc@@GLIBC_2.2.5
_end
_start
ft_putlong
ft_octet_shl
ft_memalloc
__bss_start
ft_putnbr
main
ft_addstr
ft_strcmp
ft_strint
ft_longlen
ft_octet_shr
ft_straddcharf
ft_strjoin
_Jv_RegisterClasses
ft_addsubstr
ft_putstr
ft_octetgetbit
__TMC_END__
_ITM_registerTMCloneTable
ft_power
_init
ft_putaddr
ft_nbrlen
test

Table de symboles « .dynsym » contient 6 entrées:
   Num:    Valeur         Tail Type    Lien   Vis      Ndx Nom
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND free@GLIBC_2.2.5 (2)
     2: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND write@GLIBC_2.2.5 (2)
     3: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@GLIBC_2.2.5 (2)
     4: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
     5: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND malloc@GLIBC_2.2.5 (2)

Table de symboles « .symtab » contient 164 entrées:
   Num:    Valeur         Tail Type    Lien   Vis      Ndx Nom
     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND 
     1: 0000000000400238     0 SECTION LOCAL  DEFAULT    1 
     2: 0000000000400254     0 SECTION LOCAL  DEFAULT    2 
     3: 0000000000400274     0 SECTION LOCAL  DEFAULT    3 
     4: 0000000000400298     0 SECTION LOCAL  DEFAULT    4 
     5: 00000000004002b8     0 SECTION LOCAL  DEFAULT    5 
     6: 0000000000400348     0 SECTION LOCAL  DEFAULT    6 
     7: 0000000000400392     0 SECTION LOCAL  DEFAULT    7 
     8: 00000000004003a0     0 SECTION LOCAL  DEFAULT    8 
     9: 00000000004003c0     0 SECTION LOCAL  DEFAULT    9 
    10: 00000000004003d8     0 SECTION LOCAL  DEFAULT   10 
    11: 0000000000400450     0 SECTION LOCAL  DEFAULT   11 
    12: 0000000000400470     0 SECTION LOCAL  DEFAULT   12 
    13: 00000000004004d0     0 SECTION LOCAL  DEFAULT   13 
    14: 0000000000401dd4     0 SECTION LOCAL  DEFAULT   14 
    15: 0000000000401de0     0 SECTION LOCAL  DEFAULT   15 
    16: 0000000000401dfc     0 SECTION LOCAL  DEFAULT   16 
    17: 0000000000401fd0     0 SECTION LOCAL  DEFAULT   17 
    18: 0000000000602e10     0 SECTION LOCAL  DEFAULT   18 
    19: 0000000000602e18     0 SECTION LOCAL  DEFAULT   19 
    20: 0000000000602e20     0 SECTION LOCAL  DEFAULT   20 
    21: 0000000000602e28     0 SECTION LOCAL  DEFAULT   21 
    22: 0000000000602ff8     0 SECTION LOCAL  DEFAULT   22 
    23: 0000000000603000     0 SECTION LOCAL  DEFAULT   23 
    24: 0000000000603040     0 SECTION LOCAL  DEFAULT   24 
    25: 0000000000603050     0 SECTION LOCAL  DEFAULT   25 
    26: 0000000000000000     0 SECTION LOCAL  DEFAULT   26 
    27: 0000000000000000     0 SECTION LOCAL  DEFAULT   27 
    28: 0000000000000000     0 SECTION LOCAL  DEFAULT   28 
    29: 0000000000000000     0 SECTION LOCAL  DEFAULT   29 
    30: 0000000000000000     0 SECTION LOCAL  DEFAULT   30 
    31: 0000000000000000     0 SECTION LOCAL  DEFAULT   31 
    32: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    33: 0000000000602e20     0 OBJECT  LOCAL  DEFAULT   20 __JCR_LIST__
    34: 0000000000400500     0 FUNC    LOCAL  DEFAULT   13 deregister_tm_clones
    35: 0000000000400530     0 FUNC    LOCAL  DEFAULT   13 register_tm_clones
    36: 0000000000400570     0 FUNC    LOCAL  DEFAULT   13 __do_global_dtors_aux
    37: 0000000000603050     1 OBJECT  LOCAL  DEFAULT   25 completed.6973
    38: 0000000000602e18     0 OBJECT  LOCAL  DEFAULT   19 __do_global_dtors_aux_fin
    39: 0000000000400590     0 FUNC    LOCAL  DEFAULT   13 frame_dummy
    40: 0000000000602e10     0 OBJECT  LOCAL  DEFAULT   18 __frame_dummy_init_array_
    41: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS test.c
    42: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_octet_ror.c
    43: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_octet_rol.c
    44: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strdel.c
    45: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strdup.c
    46: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strlen.c
    47: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_addsubstr.c
    48: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putaddr.c
    49: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putendl.c
    50: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putnbr_endl.c
    51: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putlong.c
    52: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putoctet.c
    53: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_itoa.c
    54: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_ltoa.c
    55: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_dectobin.c
    56: 000000000040106d    51 FUNC    LOCAL  DEFAULT   13 findpower
    57: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_memalloc.c
    58: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_memdel.c
    59: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_octetgetbit.c
    60: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_octetsetbit.c
    61: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_octet_shr.c
    62: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_octet_shl.c
    63: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strcmp.c
    64: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strnew.c
    65: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strjoin.c
    66: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_straddcharf.c
    67: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strcleanfront.c
    68: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strclr.c
    69: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strsub.c
    70: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_neg.c
    71: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_power.c
    72: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_addstr.c
    73: 00000000004016a3    47 FUNC    LOCAL  DEFAULT   13 strlennum
    74: 00000000004016d2    18 FUNC    LOCAL  DEFAULT   13 num
    75: 00000000004016e4   206 FUNC    LOCAL  DEFAULT   13 addstr
    76: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_substr.c
    77: 0000000000401896    47 FUNC    LOCAL  DEFAULT   13 strlennum
    78: 00000000004018c5    18 FUNC    LOCAL  DEFAULT   13 num
    79: 00000000004018d7   205 FUNC    LOCAL  DEFAULT   13 substr
    80: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_nbrlen.c
    81: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_longlen.c
    82: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putchar.c
    83: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putstr.c
    84: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_putnbr.c
    85: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_memset.c
    86: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strint.c
    87: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strcpy.c
    88: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ft_strcat.c
    89: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS crtstuff.c
    90: 0000000000402768     0 OBJECT  LOCAL  DEFAULT   17 __FRAME_END__
    91: 0000000000602e20     0 OBJECT  LOCAL  DEFAULT   20 __JCR_END__
    92: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS 
    93: 0000000000602e18     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_end
    94: 0000000000602e28     0 OBJECT  LOCAL  DEFAULT   21 _DYNAMIC
    95: 0000000000602e10     0 NOTYPE  LOCAL  DEFAULT   18 __init_array_start
    96: 0000000000603000     0 OBJECT  LOCAL  DEFAULT   23 _GLOBAL_OFFSET_TABLE_
    97: 0000000000401dd0     2 FUNC    GLOBAL DEFAULT   13 __libc_csu_fini
    98: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND free@@GLIBC_2.2.5
    99: 0000000000401c74   106 FUNC    GLOBAL DEFAULT   13 ft_strcpy
   100: 000000000040119c    59 FUNC    GLOBAL DEFAULT   13 ft_memdel
   101: 0000000000400732   110 FUNC    GLOBAL DEFAULT   13 ft_octet_rol
   102: 0000000000400895    33 FUNC    GLOBAL DEFAULT   13 neg
   103: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_deregisterTMCloneTab
   104: 0000000000603040     0 NOTYPE  WEAK   DEFAULT   24 data_start
   105: 0000000000400dc8   123 FUNC    GLOBAL DEFAULT   13 ft_putoctet
   106: 00000000004014f5   116 FUNC    GLOBAL DEFAULT   13 ft_strcleanfront
   107: 0000000000401569    79 FUNC    GLOBAL DEFAULT   13 ft_strclr
   108: 0000000000400e43   268 FUNC    GLOBAL DEFAULT   13 ft_itoa
   109: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND write@@GLIBC_2.2.5
   110: 0000000000400866    47 FUNC    GLOBAL DEFAULT   13 ft_strlen
   111: 0000000000603050     0 NOTYPE  GLOBAL DEFAULT   24 _edata
   112: 0000000000400d71    33 FUNC    GLOBAL DEFAULT   13 ft_putnbr_endl
   113: 00000000004011fd    98 FUNC    GLOBAL DEFAULT   13 ft_octetsetbit
   114: 0000000000401cde   119 FUNC    GLOBAL DEFAULT   13 ft_strcat
   115: 0000000000401dd4     0 FUNC    GLOBAL DEFAULT   14 _fini
   116: 0000000000401641    14 FUNC    GLOBAL DEFAULT   13 ft_neg
   117: 0000000000400d3e    51 FUNC    GLOBAL DEFAULT   13 ft_putendl
   118: 00000000004015b8   137 FUNC    GLOBAL DEFAULT   13 ft_strsub
   119: 00000000004008b6    92 FUNC    GLOBAL DEFAULT   13 absolute
   120: 0000000000401bce    77 FUNC    GLOBAL DEFAULT   13 ft_memset
   121: 000000000040099c   494 FUNC    GLOBAL DEFAULT   13 addsubstr_next
   122: 00000000004019a4   228 FUNC    GLOBAL DEFAULT   13 ft_substr
   123: 00000000004010a0   165 FUNC    GLOBAL DEFAULT   13 ft_dectobin
   124: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_
   125: 0000000000603040     0 NOTYPE  GLOBAL DEFAULT   24 __data_start
   126: 00000000004007a0    44 FUNC    GLOBAL DEFAULT   13 ft_strdel
   127: 0000000000401315    78 FUNC    GLOBAL DEFAULT   13 ft_strnew
   128: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND __gmon_start__
   129: 0000000000603048     0 OBJECT  GLOBAL HIDDEN    24 __dso_handle
   130: 0000000000400f4f   286 FUNC    GLOBAL DEFAULT   13 ft_ltoa
   131: 0000000000401de0     4 OBJECT  GLOBAL DEFAULT   15 _IO_stdin_used
   132: 00000000004006c4   110 FUNC    GLOBAL DEFAULT   13 ft_octet_ror
   133: 0000000000400912   138 FUNC    GLOBAL DEFAULT   13 operation
   134: 0000000000401b45    37 FUNC    GLOBAL DEFAULT   13 ft_putchar
   135: 00000000004007cc   154 FUNC    GLOBAL DEFAULT   13 ft_strdup
   136: 0000000000401d60   101 FUNC    GLOBAL DEFAULT   13 __libc_csu_init
   137: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND malloc@@GLIBC_2.2.5
   138: 0000000000603058     0 NOTYPE  GLOBAL DEFAULT   25 _end
   139: 00000000004004d0     0 FUNC    GLOBAL DEFAULT   13 _start
   140: 0000000000400d92    54 FUNC    GLOBAL DEFAULT   13 ft_putlong
   141: 000000000040128d    46 FUNC    GLOBAL DEFAULT   13 ft_octet_shl
   142: 0000000000401145    87 FUNC    GLOBAL DEFAULT   13 ft_memalloc
   143: 0000000000603050     0 NOTYPE  GLOBAL DEFAULT   25 __bss_start
   144: 0000000000401b9b    51 FUNC    GLOBAL DEFAULT   13 ft_putnbr
   145: 000000000040063f   133 FUNC    GLOBAL DEFAULT   13 main
   146: 00000000004017b2   228 FUNC    GLOBAL DEFAULT   13 ft_addstr
   147: 00000000004012bb    90 FUNC    GLOBAL DEFAULT   13 ft_strcmp
   148: 0000000000401c1b    89 FUNC    GLOBAL DEFAULT   13 ft_strint
   149: 0000000000401ae3    98 FUNC    GLOBAL DEFAULT   13 ft_longlen
   150: 000000000040125f    46 FUNC    GLOBAL DEFAULT   13 ft_octet_shr
   151: 00000000004013fe   247 FUNC    GLOBAL DEFAULT   13 ft_straddcharf
   152: 0000000000401363   155 FUNC    GLOBAL DEFAULT   13 ft_strjoin
   153: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _Jv_RegisterClasses
   154: 0000000000400b8a   402 FUNC    GLOBAL DEFAULT   13 ft_addsubstr
   155: 0000000000401b6a    49 FUNC    GLOBAL DEFAULT   13 ft_putstr
   156: 00000000004011d7    38 FUNC    GLOBAL DEFAULT   13 ft_octetgetbit
   157: 0000000000603050     0 OBJECT  GLOBAL HIDDEN    24 __TMC_END__
   158: 0000000000000000     0 NOTYPE  WEAK   DEFAULT  UND _ITM_registerTMCloneTable
   159: 000000000040164f    84 FUNC    GLOBAL DEFAULT   13 ft_power
   160: 0000000000400450     0 FUNC    GLOBAL DEFAULT   11 _init
   161: 0000000000400d1c    34 FUNC    GLOBAL DEFAULT   13 ft_putaddr
   162: 0000000000401a88    91 FUNC    GLOBAL DEFAULT   13 ft_nbrlen
   163: 00000000004005bd   130 FUNC    GLOBAL DEFAULT   13 test

a.out:     format de fichier elf64-x86-64


Déassemblage de la section .init:

0000000000400450 <_init>:
  400450:	48 83 ec 08          	sub    $0x8,%rsp
  400454:	48 8b 05 9d 2b 20 00 	mov    0x202b9d(%rip),%rax        # 602ff8 <_DYNAMIC+0x1d0>
  40045b:	48 85 c0             	test   %rax,%rax
  40045e:	74 05                	je     400465 <_init+0x15>
  400460:	e8 4b 00 00 00       	callq  4004b0 <__gmon_start__@plt>
  400465:	48 83 c4 08          	add    $0x8,%rsp
  400469:	c3                   	retq   

Déassemblage de la section .plt:

0000000000400470 <free@plt-0x10>:
  400470:	ff 35 92 2b 20 00    	pushq  0x202b92(%rip)        # 603008 <_GLOBAL_OFFSET_TABLE_+0x8>
  400476:	ff 25 94 2b 20 00    	jmpq   *0x202b94(%rip)        # 603010 <_GLOBAL_OFFSET_TABLE_+0x10>
  40047c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400480 <free@plt>:
  400480:	ff 25 92 2b 20 00    	jmpq   *0x202b92(%rip)        # 603018 <_GLOBAL_OFFSET_TABLE_+0x18>
  400486:	68 00 00 00 00       	pushq  $0x0
  40048b:	e9 e0 ff ff ff       	jmpq   400470 <_init+0x20>

0000000000400490 <write@plt>:
  400490:	ff 25 8a 2b 20 00    	jmpq   *0x202b8a(%rip)        # 603020 <_GLOBAL_OFFSET_TABLE_+0x20>
  400496:	68 01 00 00 00       	pushq  $0x1
  40049b:	e9 d0 ff ff ff       	jmpq   400470 <_init+0x20>

00000000004004a0 <__libc_start_main@plt>:
  4004a0:	ff 25 82 2b 20 00    	jmpq   *0x202b82(%rip)        # 603028 <_GLOBAL_OFFSET_TABLE_+0x28>
  4004a6:	68 02 00 00 00       	pushq  $0x2
  4004ab:	e9 c0 ff ff ff       	jmpq   400470 <_init+0x20>

00000000004004b0 <__gmon_start__@plt>:
  4004b0:	ff 25 7a 2b 20 00    	jmpq   *0x202b7a(%rip)        # 603030 <_GLOBAL_OFFSET_TABLE_+0x30>
  4004b6:	68 03 00 00 00       	pushq  $0x3
  4004bb:	e9 b0 ff ff ff       	jmpq   400470 <_init+0x20>

00000000004004c0 <malloc@plt>:
  4004c0:	ff 25 72 2b 20 00    	jmpq   *0x202b72(%rip)        # 603038 <_GLOBAL_OFFSET_TABLE_+0x38>
  4004c6:	68 04 00 00 00       	pushq  $0x4
  4004cb:	e9 a0 ff ff ff       	jmpq   400470 <_init+0x20>

Déassemblage de la section .text:

00000000004004d0 <_start>:
  4004d0:	31 ed                	xor    %ebp,%ebp
  4004d2:	49 89 d1             	mov    %rdx,%r9
  4004d5:	5e                   	pop    %rsi
  4004d6:	48 89 e2             	mov    %rsp,%rdx
  4004d9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  4004dd:	50                   	push   %rax
  4004de:	54                   	push   %rsp
  4004df:	49 c7 c0 d0 1d 40 00 	mov    $0x401dd0,%r8
  4004e6:	48 c7 c1 60 1d 40 00 	mov    $0x401d60,%rcx
  4004ed:	48 c7 c7 3f 06 40 00 	mov    $0x40063f,%rdi
  4004f4:	e8 a7 ff ff ff       	callq  4004a0 <__libc_start_main@plt>
  4004f9:	f4                   	hlt    
  4004fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400500 <deregister_tm_clones>:
  400500:	b8 57 30 60 00       	mov    $0x603057,%eax
  400505:	55                   	push   %rbp
  400506:	48 2d 50 30 60 00    	sub    $0x603050,%rax
  40050c:	48 83 f8 0e          	cmp    $0xe,%rax
  400510:	48 89 e5             	mov    %rsp,%rbp
  400513:	77 02                	ja     400517 <deregister_tm_clones+0x17>
  400515:	5d                   	pop    %rbp
  400516:	c3                   	retq   
  400517:	b8 00 00 00 00       	mov    $0x0,%eax
  40051c:	48 85 c0             	test   %rax,%rax
  40051f:	74 f4                	je     400515 <deregister_tm_clones+0x15>
  400521:	5d                   	pop    %rbp
  400522:	bf 50 30 60 00       	mov    $0x603050,%edi
  400527:	ff e0                	jmpq   *%rax
  400529:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400530 <register_tm_clones>:
  400530:	b8 50 30 60 00       	mov    $0x603050,%eax
  400535:	55                   	push   %rbp
  400536:	48 2d 50 30 60 00    	sub    $0x603050,%rax
  40053c:	48 c1 f8 03          	sar    $0x3,%rax
  400540:	48 89 e5             	mov    %rsp,%rbp
  400543:	48 89 c2             	mov    %rax,%rdx
  400546:	48 c1 ea 3f          	shr    $0x3f,%rdx
  40054a:	48 01 d0             	add    %rdx,%rax
  40054d:	48 d1 f8             	sar    %rax
  400550:	75 02                	jne    400554 <register_tm_clones+0x24>
  400552:	5d                   	pop    %rbp
  400553:	c3                   	retq   
  400554:	ba 00 00 00 00       	mov    $0x0,%edx
  400559:	48 85 d2             	test   %rdx,%rdx
  40055c:	74 f4                	je     400552 <register_tm_clones+0x22>
  40055e:	5d                   	pop    %rbp
  40055f:	48 89 c6             	mov    %rax,%rsi
  400562:	bf 50 30 60 00       	mov    $0x603050,%edi
  400567:	ff e2                	jmpq   *%rdx
  400569:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000400570 <__do_global_dtors_aux>:
  400570:	80 3d d9 2a 20 00 00 	cmpb   $0x0,0x202ad9(%rip)        # 603050 <__TMC_END__>
  400577:	75 11                	jne    40058a <__do_global_dtors_aux+0x1a>
  400579:	55                   	push   %rbp
  40057a:	48 89 e5             	mov    %rsp,%rbp
  40057d:	e8 7e ff ff ff       	callq  400500 <deregister_tm_clones>
  400582:	5d                   	pop    %rbp
  400583:	c6 05 c6 2a 20 00 01 	movb   $0x1,0x202ac6(%rip)        # 603050 <__TMC_END__>
  40058a:	f3 c3                	repz retq 
  40058c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400590 <frame_dummy>:
  400590:	48 83 3d 88 28 20 00 	cmpq   $0x0,0x202888(%rip)        # 602e20 <__JCR_END__>
  400597:	00 
  400598:	74 1e                	je     4005b8 <frame_dummy+0x28>
  40059a:	b8 00 00 00 00       	mov    $0x0,%eax
  40059f:	48 85 c0             	test   %rax,%rax
  4005a2:	74 14                	je     4005b8 <frame_dummy+0x28>
  4005a4:	55                   	push   %rbp
  4005a5:	bf 20 2e 60 00       	mov    $0x602e20,%edi
  4005aa:	48 89 e5             	mov    %rsp,%rbp
  4005ad:	ff d0                	callq  *%rax
  4005af:	5d                   	pop    %rbp
  4005b0:	e9 7b ff ff ff       	jmpq   400530 <register_tm_clones>
  4005b5:	0f 1f 00             	nopl   (%rax)
  4005b8:	e9 73 ff ff ff       	jmpq   400530 <register_tm_clones>

00000000004005bd <test>:
  4005bd:	55                   	push   %rbp
  4005be:	48 89 e5             	mov    %rsp,%rbp
  4005c1:	48 83 ec 20          	sub    $0x20,%rsp
  4005c5:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4005c8:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4005cb:	89 c7                	mov    %eax,%edi
  4005cd:	e8 9f 07 00 00       	callq  400d71 <ft_putnbr_endl>
  4005d2:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4005d5:	88 45 fe             	mov    %al,-0x2(%rbp)
  4005d8:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
  4005dc:	89 c7                	mov    %eax,%edi
  4005de:	e8 e5 07 00 00       	callq  400dc8 <ft_putoctet>
  4005e3:	bf e4 1d 40 00       	mov    $0x401de4,%edi
  4005e8:	e8 51 07 00 00       	callq  400d3e <ft_putendl>
  4005ed:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
  4005f1:	be 04 00 00 00       	mov    $0x4,%esi
  4005f6:	89 c7                	mov    %eax,%edi
  4005f8:	e8 c7 00 00 00       	callq  4006c4 <ft_octet_ror>
  4005fd:	88 45 ff             	mov    %al,-0x1(%rbp)
  400600:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  400604:	89 c7                	mov    %eax,%edi
  400606:	e8 bd 07 00 00       	callq  400dc8 <ft_putoctet>
  40060b:	bf e4 1d 40 00       	mov    $0x401de4,%edi
  400610:	e8 29 07 00 00       	callq  400d3e <ft_putendl>
  400615:	0f b6 45 fe          	movzbl -0x2(%rbp),%eax
  400619:	be 04 00 00 00       	mov    $0x4,%esi
  40061e:	89 c7                	mov    %eax,%edi
  400620:	e8 0d 01 00 00       	callq  400732 <ft_octet_rol>
  400625:	88 45 ff             	mov    %al,-0x1(%rbp)
  400628:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
  40062c:	89 c7                	mov    %eax,%edi
  40062e:	e8 95 07 00 00       	callq  400dc8 <ft_putoctet>
  400633:	bf e4 1d 40 00       	mov    $0x401de4,%edi
  400638:	e8 01 07 00 00       	callq  400d3e <ft_putendl>
  40063d:	c9                   	leaveq 
  40063e:	c3                   	retq   

000000000040063f <main>:
  40063f:	55                   	push   %rbp
  400640:	48 89 e5             	mov    %rsp,%rbp
  400643:	48 83 ec 10          	sub    $0x10,%rsp
  400647:	bf e5 1d 40 00       	mov    $0x401de5,%edi
  40064c:	e8 7b 01 00 00       	callq  4007cc <ft_strdup>
  400651:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400655:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400659:	48 89 c7             	mov    %rax,%rdi
  40065c:	e8 bb 06 00 00       	callq  400d1c <ft_putaddr>
  400661:	bf e7 1d 40 00       	mov    $0x401de7,%edi
  400666:	e8 61 01 00 00       	callq  4007cc <ft_strdup>
  40066b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40066f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400673:	48 89 c7             	mov    %rax,%rdi
  400676:	e8 a1 06 00 00       	callq  400d1c <ft_putaddr>
  40067b:	bf e4 1d 40 00       	mov    $0x401de4,%edi
  400680:	e8 b9 06 00 00       	callq  400d3e <ft_putendl>
  400685:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
  400689:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  40068d:	ba ff ff ff ff       	mov    $0xffffffff,%edx
  400692:	48 89 ce             	mov    %rcx,%rsi
  400695:	48 89 c7             	mov    %rax,%rdi
  400698:	e8 ed 04 00 00       	callq  400b8a <ft_addsubstr>
  40069d:	48 89 c7             	mov    %rax,%rdi
  4006a0:	e8 99 06 00 00       	callq  400d3e <ft_putendl>
  4006a5:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  4006a9:	48 89 c7             	mov    %rax,%rdi
  4006ac:	e8 ef 00 00 00       	callq  4007a0 <ft_strdel>
  4006b1:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  4006b5:	48 89 c7             	mov    %rax,%rdi
  4006b8:	e8 e3 00 00 00       	callq  4007a0 <ft_strdel>
  4006bd:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  4006c2:	c9                   	leaveq 
  4006c3:	c3                   	retq   

00000000004006c4 <ft_octet_ror>:
  4006c4:	55                   	push   %rbp
  4006c5:	48 89 e5             	mov    %rsp,%rbp
  4006c8:	48 83 ec 20          	sub    $0x20,%rsp
  4006cc:	89 f8                	mov    %edi,%eax
  4006ce:	89 75 e8             	mov    %esi,-0x18(%rbp)
  4006d1:	88 45 ec             	mov    %al,-0x14(%rbp)
  4006d4:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  4006d8:	be 00 00 00 00       	mov    $0x0,%esi
  4006dd:	89 c7                	mov    %eax,%edi
  4006df:	e8 f3 0a 00 00       	callq  4011d7 <ft_octetgetbit>
  4006e4:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4006e7:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  4006eb:	be 01 00 00 00       	mov    $0x1,%esi
  4006f0:	89 c7                	mov    %eax,%edi
  4006f2:	e8 68 0b 00 00       	callq  40125f <ft_octet_shr>
  4006f7:	88 45 ec             	mov    %al,-0x14(%rbp)
  4006fa:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  4006fe:	8b 55 fc             	mov    -0x4(%rbp),%edx
  400701:	be 07 00 00 00       	mov    $0x7,%esi
  400706:	89 c7                	mov    %eax,%edi
  400708:	e8 f0 0a 00 00       	callq  4011fd <ft_octetsetbit>
  40070d:	88 45 ec             	mov    %al,-0x14(%rbp)
  400710:	83 7d e8 01          	cmpl   $0x1,-0x18(%rbp)
  400714:	75 06                	jne    40071c <ft_octet_ror+0x58>
  400716:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  40071a:	eb 14                	jmp    400730 <ft_octet_ror+0x6c>
  40071c:	83 6d e8 01          	subl   $0x1,-0x18(%rbp)
  400720:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  400724:	8b 55 e8             	mov    -0x18(%rbp),%edx
  400727:	89 d6                	mov    %edx,%esi
  400729:	89 c7                	mov    %eax,%edi
  40072b:	e8 94 ff ff ff       	callq  4006c4 <ft_octet_ror>
  400730:	c9                   	leaveq 
  400731:	c3                   	retq   

0000000000400732 <ft_octet_rol>:
  400732:	55                   	push   %rbp
  400733:	48 89 e5             	mov    %rsp,%rbp
  400736:	48 83 ec 20          	sub    $0x20,%rsp
  40073a:	89 f8                	mov    %edi,%eax
  40073c:	89 75 e8             	mov    %esi,-0x18(%rbp)
  40073f:	88 45 ec             	mov    %al,-0x14(%rbp)
  400742:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  400746:	be 07 00 00 00       	mov    $0x7,%esi
  40074b:	89 c7                	mov    %eax,%edi
  40074d:	e8 85 0a 00 00       	callq  4011d7 <ft_octetgetbit>
  400752:	89 45 fc             	mov    %eax,-0x4(%rbp)
  400755:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  400759:	be 01 00 00 00       	mov    $0x1,%esi
  40075e:	89 c7                	mov    %eax,%edi
  400760:	e8 28 0b 00 00       	callq  40128d <ft_octet_shl>
  400765:	88 45 ec             	mov    %al,-0x14(%rbp)
  400768:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  40076c:	8b 55 fc             	mov    -0x4(%rbp),%edx
  40076f:	be 00 00 00 00       	mov    $0x0,%esi
  400774:	89 c7                	mov    %eax,%edi
  400776:	e8 82 0a 00 00       	callq  4011fd <ft_octetsetbit>
  40077b:	88 45 ec             	mov    %al,-0x14(%rbp)
  40077e:	83 7d e8 01          	cmpl   $0x1,-0x18(%rbp)
  400782:	75 06                	jne    40078a <ft_octet_rol+0x58>
  400784:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  400788:	eb 14                	jmp    40079e <ft_octet_rol+0x6c>
  40078a:	83 6d e8 01          	subl   $0x1,-0x18(%rbp)
  40078e:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  400792:	8b 55 e8             	mov    -0x18(%rbp),%edx
  400795:	89 d6                	mov    %edx,%esi
  400797:	89 c7                	mov    %eax,%edi
  400799:	e8 94 ff ff ff       	callq  400732 <ft_octet_rol>
  40079e:	c9                   	leaveq 
  40079f:	c3                   	retq   

00000000004007a0 <ft_strdel>:
  4007a0:	55                   	push   %rbp
  4007a1:	48 89 e5             	mov    %rsp,%rbp
  4007a4:	48 83 ec 10          	sub    $0x10,%rsp
  4007a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4007ac:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4007b1:	74 17                	je     4007ca <ft_strdel+0x2a>
  4007b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4007b7:	48 89 c7             	mov    %rax,%rdi
  4007ba:	e8 dd 09 00 00       	callq  40119c <ft_memdel>
  4007bf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4007c3:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4007ca:	c9                   	leaveq 
  4007cb:	c3                   	retq   

00000000004007cc <ft_strdup>:
  4007cc:	55                   	push   %rbp
  4007cd:	48 89 e5             	mov    %rsp,%rbp
  4007d0:	48 83 ec 20          	sub    $0x20,%rsp
  4007d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4007d8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  4007df:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4007e4:	75 07                	jne    4007ed <ft_strdup+0x21>
  4007e6:	b8 00 00 00 00       	mov    $0x0,%eax
  4007eb:	eb 77                	jmp    400864 <ft_strdup+0x98>
  4007ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4007f1:	48 89 c7             	mov    %rax,%rdi
  4007f4:	e8 6d 00 00 00       	callq  400866 <ft_strlen>
  4007f9:	48 83 c0 01          	add    $0x1,%rax
  4007fd:	48 89 c7             	mov    %rax,%rdi
  400800:	e8 40 09 00 00       	callq  401145 <ft_memalloc>
  400805:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400809:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40080e:	75 07                	jne    400817 <ft_strdup+0x4b>
  400810:	b8 00 00 00 00       	mov    $0x0,%eax
  400815:	eb 4d                	jmp    400864 <ft_strdup+0x98>
  400817:	eb 23                	jmp    40083c <ft_strdup+0x70>
  400819:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40081c:	48 63 d0             	movslq %eax,%rdx
  40081f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400823:	48 01 c2             	add    %rax,%rdx
  400826:	8b 45 f4             	mov    -0xc(%rbp),%eax
  400829:	48 63 c8             	movslq %eax,%rcx
  40082c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400830:	48 01 c8             	add    %rcx,%rax
  400833:	0f b6 00             	movzbl (%rax),%eax
  400836:	88 02                	mov    %al,(%rdx)
  400838:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  40083c:	8b 45 f4             	mov    -0xc(%rbp),%eax
  40083f:	48 63 d0             	movslq %eax,%rdx
  400842:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400846:	48 01 d0             	add    %rdx,%rax
  400849:	0f b6 00             	movzbl (%rax),%eax
  40084c:	84 c0                	test   %al,%al
  40084e:	75 c9                	jne    400819 <ft_strdup+0x4d>
  400850:	8b 45 f4             	mov    -0xc(%rbp),%eax
  400853:	48 63 d0             	movslq %eax,%rdx
  400856:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40085a:	48 01 d0             	add    %rdx,%rax
  40085d:	c6 00 00             	movb   $0x0,(%rax)
  400860:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400864:	c9                   	leaveq 
  400865:	c3                   	retq   

0000000000400866 <ft_strlen>:
  400866:	55                   	push   %rbp
  400867:	48 89 e5             	mov    %rsp,%rbp
  40086a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40086e:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  400875:	00 
  400876:	eb 05                	jmp    40087d <ft_strlen+0x17>
  400878:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  40087d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400881:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400885:	48 01 d0             	add    %rdx,%rax
  400888:	0f b6 00             	movzbl (%rax),%eax
  40088b:	84 c0                	test   %al,%al
  40088d:	75 e9                	jne    400878 <ft_strlen+0x12>
  40088f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400893:	5d                   	pop    %rbp
  400894:	c3                   	retq   

0000000000400895 <neg>:
  400895:	55                   	push   %rbp
  400896:	48 89 e5             	mov    %rsp,%rbp
  400899:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  40089d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4008a1:	0f b6 00             	movzbl (%rax),%eax
  4008a4:	3c 2d                	cmp    $0x2d,%al
  4008a6:	75 07                	jne    4008af <neg+0x1a>
  4008a8:	b8 01 00 00 00       	mov    $0x1,%eax
  4008ad:	eb 05                	jmp    4008b4 <neg+0x1f>
  4008af:	b8 00 00 00 00       	mov    $0x0,%eax
  4008b4:	5d                   	pop    %rbp
  4008b5:	c3                   	retq   

00000000004008b6 <absolute>:
  4008b6:	55                   	push   %rbp
  4008b7:	48 89 e5             	mov    %rsp,%rbp
  4008ba:	48 83 ec 20          	sub    $0x20,%rsp
  4008be:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4008c2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4008c6:	48 89 c7             	mov    %rax,%rdi
  4008c9:	e8 c7 ff ff ff       	callq  400895 <neg>
  4008ce:	83 f8 01             	cmp    $0x1,%eax
  4008d1:	75 29                	jne    4008fc <absolute+0x46>
  4008d3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4008d7:	48 89 c7             	mov    %rax,%rdi
  4008da:	e8 87 ff ff ff       	callq  400866 <ft_strlen>
  4008df:	83 e8 01             	sub    $0x1,%eax
  4008e2:	48 63 d0             	movslq %eax,%rdx
  4008e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4008e9:	be 01 00 00 00       	mov    $0x1,%esi
  4008ee:	48 89 c7             	mov    %rax,%rdi
  4008f1:	e8 c2 0c 00 00       	callq  4015b8 <ft_strsub>
  4008f6:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4008fa:	eb 10                	jmp    40090c <absolute+0x56>
  4008fc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400900:	48 89 c7             	mov    %rax,%rdi
  400903:	e8 c4 fe ff ff       	callq  4007cc <ft_strdup>
  400908:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40090c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400910:	c9                   	leaveq 
  400911:	c3                   	retq   

0000000000400912 <operation>:
  400912:	55                   	push   %rbp
  400913:	48 89 e5             	mov    %rsp,%rbp
  400916:	48 83 ec 30          	sub    $0x30,%rsp
  40091a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  40091e:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  400922:	89 55 dc             	mov    %edx,-0x24(%rbp)
  400925:	89 4d d8             	mov    %ecx,-0x28(%rbp)
  400928:	83 7d d8 01          	cmpl   $0x1,-0x28(%rbp)
  40092c:	75 19                	jne    400947 <operation+0x35>
  40092e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  400932:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400936:	48 89 d6             	mov    %rdx,%rsi
  400939:	48 89 c7             	mov    %rax,%rdi
  40093c:	e8 71 0e 00 00       	callq  4017b2 <ft_addstr>
  400941:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400945:	eb 17                	jmp    40095e <operation+0x4c>
  400947:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
  40094b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40094f:	48 89 d6             	mov    %rdx,%rsi
  400952:	48 89 c7             	mov    %rax,%rdi
  400955:	e8 4a 10 00 00       	callq  4019a4 <ft_substr>
  40095a:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  40095e:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400962:	be 30 00 00 00       	mov    $0x30,%esi
  400967:	48 89 c7             	mov    %rax,%rdi
  40096a:	e8 86 0b 00 00       	callq  4014f5 <ft_strcleanfront>
  40096f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400973:	83 7d dc 01          	cmpl   $0x1,-0x24(%rbp)
  400977:	75 11                	jne    40098a <operation+0x78>
  400979:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  40097d:	be 2d 00 00 00       	mov    $0x2d,%esi
  400982:	48 89 c7             	mov    %rax,%rdi
  400985:	e8 74 0a 00 00       	callq  4013fe <ft_straddcharf>
  40098a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  40098e:	48 89 c7             	mov    %rax,%rdi
  400991:	e8 0a fe ff ff       	callq  4007a0 <ft_strdel>
  400996:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40099a:	c9                   	leaveq 
  40099b:	c3                   	retq   

000000000040099c <addsubstr_next>:
  40099c:	55                   	push   %rbp
  40099d:	48 89 e5             	mov    %rsp,%rbp
  4009a0:	48 83 ec 30          	sub    $0x30,%rsp
  4009a4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4009a8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  4009ac:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4009b0:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
  4009b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4009b8:	48 89 c7             	mov    %rax,%rdi
  4009bb:	e8 d5 fe ff ff       	callq  400895 <neg>
  4009c0:	85 c0                	test   %eax,%eax
  4009c2:	74 45                	je     400a09 <addsubstr_next+0x6d>
  4009c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4009c8:	48 89 c7             	mov    %rax,%rdi
  4009cb:	e8 c5 fe ff ff       	callq  400895 <neg>
  4009d0:	85 c0                	test   %eax,%eax
  4009d2:	74 35                	je     400a09 <addsubstr_next+0x6d>
  4009d4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4009d8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4009dc:	48 89 d6             	mov    %rdx,%rsi
  4009df:	48 89 c7             	mov    %rax,%rdi
  4009e2:	e8 d4 08 00 00       	callq  4012bb <ft_strcmp>
  4009e7:	85 c0                	test   %eax,%eax
  4009e9:	78 1e                	js     400a09 <addsubstr_next+0x6d>
  4009eb:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  4009ef:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4009f3:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  4009f8:	ba 01 00 00 00       	mov    $0x1,%edx
  4009fd:	48 89 c7             	mov    %rax,%rdi
  400a00:	e8 0d ff ff ff       	callq  400912 <operation>
  400a05:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400a09:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400a0d:	48 89 c7             	mov    %rax,%rdi
  400a10:	e8 80 fe ff ff       	callq  400895 <neg>
  400a15:	85 c0                	test   %eax,%eax
  400a17:	74 45                	je     400a5e <addsubstr_next+0xc2>
  400a19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400a1d:	48 89 c7             	mov    %rax,%rdi
  400a20:	e8 70 fe ff ff       	callq  400895 <neg>
  400a25:	85 c0                	test   %eax,%eax
  400a27:	74 35                	je     400a5e <addsubstr_next+0xc2>
  400a29:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  400a2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400a31:	48 89 d6             	mov    %rdx,%rsi
  400a34:	48 89 c7             	mov    %rax,%rdi
  400a37:	e8 7f 08 00 00       	callq  4012bb <ft_strcmp>
  400a3c:	85 c0                	test   %eax,%eax
  400a3e:	79 1e                	jns    400a5e <addsubstr_next+0xc2>
  400a40:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  400a44:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400a48:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  400a4d:	ba 00 00 00 00       	mov    $0x0,%edx
  400a52:	48 89 c7             	mov    %rax,%rdi
  400a55:	e8 b8 fe ff ff       	callq  400912 <operation>
  400a5a:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400a5e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400a62:	48 89 c7             	mov    %rax,%rdi
  400a65:	e8 2b fe ff ff       	callq  400895 <neg>
  400a6a:	85 c0                	test   %eax,%eax
  400a6c:	75 45                	jne    400ab3 <addsubstr_next+0x117>
  400a6e:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400a72:	48 89 c7             	mov    %rax,%rdi
  400a75:	e8 1b fe ff ff       	callq  400895 <neg>
  400a7a:	85 c0                	test   %eax,%eax
  400a7c:	75 35                	jne    400ab3 <addsubstr_next+0x117>
  400a7e:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  400a82:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400a86:	48 89 d6             	mov    %rdx,%rsi
  400a89:	48 89 c7             	mov    %rax,%rdi
  400a8c:	e8 2a 08 00 00       	callq  4012bb <ft_strcmp>
  400a91:	85 c0                	test   %eax,%eax
  400a93:	78 1e                	js     400ab3 <addsubstr_next+0x117>
  400a95:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  400a99:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400a9d:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  400aa2:	ba 00 00 00 00       	mov    $0x0,%edx
  400aa7:	48 89 c7             	mov    %rax,%rdi
  400aaa:	e8 63 fe ff ff       	callq  400912 <operation>
  400aaf:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400ab3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400ab7:	48 89 c7             	mov    %rax,%rdi
  400aba:	e8 d6 fd ff ff       	callq  400895 <neg>
  400abf:	85 c0                	test   %eax,%eax
  400ac1:	75 45                	jne    400b08 <addsubstr_next+0x16c>
  400ac3:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400ac7:	48 89 c7             	mov    %rax,%rdi
  400aca:	e8 c6 fd ff ff       	callq  400895 <neg>
  400acf:	85 c0                	test   %eax,%eax
  400ad1:	75 35                	jne    400b08 <addsubstr_next+0x16c>
  400ad3:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  400ad7:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400adb:	48 89 d6             	mov    %rdx,%rsi
  400ade:	48 89 c7             	mov    %rax,%rdi
  400ae1:	e8 d5 07 00 00       	callq  4012bb <ft_strcmp>
  400ae6:	85 c0                	test   %eax,%eax
  400ae8:	79 1e                	jns    400b08 <addsubstr_next+0x16c>
  400aea:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  400aee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400af2:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  400af7:	ba 01 00 00 00       	mov    $0x1,%edx
  400afc:	48 89 c7             	mov    %rax,%rdi
  400aff:	e8 0e fe ff ff       	callq  400912 <operation>
  400b04:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400b08:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400b0c:	48 89 c7             	mov    %rax,%rdi
  400b0f:	e8 81 fd ff ff       	callq  400895 <neg>
  400b14:	85 c0                	test   %eax,%eax
  400b16:	75 2e                	jne    400b46 <addsubstr_next+0x1aa>
  400b18:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400b1c:	48 89 c7             	mov    %rax,%rdi
  400b1f:	e8 71 fd ff ff       	callq  400895 <neg>
  400b24:	85 c0                	test   %eax,%eax
  400b26:	74 1e                	je     400b46 <addsubstr_next+0x1aa>
  400b28:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  400b2c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400b30:	b9 01 00 00 00       	mov    $0x1,%ecx
  400b35:	ba 01 00 00 00       	mov    $0x1,%edx
  400b3a:	48 89 c7             	mov    %rax,%rdi
  400b3d:	e8 d0 fd ff ff       	callq  400912 <operation>
  400b42:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400b46:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400b4a:	48 89 c7             	mov    %rax,%rdi
  400b4d:	e8 43 fd ff ff       	callq  400895 <neg>
  400b52:	85 c0                	test   %eax,%eax
  400b54:	74 2e                	je     400b84 <addsubstr_next+0x1e8>
  400b56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400b5a:	48 89 c7             	mov    %rax,%rdi
  400b5d:	e8 33 fd ff ff       	callq  400895 <neg>
  400b62:	85 c0                	test   %eax,%eax
  400b64:	75 1e                	jne    400b84 <addsubstr_next+0x1e8>
  400b66:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  400b6a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400b6e:	b9 01 00 00 00       	mov    $0x1,%ecx
  400b73:	ba 00 00 00 00       	mov    $0x0,%edx
  400b78:	48 89 c7             	mov    %rax,%rdi
  400b7b:	e8 92 fd ff ff       	callq  400912 <operation>
  400b80:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400b84:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400b88:	c9                   	leaveq 
  400b89:	c3                   	retq   

0000000000400b8a <ft_addsubstr>:
  400b8a:	55                   	push   %rbp
  400b8b:	48 89 e5             	mov    %rsp,%rbp
  400b8e:	48 83 ec 40          	sub    $0x40,%rsp
  400b92:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  400b96:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  400b9a:	89 55 cc             	mov    %edx,-0x34(%rbp)
  400b9d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400ba1:	48 89 c7             	mov    %rax,%rdi
  400ba4:	e8 0d fd ff ff       	callq  4008b6 <absolute>
  400ba9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  400bad:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400bb1:	48 89 c7             	mov    %rax,%rdi
  400bb4:	e8 fd fc ff ff       	callq  4008b6 <absolute>
  400bb9:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400bbd:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  400bc4:	00 
  400bc5:	83 7d cc 01          	cmpl   $0x1,-0x34(%rbp)
  400bc9:	0f 85 13 01 00 00    	jne    400ce2 <ft_addsubstr+0x158>
  400bcf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400bd3:	48 89 c7             	mov    %rax,%rdi
  400bd6:	e8 ba fc ff ff       	callq  400895 <neg>
  400bdb:	85 c0                	test   %eax,%eax
  400bdd:	74 2e                	je     400c0d <ft_addsubstr+0x83>
  400bdf:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400be3:	48 89 c7             	mov    %rax,%rdi
  400be6:	e8 aa fc ff ff       	callq  400895 <neg>
  400beb:	85 c0                	test   %eax,%eax
  400bed:	74 1e                	je     400c0d <ft_addsubstr+0x83>
  400bef:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  400bf3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400bf7:	b9 01 00 00 00       	mov    $0x1,%ecx
  400bfc:	ba 01 00 00 00       	mov    $0x1,%edx
  400c01:	48 89 c7             	mov    %rax,%rdi
  400c04:	e8 09 fd ff ff       	callq  400912 <operation>
  400c09:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400c0d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400c11:	48 89 c7             	mov    %rax,%rdi
  400c14:	e8 7c fc ff ff       	callq  400895 <neg>
  400c19:	85 c0                	test   %eax,%eax
  400c1b:	74 10                	je     400c2d <ft_addsubstr+0xa3>
  400c1d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400c21:	48 89 c7             	mov    %rax,%rdi
  400c24:	e8 6c fc ff ff       	callq  400895 <neg>
  400c29:	85 c0                	test   %eax,%eax
  400c2b:	74 20                	je     400c4d <ft_addsubstr+0xc3>
  400c2d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400c31:	48 89 c7             	mov    %rax,%rdi
  400c34:	e8 5c fc ff ff       	callq  400895 <neg>
  400c39:	85 c0                	test   %eax,%eax
  400c3b:	75 65                	jne    400ca2 <ft_addsubstr+0x118>
  400c3d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400c41:	48 89 c7             	mov    %rax,%rdi
  400c44:	e8 4c fc ff ff       	callq  400895 <neg>
  400c49:	85 c0                	test   %eax,%eax
  400c4b:	74 55                	je     400ca2 <ft_addsubstr+0x118>
  400c4d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  400c51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400c55:	48 89 d6             	mov    %rdx,%rsi
  400c58:	48 89 c7             	mov    %rax,%rdi
  400c5b:	e8 5b 06 00 00       	callq  4012bb <ft_strcmp>
  400c60:	85 c0                	test   %eax,%eax
  400c62:	78 20                	js     400c84 <ft_addsubstr+0xfa>
  400c64:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  400c68:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400c6c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  400c71:	ba 00 00 00 00       	mov    $0x0,%edx
  400c76:	48 89 c7             	mov    %rax,%rdi
  400c79:	e8 94 fc ff ff       	callq  400912 <operation>
  400c7e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400c82:	eb 1e                	jmp    400ca2 <ft_addsubstr+0x118>
  400c84:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  400c88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400c8c:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  400c91:	ba 01 00 00 00       	mov    $0x1,%edx
  400c96:	48 89 c7             	mov    %rax,%rdi
  400c99:	e8 74 fc ff ff       	callq  400912 <operation>
  400c9e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400ca2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400ca6:	48 89 c7             	mov    %rax,%rdi
  400ca9:	e8 e7 fb ff ff       	callq  400895 <neg>
  400cae:	85 c0                	test   %eax,%eax
  400cb0:	75 4c                	jne    400cfe <ft_addsubstr+0x174>
  400cb2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  400cb6:	48 89 c7             	mov    %rax,%rdi
  400cb9:	e8 d7 fb ff ff       	callq  400895 <neg>
  400cbe:	85 c0                	test   %eax,%eax
  400cc0:	75 3c                	jne    400cfe <ft_addsubstr+0x174>
  400cc2:	48 8b 75 f0          	mov    -0x10(%rbp),%rsi
  400cc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400cca:	b9 01 00 00 00       	mov    $0x1,%ecx
  400ccf:	ba 00 00 00 00       	mov    $0x0,%edx
  400cd4:	48 89 c7             	mov    %rax,%rdi
  400cd7:	e8 36 fc ff ff       	callq  400912 <operation>
  400cdc:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400ce0:	eb 1c                	jmp    400cfe <ft_addsubstr+0x174>
  400ce2:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  400ce6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  400cea:	48 8b 75 d0          	mov    -0x30(%rbp),%rsi
  400cee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  400cf2:	48 89 c7             	mov    %rax,%rdi
  400cf5:	e8 a2 fc ff ff       	callq  40099c <addsubstr_next>
  400cfa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400cfe:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
  400d02:	48 89 c7             	mov    %rax,%rdi
  400d05:	e8 96 fa ff ff       	callq  4007a0 <ft_strdel>
  400d0a:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  400d0e:	48 89 c7             	mov    %rax,%rdi
  400d11:	e8 8a fa ff ff       	callq  4007a0 <ft_strdel>
  400d16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400d1a:	c9                   	leaveq 
  400d1b:	c3                   	retq   

0000000000400d1c <ft_putaddr>:
  400d1c:	55                   	push   %rbp
  400d1d:	48 89 e5             	mov    %rsp,%rbp
  400d20:	48 83 ec 20          	sub    $0x20,%rsp
  400d24:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400d28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400d2c:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400d30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400d34:	48 89 c7             	mov    %rax,%rdi
  400d37:	e8 56 00 00 00       	callq  400d92 <ft_putlong>
  400d3c:	c9                   	leaveq 
  400d3d:	c3                   	retq   

0000000000400d3e <ft_putendl>:
  400d3e:	55                   	push   %rbp
  400d3f:	48 89 e5             	mov    %rsp,%rbp
  400d42:	48 83 ec 20          	sub    $0x20,%rsp
  400d46:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400d4a:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  400d4f:	74 1e                	je     400d6f <ft_putendl+0x31>
  400d51:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400d55:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400d59:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400d5d:	48 89 c7             	mov    %rax,%rdi
  400d60:	e8 05 0e 00 00       	callq  401b6a <ft_putstr>
  400d65:	bf 0a 00 00 00       	mov    $0xa,%edi
  400d6a:	e8 d6 0d 00 00       	callq  401b45 <ft_putchar>
  400d6f:	c9                   	leaveq 
  400d70:	c3                   	retq   

0000000000400d71 <ft_putnbr_endl>:
  400d71:	55                   	push   %rbp
  400d72:	48 89 e5             	mov    %rsp,%rbp
  400d75:	48 83 ec 10          	sub    $0x10,%rsp
  400d79:	89 7d fc             	mov    %edi,-0x4(%rbp)
  400d7c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  400d7f:	89 c7                	mov    %eax,%edi
  400d81:	e8 15 0e 00 00       	callq  401b9b <ft_putnbr>
  400d86:	bf 0a 00 00 00       	mov    $0xa,%edi
  400d8b:	e8 b5 0d 00 00       	callq  401b45 <ft_putchar>
  400d90:	c9                   	leaveq 
  400d91:	c3                   	retq   

0000000000400d92 <ft_putlong>:
  400d92:	55                   	push   %rbp
  400d93:	48 89 e5             	mov    %rsp,%rbp
  400d96:	48 83 ec 20          	sub    $0x20,%rsp
  400d9a:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400d9e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400da2:	48 89 c7             	mov    %rax,%rdi
  400da5:	e8 a5 01 00 00       	callq  400f4f <ft_ltoa>
  400daa:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400dae:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400db2:	48 89 c7             	mov    %rax,%rdi
  400db5:	e8 b0 0d 00 00       	callq  401b6a <ft_putstr>
  400dba:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  400dbe:	48 89 c7             	mov    %rax,%rdi
  400dc1:	e8 da f9 ff ff       	callq  4007a0 <ft_strdel>
  400dc6:	c9                   	leaveq 
  400dc7:	c3                   	retq   

0000000000400dc8 <ft_putoctet>:
  400dc8:	55                   	push   %rbp
  400dc9:	48 89 e5             	mov    %rsp,%rbp
  400dcc:	48 83 ec 20          	sub    $0x20,%rsp
  400dd0:	89 f8                	mov    %edi,%eax
  400dd2:	88 45 ec             	mov    %al,-0x14(%rbp)
  400dd5:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
  400dd9:	89 c7                	mov    %eax,%edi
  400ddb:	e8 c0 02 00 00       	callq  4010a0 <ft_dectobin>
  400de0:	89 c7                	mov    %eax,%edi
  400de2:	e8 5c 00 00 00       	callq  400e43 <ft_itoa>
  400de7:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400deb:	eb 2b                	jmp    400e18 <ft_putoctet+0x50>
  400ded:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400df1:	48 89 c6             	mov    %rax,%rsi
  400df4:	48 8d 3d ee 0f 00 00 	lea    0xfee(%rip),%rdi        # 401de9 <_IO_stdin_used+0x9>
  400dfb:	e8 63 05 00 00       	callq  401363 <ft_strjoin>
  400e00:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400e04:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  400e08:	48 89 c7             	mov    %rax,%rdi
  400e0b:	e8 90 f9 ff ff       	callq  4007a0 <ft_strdel>
  400e10:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400e14:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400e18:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400e1c:	48 89 c7             	mov    %rax,%rdi
  400e1f:	e8 42 fa ff ff       	callq  400866 <ft_strlen>
  400e24:	83 f8 07             	cmp    $0x7,%eax
  400e27:	7e c4                	jle    400ded <ft_putoctet+0x25>
  400e29:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400e2d:	48 89 c7             	mov    %rax,%rdi
  400e30:	e8 35 0d 00 00       	callq  401b6a <ft_putstr>
  400e35:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  400e39:	48 89 c7             	mov    %rax,%rdi
  400e3c:	e8 5f f9 ff ff       	callq  4007a0 <ft_strdel>
  400e41:	c9                   	leaveq 
  400e42:	c3                   	retq   

0000000000400e43 <ft_itoa>:
  400e43:	55                   	push   %rbp
  400e44:	48 89 e5             	mov    %rsp,%rbp
  400e47:	48 83 ec 20          	sub    $0x20,%rsp
  400e4b:	89 7d ec             	mov    %edi,-0x14(%rbp)
  400e4e:	81 7d ec 00 00 00 80 	cmpl   $0x80000000,-0x14(%rbp)
  400e55:	75 11                	jne    400e68 <ft_itoa+0x25>
  400e57:	48 8d 3d 8d 0f 00 00 	lea    0xf8d(%rip),%rdi        # 401deb <_IO_stdin_used+0xb>
  400e5e:	e8 69 f9 ff ff       	callq  4007cc <ft_strdup>
  400e63:	e9 e5 00 00 00       	jmpq   400f4d <ft_itoa+0x10a>
  400e68:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  400e6c:	75 11                	jne    400e7f <ft_itoa+0x3c>
  400e6e:	48 8d 3d 82 0f 00 00 	lea    0xf82(%rip),%rdi        # 401df7 <_IO_stdin_used+0x17>
  400e75:	e8 52 f9 ff ff       	callq  4007cc <ft_strdup>
  400e7a:	e9 ce 00 00 00       	jmpq   400f4d <ft_itoa+0x10a>
  400e7f:	8b 45 ec             	mov    -0x14(%rbp),%eax
  400e82:	89 c7                	mov    %eax,%edi
  400e84:	e8 ff 0b 00 00       	callq  401a88 <ft_nbrlen>
  400e89:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400e8d:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400e91:	48 83 c0 01          	add    $0x1,%rax
  400e95:	48 89 c7             	mov    %rax,%rdi
  400e98:	e8 78 04 00 00       	callq  401315 <ft_strnew>
  400e9d:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400ea1:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  400ea6:	75 0a                	jne    400eb2 <ft_itoa+0x6f>
  400ea8:	b8 00 00 00 00       	mov    $0x0,%eax
  400ead:	e9 9b 00 00 00       	jmpq   400f4d <ft_itoa+0x10a>
  400eb2:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  400eb6:	79 0a                	jns    400ec2 <ft_itoa+0x7f>
  400eb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400ebc:	c6 00 2d             	movb   $0x2d,(%rax)
  400ebf:	f7 5d ec             	negl   -0x14(%rbp)
  400ec2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400ec6:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  400eca:	48 01 d0             	add    %rdx,%rax
  400ecd:	c6 00 00             	movb   $0x0,(%rax)
  400ed0:	eb 5a                	jmp    400f2c <ft_itoa+0xe9>
  400ed2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400ed6:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  400eda:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400ede:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
  400ee2:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  400ee5:	ba 67 66 66 66       	mov    $0x66666667,%edx
  400eea:	89 c8                	mov    %ecx,%eax
  400eec:	f7 ea                	imul   %edx
  400eee:	c1 fa 02             	sar    $0x2,%edx
  400ef1:	89 c8                	mov    %ecx,%eax
  400ef3:	c1 f8 1f             	sar    $0x1f,%eax
  400ef6:	29 c2                	sub    %eax,%edx
  400ef8:	89 d0                	mov    %edx,%eax
  400efa:	c1 e0 02             	shl    $0x2,%eax
  400efd:	01 d0                	add    %edx,%eax
  400eff:	01 c0                	add    %eax,%eax
  400f01:	29 c1                	sub    %eax,%ecx
  400f03:	89 ca                	mov    %ecx,%edx
  400f05:	89 d0                	mov    %edx,%eax
  400f07:	83 c0 30             	add    $0x30,%eax
  400f0a:	88 06                	mov    %al,(%rsi)
  400f0c:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  400f0f:	ba 67 66 66 66       	mov    $0x66666667,%edx
  400f14:	89 c8                	mov    %ecx,%eax
  400f16:	f7 ea                	imul   %edx
  400f18:	c1 fa 02             	sar    $0x2,%edx
  400f1b:	89 c8                	mov    %ecx,%eax
  400f1d:	c1 f8 1f             	sar    $0x1f,%eax
  400f20:	29 c2                	sub    %eax,%edx
  400f22:	89 d0                	mov    %edx,%eax
  400f24:	89 45 ec             	mov    %eax,-0x14(%rbp)
  400f27:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
  400f2c:	83 7d ec 09          	cmpl   $0x9,-0x14(%rbp)
  400f30:	7f a0                	jg     400ed2 <ft_itoa+0x8f>
  400f32:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400f36:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  400f3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400f3e:	48 01 c2             	add    %rax,%rdx
  400f41:	8b 45 ec             	mov    -0x14(%rbp),%eax
  400f44:	83 c0 30             	add    $0x30,%eax
  400f47:	88 02                	mov    %al,(%rdx)
  400f49:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400f4d:	c9                   	leaveq 
  400f4e:	c3                   	retq   

0000000000400f4f <ft_ltoa>:
  400f4f:	55                   	push   %rbp
  400f50:	48 89 e5             	mov    %rsp,%rbp
  400f53:	48 83 ec 20          	sub    $0x20,%rsp
  400f57:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  400f5b:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  400f60:	75 11                	jne    400f73 <ft_ltoa+0x24>
  400f62:	48 8d 3d 90 0e 00 00 	lea    0xe90(%rip),%rdi        # 401df9 <_IO_stdin_used+0x19>
  400f69:	e8 5e f8 ff ff       	callq  4007cc <ft_strdup>
  400f6e:	e9 f8 00 00 00       	jmpq   40106b <ft_ltoa+0x11c>
  400f73:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  400f77:	48 89 c7             	mov    %rax,%rdi
  400f7a:	e8 64 0b 00 00       	callq  401ae3 <ft_longlen>
  400f7f:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  400f83:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400f87:	48 83 c0 01          	add    $0x1,%rax
  400f8b:	48 89 c7             	mov    %rax,%rdi
  400f8e:	e8 82 03 00 00       	callq  401315 <ft_strnew>
  400f93:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  400f97:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  400f9c:	75 0a                	jne    400fa8 <ft_ltoa+0x59>
  400f9e:	b8 00 00 00 00       	mov    $0x0,%eax
  400fa3:	e9 c3 00 00 00       	jmpq   40106b <ft_ltoa+0x11c>
  400fa8:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  400fad:	79 0b                	jns    400fba <ft_ltoa+0x6b>
  400faf:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400fb3:	c6 00 2d             	movb   $0x2d,(%rax)
  400fb6:	48 f7 5d e8          	negq   -0x18(%rbp)
  400fba:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400fbe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  400fc2:	48 01 d0             	add    %rdx,%rax
  400fc5:	c6 00 00             	movb   $0x0,(%rax)
  400fc8:	eb 7a                	jmp    401044 <ft_ltoa+0xf5>
  400fca:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  400fce:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  400fd2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400fd6:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
  400fda:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  400fde:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
  400fe5:	66 66 66 
  400fe8:	48 89 c8             	mov    %rcx,%rax
  400feb:	48 f7 ea             	imul   %rdx
  400fee:	48 c1 fa 02          	sar    $0x2,%rdx
  400ff2:	48 89 c8             	mov    %rcx,%rax
  400ff5:	48 c1 f8 3f          	sar    $0x3f,%rax
  400ff9:	48 29 c2             	sub    %rax,%rdx
  400ffc:	48 89 d0             	mov    %rdx,%rax
  400fff:	48 c1 e0 02          	shl    $0x2,%rax
  401003:	48 01 d0             	add    %rdx,%rax
  401006:	48 01 c0             	add    %rax,%rax
  401009:	48 29 c1             	sub    %rax,%rcx
  40100c:	48 89 ca             	mov    %rcx,%rdx
  40100f:	89 d0                	mov    %edx,%eax
  401011:	83 c0 30             	add    $0x30,%eax
  401014:	88 06                	mov    %al,(%rsi)
  401016:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  40101a:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
  401021:	66 66 66 
  401024:	48 89 c8             	mov    %rcx,%rax
  401027:	48 f7 ea             	imul   %rdx
  40102a:	48 c1 fa 02          	sar    $0x2,%rdx
  40102e:	48 89 c8             	mov    %rcx,%rax
  401031:	48 c1 f8 3f          	sar    $0x3f,%rax
  401035:	48 29 c2             	sub    %rax,%rdx
  401038:	48 89 d0             	mov    %rdx,%rax
  40103b:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40103f:	48 83 6d f0 01       	subq   $0x1,-0x10(%rbp)
  401044:	48 83 7d e8 09       	cmpq   $0x9,-0x18(%rbp)
  401049:	0f 8f 7b ff ff ff    	jg     400fca <ft_ltoa+0x7b>
  40104f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401053:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  401057:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40105b:	48 01 c2             	add    %rax,%rdx
  40105e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401062:	83 c0 30             	add    $0x30,%eax
  401065:	88 02                	mov    %al,(%rdx)
  401067:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40106b:	c9                   	leaveq 
  40106c:	c3                   	retq   

000000000040106d <findpower>:
  40106d:	55                   	push   %rbp
  40106e:	48 89 e5             	mov    %rsp,%rbp
  401071:	48 83 ec 20          	sub    $0x20,%rsp
  401075:	89 7d ec             	mov    %edi,-0x14(%rbp)
  401078:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40107f:	eb 04                	jmp    401085 <findpower+0x18>
  401081:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  401085:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401088:	89 c6                	mov    %eax,%esi
  40108a:	bf 02 00 00 00       	mov    $0x2,%edi
  40108f:	e8 bb 05 00 00       	callq  40164f <ft_power>
  401094:	01 c0                	add    %eax,%eax
  401096:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  401099:	7e e6                	jle    401081 <findpower+0x14>
  40109b:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40109e:	c9                   	leaveq 
  40109f:	c3                   	retq   

00000000004010a0 <ft_dectobin>:
  4010a0:	55                   	push   %rbp
  4010a1:	48 89 e5             	mov    %rsp,%rbp
  4010a4:	48 83 ec 20          	sub    $0x20,%rsp
  4010a8:	89 7d ec             	mov    %edi,-0x14(%rbp)
  4010ab:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4010ae:	89 c7                	mov    %eax,%edi
  4010b0:	e8 b8 ff ff ff       	callq  40106d <findpower>
  4010b5:	89 45 f4             	mov    %eax,-0xc(%rbp)
  4010b8:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4010bb:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4010be:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  4010c5:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4010c9:	79 1a                	jns    4010e5 <ft_dectobin+0x45>
  4010cb:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4010ce:	89 c7                	mov    %eax,%edi
  4010d0:	e8 6c 05 00 00       	callq  401641 <ft_neg>
  4010d5:	89 c7                	mov    %eax,%edi
  4010d7:	e8 c4 ff ff ff       	callq  4010a0 <ft_dectobin>
  4010dc:	89 c7                	mov    %eax,%edi
  4010de:	e8 5e 05 00 00       	callq  401641 <ft_neg>
  4010e3:	eb 5e                	jmp    401143 <ft_dectobin+0xa3>
  4010e5:	eb 49                	jmp    401130 <ft_dectobin+0x90>
  4010e7:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4010ea:	89 c6                	mov    %eax,%esi
  4010ec:	bf 02 00 00 00       	mov    $0x2,%edi
  4010f1:	e8 59 05 00 00       	callq  40164f <ft_power>
  4010f6:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  4010f9:	7f 2b                	jg     401126 <ft_dectobin+0x86>
  4010fb:	8b 45 f4             	mov    -0xc(%rbp),%eax
  4010fe:	89 c6                	mov    %eax,%esi
  401100:	bf 0a 00 00 00       	mov    $0xa,%edi
  401105:	e8 45 05 00 00       	callq  40164f <ft_power>
  40110a:	01 45 f8             	add    %eax,-0x8(%rbp)
  40110d:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401110:	89 c6                	mov    %eax,%esi
  401112:	bf 02 00 00 00       	mov    $0x2,%edi
  401117:	e8 33 05 00 00       	callq  40164f <ft_power>
  40111c:	8b 55 ec             	mov    -0x14(%rbp),%edx
  40111f:	29 c2                	sub    %eax,%edx
  401121:	89 d0                	mov    %edx,%eax
  401123:	89 45 fc             	mov    %eax,-0x4(%rbp)
  401126:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401129:	89 45 ec             	mov    %eax,-0x14(%rbp)
  40112c:	83 6d f4 01          	subl   $0x1,-0xc(%rbp)
  401130:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  401134:	79 b1                	jns    4010e7 <ft_dectobin+0x47>
  401136:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  40113a:	75 04                	jne    401140 <ft_dectobin+0xa0>
  40113c:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  401140:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401143:	c9                   	leaveq 
  401144:	c3                   	retq   

0000000000401145 <ft_memalloc>:
  401145:	55                   	push   %rbp
  401146:	48 89 e5             	mov    %rsp,%rbp
  401149:	48 83 ec 20          	sub    $0x20,%rsp
  40114d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401151:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401156:	75 07                	jne    40115f <ft_memalloc+0x1a>
  401158:	b8 00 00 00 00       	mov    $0x0,%eax
  40115d:	eb 3b                	jmp    40119a <ft_memalloc+0x55>
  40115f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401163:	48 89 c7             	mov    %rax,%rdi
  401166:	e8 55 f3 ff ff       	callq  4004c0 <malloc@plt>
  40116b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40116f:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  401174:	75 07                	jne    40117d <ft_memalloc+0x38>
  401176:	b8 00 00 00 00       	mov    $0x0,%eax
  40117b:	eb 1d                	jmp    40119a <ft_memalloc+0x55>
  40117d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401181:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401185:	be 00 00 00 00       	mov    $0x0,%esi
  40118a:	48 89 c7             	mov    %rax,%rdi
  40118d:	e8 3c 0a 00 00       	callq  401bce <ft_memset>
  401192:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401196:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40119a:	c9                   	leaveq 
  40119b:	c3                   	retq   

000000000040119c <ft_memdel>:
  40119c:	55                   	push   %rbp
  40119d:	48 89 e5             	mov    %rsp,%rbp
  4011a0:	48 83 ec 10          	sub    $0x10,%rsp
  4011a4:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4011a8:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4011ad:	74 26                	je     4011d5 <ft_memdel+0x39>
  4011af:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4011b3:	48 8b 00             	mov    (%rax),%rax
  4011b6:	48 85 c0             	test   %rax,%rax
  4011b9:	74 1a                	je     4011d5 <ft_memdel+0x39>
  4011bb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4011bf:	48 8b 00             	mov    (%rax),%rax
  4011c2:	48 89 c7             	mov    %rax,%rdi
  4011c5:	e8 b6 f2 ff ff       	callq  400480 <free@plt>
  4011ca:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4011ce:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
  4011d5:	c9                   	leaveq 
  4011d6:	c3                   	retq   

00000000004011d7 <ft_octetgetbit>:
  4011d7:	55                   	push   %rbp
  4011d8:	48 89 e5             	mov    %rsp,%rbp
  4011db:	89 f8                	mov    %edi,%eax
  4011dd:	89 75 f8             	mov    %esi,-0x8(%rbp)
  4011e0:	88 45 fc             	mov    %al,-0x4(%rbp)
  4011e3:	0f b6 55 fc          	movzbl -0x4(%rbp),%edx
  4011e7:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4011ea:	89 c1                	mov    %eax,%ecx
  4011ec:	d3 fa                	sar    %cl,%edx
  4011ee:	89 d0                	mov    %edx,%eax
  4011f0:	83 e0 01             	and    $0x1,%eax
  4011f3:	85 c0                	test   %eax,%eax
  4011f5:	0f 95 c0             	setne  %al
  4011f8:	0f b6 c0             	movzbl %al,%eax
  4011fb:	5d                   	pop    %rbp
  4011fc:	c3                   	retq   

00000000004011fd <ft_octetsetbit>:
  4011fd:	55                   	push   %rbp
  4011fe:	48 89 e5             	mov    %rsp,%rbp
  401201:	89 f8                	mov    %edi,%eax
  401203:	89 75 f8             	mov    %esi,-0x8(%rbp)
  401206:	89 55 f4             	mov    %edx,-0xc(%rbp)
  401209:	88 45 fc             	mov    %al,-0x4(%rbp)
  40120c:	8b 45 f8             	mov    -0x8(%rbp),%eax
  40120f:	99                   	cltd   
  401210:	c1 ea 1d             	shr    $0x1d,%edx
  401213:	01 d0                	add    %edx,%eax
  401215:	83 e0 07             	and    $0x7,%eax
  401218:	29 d0                	sub    %edx,%eax
  40121a:	89 45 f8             	mov    %eax,-0x8(%rbp)
  40121d:	83 7d f4 00          	cmpl   $0x0,-0xc(%rbp)
  401221:	75 1d                	jne    401240 <ft_octetsetbit+0x43>
  401223:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401226:	ba 01 00 00 00       	mov    $0x1,%edx
  40122b:	89 c1                	mov    %eax,%ecx
  40122d:	d3 e2                	shl    %cl,%edx
  40122f:	89 d0                	mov    %edx,%eax
  401231:	f7 d0                	not    %eax
  401233:	89 c2                	mov    %eax,%edx
  401235:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
  401239:	21 d0                	and    %edx,%eax
  40123b:	88 45 fc             	mov    %al,-0x4(%rbp)
  40123e:	eb 19                	jmp    401259 <ft_octetsetbit+0x5c>
  401240:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401243:	ba 01 00 00 00       	mov    $0x1,%edx
  401248:	89 c1                	mov    %eax,%ecx
  40124a:	d3 e2                	shl    %cl,%edx
  40124c:	89 d0                	mov    %edx,%eax
  40124e:	89 c2                	mov    %eax,%edx
  401250:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
  401254:	09 d0                	or     %edx,%eax
  401256:	88 45 fc             	mov    %al,-0x4(%rbp)
  401259:	0f b6 45 fc          	movzbl -0x4(%rbp),%eax
  40125d:	5d                   	pop    %rbp
  40125e:	c3                   	retq   

000000000040125f <ft_octet_shr>:
  40125f:	55                   	push   %rbp
  401260:	48 89 e5             	mov    %rsp,%rbp
  401263:	89 f8                	mov    %edi,%eax
  401265:	89 75 f8             	mov    %esi,-0x8(%rbp)
  401268:	88 45 fc             	mov    %al,-0x4(%rbp)
  40126b:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  40126f:	7e 06                	jle    401277 <ft_octet_shr+0x18>
  401271:	83 7d f8 07          	cmpl   $0x7,-0x8(%rbp)
  401275:	7e 07                	jle    40127e <ft_octet_shr+0x1f>
  401277:	b8 00 00 00 00       	mov    $0x0,%eax
  40127c:	eb 0d                	jmp    40128b <ft_octet_shr+0x2c>
  40127e:	0f b6 55 fc          	movzbl -0x4(%rbp),%edx
  401282:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401285:	89 c1                	mov    %eax,%ecx
  401287:	d3 fa                	sar    %cl,%edx
  401289:	89 d0                	mov    %edx,%eax
  40128b:	5d                   	pop    %rbp
  40128c:	c3                   	retq   

000000000040128d <ft_octet_shl>:
  40128d:	55                   	push   %rbp
  40128e:	48 89 e5             	mov    %rsp,%rbp
  401291:	89 f8                	mov    %edi,%eax
  401293:	89 75 f8             	mov    %esi,-0x8(%rbp)
  401296:	88 45 fc             	mov    %al,-0x4(%rbp)
  401299:	83 7d f8 00          	cmpl   $0x0,-0x8(%rbp)
  40129d:	7e 06                	jle    4012a5 <ft_octet_shl+0x18>
  40129f:	83 7d f8 07          	cmpl   $0x7,-0x8(%rbp)
  4012a3:	7e 07                	jle    4012ac <ft_octet_shl+0x1f>
  4012a5:	b8 00 00 00 00       	mov    $0x0,%eax
  4012aa:	eb 0d                	jmp    4012b9 <ft_octet_shl+0x2c>
  4012ac:	0f b6 55 fc          	movzbl -0x4(%rbp),%edx
  4012b0:	8b 45 f8             	mov    -0x8(%rbp),%eax
  4012b3:	89 c1                	mov    %eax,%ecx
  4012b5:	d3 e2                	shl    %cl,%edx
  4012b7:	89 d0                	mov    %edx,%eax
  4012b9:	5d                   	pop    %rbp
  4012ba:	c3                   	retq   

00000000004012bb <ft_strcmp>:
  4012bb:	55                   	push   %rbp
  4012bc:	48 89 e5             	mov    %rsp,%rbp
  4012bf:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4012c3:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4012c7:	eb 0a                	jmp    4012d3 <ft_strcmp+0x18>
  4012c9:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
  4012ce:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  4012d3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4012d7:	0f b6 00             	movzbl (%rax),%eax
  4012da:	84 c0                	test   %al,%al
  4012dc:	74 1d                	je     4012fb <ft_strcmp+0x40>
  4012de:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4012e2:	0f b6 00             	movzbl (%rax),%eax
  4012e5:	84 c0                	test   %al,%al
  4012e7:	74 12                	je     4012fb <ft_strcmp+0x40>
  4012e9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4012ed:	0f b6 10             	movzbl (%rax),%edx
  4012f0:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  4012f4:	0f b6 00             	movzbl (%rax),%eax
  4012f7:	38 c2                	cmp    %al,%dl
  4012f9:	74 ce                	je     4012c9 <ft_strcmp+0xe>
  4012fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4012ff:	0f b6 00             	movzbl (%rax),%eax
  401302:	0f b6 d0             	movzbl %al,%edx
  401305:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401309:	0f b6 00             	movzbl (%rax),%eax
  40130c:	0f b6 c0             	movzbl %al,%eax
  40130f:	29 c2                	sub    %eax,%edx
  401311:	89 d0                	mov    %edx,%eax
  401313:	5d                   	pop    %rbp
  401314:	c3                   	retq   

0000000000401315 <ft_strnew>:
  401315:	55                   	push   %rbp
  401316:	48 89 e5             	mov    %rsp,%rbp
  401319:	48 83 ec 20          	sub    $0x20,%rsp
  40131d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401321:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401325:	48 83 c0 01          	add    $0x1,%rax
  401329:	48 89 c7             	mov    %rax,%rdi
  40132c:	e8 14 fe ff ff       	callq  401145 <ft_memalloc>
  401331:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401335:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40133a:	75 07                	jne    401343 <ft_strnew+0x2e>
  40133c:	b8 00 00 00 00       	mov    $0x0,%eax
  401341:	eb 1e                	jmp    401361 <ft_strnew+0x4c>
  401343:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401347:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
  40134b:	48 01 d0             	add    %rdx,%rax
  40134e:	c6 00 00             	movb   $0x0,(%rax)
  401351:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401355:	48 89 c7             	mov    %rax,%rdi
  401358:	e8 0c 02 00 00       	callq  401569 <ft_strclr>
  40135d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401361:	c9                   	leaveq 
  401362:	c3                   	retq   

0000000000401363 <ft_strjoin>:
  401363:	55                   	push   %rbp
  401364:	48 89 e5             	mov    %rsp,%rbp
  401367:	53                   	push   %rbx
  401368:	48 83 ec 28          	sub    $0x28,%rsp
  40136c:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  401370:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  401374:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
  401379:	74 07                	je     401382 <ft_strjoin+0x1f>
  40137b:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
  401380:	75 07                	jne    401389 <ft_strjoin+0x26>
  401382:	b8 00 00 00 00       	mov    $0x0,%eax
  401387:	eb 6e                	jmp    4013f7 <ft_strjoin+0x94>
  401389:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40138d:	48 89 c7             	mov    %rax,%rdi
  401390:	e8 d1 f4 ff ff       	callq  400866 <ft_strlen>
  401395:	48 89 c3             	mov    %rax,%rbx
  401398:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  40139c:	48 89 c7             	mov    %rax,%rdi
  40139f:	e8 c2 f4 ff ff       	callq  400866 <ft_strlen>
  4013a4:	48 01 d8             	add    %rbx,%rax
  4013a7:	48 83 c0 01          	add    $0x1,%rax
  4013ab:	48 89 c7             	mov    %rax,%rdi
  4013ae:	e8 62 ff ff ff       	callq  401315 <ft_strnew>
  4013b3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4013b7:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4013bc:	75 07                	jne    4013c5 <ft_strjoin+0x62>
  4013be:	b8 00 00 00 00       	mov    $0x0,%eax
  4013c3:	eb 32                	jmp    4013f7 <ft_strjoin+0x94>
  4013c5:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4013c9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4013cd:	48 89 d6             	mov    %rdx,%rsi
  4013d0:	48 89 c7             	mov    %rax,%rdi
  4013d3:	e8 9c 08 00 00       	callq  401c74 <ft_strcpy>
  4013d8:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4013dc:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
  4013e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4013e4:	48 89 d6             	mov    %rdx,%rsi
  4013e7:	48 89 c7             	mov    %rax,%rdi
  4013ea:	e8 ef 08 00 00       	callq  401cde <ft_strcat>
  4013ef:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  4013f3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4013f7:	48 83 c4 28          	add    $0x28,%rsp
  4013fb:	5b                   	pop    %rbx
  4013fc:	5d                   	pop    %rbp
  4013fd:	c3                   	retq   

00000000004013fe <ft_straddcharf>:
  4013fe:	55                   	push   %rbp
  4013ff:	48 89 e5             	mov    %rsp,%rbp
  401402:	48 83 ec 30          	sub    $0x30,%rsp
  401406:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  40140a:	89 f0                	mov    %esi,%eax
  40140c:	88 45 d4             	mov    %al,-0x2c(%rbp)
  40140f:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%rbp)
  401416:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40141a:	48 8b 00             	mov    (%rax),%rax
  40141d:	48 85 c0             	test   %rax,%rax
  401420:	74 15                	je     401437 <ft_straddcharf+0x39>
  401422:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401426:	48 8b 00             	mov    (%rax),%rax
  401429:	48 89 c7             	mov    %rax,%rdi
  40142c:	e8 9b f3 ff ff       	callq  4007cc <ft_strdup>
  401431:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401435:	eb 10                	jmp    401447 <ft_straddcharf+0x49>
  401437:	48 8d 3d bd 09 00 00 	lea    0x9bd(%rip),%rdi        # 401dfb <_IO_stdin_used+0x1b>
  40143e:	e8 89 f3 ff ff       	callq  4007cc <ft_strdup>
  401443:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
  401447:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40144b:	48 89 c7             	mov    %rax,%rdi
  40144e:	e8 4d f3 ff ff       	callq  4007a0 <ft_strdel>
  401453:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
  401457:	48 89 c7             	mov    %rax,%rdi
  40145a:	e8 07 f4 ff ff       	callq  400866 <ft_strlen>
  40145f:	48 83 c0 02          	add    $0x2,%rax
  401463:	48 89 c7             	mov    %rax,%rdi
  401466:	e8 da fc ff ff       	callq  401145 <ft_memalloc>
  40146b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  40146f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401473:	0f b6 55 d4          	movzbl -0x2c(%rbp),%edx
  401477:	88 10                	mov    %dl,(%rax)
  401479:	eb 22                	jmp    40149d <ft_straddcharf+0x9f>
  40147b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40147f:	8b 55 ec             	mov    -0x14(%rbp),%edx
  401482:	48 63 d2             	movslq %edx,%rdx
  401485:	48 83 c2 01          	add    $0x1,%rdx
  401489:	48 01 c2             	add    %rax,%rdx
  40148c:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
  401490:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401493:	48 98                	cltq   
  401495:	48 01 c8             	add    %rcx,%rax
  401498:	0f b6 00             	movzbl (%rax),%eax
  40149b:	88 02                	mov    %al,(%rdx)
  40149d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
  4014a1:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
  4014a5:	8b 45 ec             	mov    -0x14(%rbp),%eax
  4014a8:	48 98                	cltq   
  4014aa:	48 01 d0             	add    %rdx,%rax
  4014ad:	0f b6 00             	movzbl (%rax),%eax
  4014b0:	84 c0                	test   %al,%al
  4014b2:	75 c7                	jne    40147b <ft_straddcharf+0x7d>
  4014b4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4014b8:	8b 55 ec             	mov    -0x14(%rbp),%edx
  4014bb:	48 63 d2             	movslq %edx,%rdx
  4014be:	48 83 c2 01          	add    $0x1,%rdx
  4014c2:	48 01 d0             	add    %rdx,%rax
  4014c5:	c6 00 00             	movb   $0x0,(%rax)
  4014c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4014cc:	48 89 c7             	mov    %rax,%rdi
  4014cf:	e8 f8 f2 ff ff       	callq  4007cc <ft_strdup>
  4014d4:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
  4014d8:	48 89 02             	mov    %rax,(%rdx)
  4014db:	48 8d 45 f0          	lea    -0x10(%rbp),%rax
  4014df:	48 89 c7             	mov    %rax,%rdi
  4014e2:	e8 b9 f2 ff ff       	callq  4007a0 <ft_strdel>
  4014e7:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  4014eb:	48 89 c7             	mov    %rax,%rdi
  4014ee:	e8 ad f2 ff ff       	callq  4007a0 <ft_strdel>
  4014f3:	c9                   	leaveq 
  4014f4:	c3                   	retq   

00000000004014f5 <ft_strcleanfront>:
  4014f5:	55                   	push   %rbp
  4014f6:	48 89 e5             	mov    %rsp,%rbp
  4014f9:	48 83 ec 20          	sub    $0x20,%rsp
  4014fd:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401501:	89 f0                	mov    %esi,%eax
  401503:	88 45 e4             	mov    %al,-0x1c(%rbp)
  401506:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  40150d:	eb 04                	jmp    401513 <ft_strcleanfront+0x1e>
  40150f:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  401513:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401516:	48 63 d0             	movslq %eax,%rdx
  401519:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40151d:	48 01 d0             	add    %rdx,%rax
  401520:	0f b6 00             	movzbl (%rax),%eax
  401523:	3a 45 e4             	cmp    -0x1c(%rbp),%al
  401526:	74 e7                	je     40150f <ft_strcleanfront+0x1a>
  401528:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40152c:	48 89 c7             	mov    %rax,%rdi
  40152f:	e8 32 f3 ff ff       	callq  400866 <ft_strlen>
  401534:	8b 55 f4             	mov    -0xc(%rbp),%edx
  401537:	48 63 d2             	movslq %edx,%rdx
  40153a:	48 29 d0             	sub    %rdx,%rax
  40153d:	48 89 c2             	mov    %rax,%rdx
  401540:	8b 4d f4             	mov    -0xc(%rbp),%ecx
  401543:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401547:	89 ce                	mov    %ecx,%esi
  401549:	48 89 c7             	mov    %rax,%rdi
  40154c:	e8 67 00 00 00       	callq  4015b8 <ft_strsub>
  401551:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401555:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  40155a:	75 07                	jne    401563 <ft_strcleanfront+0x6e>
  40155c:	b8 00 00 00 00       	mov    $0x0,%eax
  401561:	eb 04                	jmp    401567 <ft_strcleanfront+0x72>
  401563:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401567:	c9                   	leaveq 
  401568:	c3                   	retq   

0000000000401569 <ft_strclr>:
  401569:	55                   	push   %rbp
  40156a:	48 89 e5             	mov    %rsp,%rbp
  40156d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401571:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  401578:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  40157d:	74 37                	je     4015b6 <ft_strclr+0x4d>
  40157f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401583:	0f b6 00             	movzbl (%rax),%eax
  401586:	84 c0                	test   %al,%al
  401588:	74 2c                	je     4015b6 <ft_strclr+0x4d>
  40158a:	eb 16                	jmp    4015a2 <ft_strclr+0x39>
  40158c:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40158f:	8d 50 01             	lea    0x1(%rax),%edx
  401592:	89 55 fc             	mov    %edx,-0x4(%rbp)
  401595:	48 63 d0             	movslq %eax,%rdx
  401598:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40159c:	48 01 d0             	add    %rdx,%rax
  40159f:	c6 00 00             	movb   $0x0,(%rax)
  4015a2:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4015a5:	48 63 d0             	movslq %eax,%rdx
  4015a8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4015ac:	48 01 d0             	add    %rdx,%rax
  4015af:	0f b6 00             	movzbl (%rax),%eax
  4015b2:	84 c0                	test   %al,%al
  4015b4:	75 d6                	jne    40158c <ft_strclr+0x23>
  4015b6:	5d                   	pop    %rbp
  4015b7:	c3                   	retq   

00000000004015b8 <ft_strsub>:
  4015b8:	55                   	push   %rbp
  4015b9:	48 89 e5             	mov    %rsp,%rbp
  4015bc:	48 83 ec 30          	sub    $0x30,%rsp
  4015c0:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4015c4:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  4015c7:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  4015cb:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  4015d0:	75 07                	jne    4015d9 <ft_strsub+0x21>
  4015d2:	b8 00 00 00 00       	mov    $0x0,%eax
  4015d7:	eb 66                	jmp    40163f <ft_strsub+0x87>
  4015d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4015dd:	48 83 c0 01          	add    $0x1,%rax
  4015e1:	48 89 c7             	mov    %rax,%rdi
  4015e4:	e8 2c fd ff ff       	callq  401315 <ft_strnew>
  4015e9:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  4015ed:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
  4015f2:	75 07                	jne    4015fb <ft_strsub+0x43>
  4015f4:	b8 00 00 00 00       	mov    $0x0,%eax
  4015f9:	eb 44                	jmp    40163f <ft_strsub+0x87>
  4015fb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  401602:	eb 21                	jmp    401625 <ft_strsub+0x6d>
  401604:	8b 55 f4             	mov    -0xc(%rbp),%edx
  401607:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40160b:	48 01 c2             	add    %rax,%rdx
  40160e:	8b 4d e4             	mov    -0x1c(%rbp),%ecx
  401611:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401615:	48 01 c8             	add    %rcx,%rax
  401618:	0f b6 00             	movzbl (%rax),%eax
  40161b:	88 02                	mov    %al,(%rdx)
  40161d:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  401621:	83 45 e4 01          	addl   $0x1,-0x1c(%rbp)
  401625:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401628:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
  40162c:	72 d6                	jb     401604 <ft_strsub+0x4c>
  40162e:	8b 55 f4             	mov    -0xc(%rbp),%edx
  401631:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401635:	48 01 d0             	add    %rdx,%rax
  401638:	c6 00 00             	movb   $0x0,(%rax)
  40163b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  40163f:	c9                   	leaveq 
  401640:	c3                   	retq   

0000000000401641 <ft_neg>:
  401641:	55                   	push   %rbp
  401642:	48 89 e5             	mov    %rsp,%rbp
  401645:	89 7d fc             	mov    %edi,-0x4(%rbp)
  401648:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40164b:	f7 d8                	neg    %eax
  40164d:	5d                   	pop    %rbp
  40164e:	c3                   	retq   

000000000040164f <ft_power>:
  40164f:	55                   	push   %rbp
  401650:	48 89 e5             	mov    %rsp,%rbp
  401653:	89 7d ec             	mov    %edi,-0x14(%rbp)
  401656:	89 75 e8             	mov    %esi,-0x18(%rbp)
  401659:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  401660:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
  401664:	75 07                	jne    40166d <ft_power+0x1e>
  401666:	b8 01 00 00 00       	mov    $0x1,%eax
  40166b:	eb 34                	jmp    4016a1 <ft_power+0x52>
  40166d:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  401671:	75 07                	jne    40167a <ft_power+0x2b>
  401673:	b8 00 00 00 00       	mov    $0x0,%eax
  401678:	eb 27                	jmp    4016a1 <ft_power+0x52>
  40167a:	83 7d e8 01          	cmpl   $0x1,-0x18(%rbp)
  40167e:	75 05                	jne    401685 <ft_power+0x36>
  401680:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401683:	eb 1c                	jmp    4016a1 <ft_power+0x52>
  401685:	eb 0a                	jmp    401691 <ft_power+0x42>
  401687:	8b 45 fc             	mov    -0x4(%rbp),%eax
  40168a:	0f af 45 ec          	imul   -0x14(%rbp),%eax
  40168e:	89 45 fc             	mov    %eax,-0x4(%rbp)
  401691:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401694:	8d 50 ff             	lea    -0x1(%rax),%edx
  401697:	89 55 e8             	mov    %edx,-0x18(%rbp)
  40169a:	85 c0                	test   %eax,%eax
  40169c:	7f e9                	jg     401687 <ft_power+0x38>
  40169e:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4016a1:	5d                   	pop    %rbp
  4016a2:	c3                   	retq   

00000000004016a3 <strlennum>:
  4016a3:	55                   	push   %rbp
  4016a4:	48 89 e5             	mov    %rsp,%rbp
  4016a7:	48 83 ec 20          	sub    $0x20,%rsp
  4016ab:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4016af:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4016b3:	48 89 c7             	mov    %rax,%rdi
  4016b6:	e8 ab f1 ff ff       	callq  400866 <ft_strlen>
  4016bb:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4016be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4016c2:	0f b6 00             	movzbl (%rax),%eax
  4016c5:	3c 2d                	cmp    $0x2d,%al
  4016c7:	75 04                	jne    4016cd <strlennum+0x2a>
  4016c9:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  4016cd:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4016d0:	c9                   	leaveq 
  4016d1:	c3                   	retq   

00000000004016d2 <num>:
  4016d2:	55                   	push   %rbp
  4016d3:	48 89 e5             	mov    %rsp,%rbp
  4016d6:	89 f8                	mov    %edi,%eax
  4016d8:	88 45 fc             	mov    %al,-0x4(%rbp)
  4016db:	0f be 45 fc          	movsbl -0x4(%rbp),%eax
  4016df:	83 e8 30             	sub    $0x30,%eax
  4016e2:	5d                   	pop    %rbp
  4016e3:	c3                   	retq   

00000000004016e4 <addstr>:
  4016e4:	55                   	push   %rbp
  4016e5:	48 89 e5             	mov    %rsp,%rbp
  4016e8:	53                   	push   %rbx
  4016e9:	48 83 ec 38          	sub    $0x38,%rsp
  4016ed:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4016f1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4016f5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4016f9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4016fd:	48 89 c7             	mov    %rax,%rdi
  401700:	e8 61 f1 ff ff       	callq  400866 <ft_strlen>
  401705:	89 45 e0             	mov    %eax,-0x20(%rbp)
  401708:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40170c:	48 89 c7             	mov    %rax,%rdi
  40170f:	e8 52 f1 ff ff       	callq  400866 <ft_strlen>
  401714:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  401717:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40171e:	eb 74                	jmp    401794 <addstr+0xb0>
  401720:	8b 45 e0             	mov    -0x20(%rbp),%eax
  401723:	48 63 d0             	movslq %eax,%rdx
  401726:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40172a:	48 01 d0             	add    %rdx,%rax
  40172d:	0f b6 00             	movzbl (%rax),%eax
  401730:	0f be c0             	movsbl %al,%eax
  401733:	89 c7                	mov    %eax,%edi
  401735:	e8 98 ff ff ff       	callq  4016d2 <num>
  40173a:	89 c3                	mov    %eax,%ebx
  40173c:	8b 45 e0             	mov    -0x20(%rbp),%eax
  40173f:	48 63 d0             	movslq %eax,%rdx
  401742:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  401746:	48 01 d0             	add    %rdx,%rax
  401749:	0f b6 00             	movzbl (%rax),%eax
  40174c:	0f be c0             	movsbl %al,%eax
  40174f:	89 c7                	mov    %eax,%edi
  401751:	e8 7c ff ff ff       	callq  4016d2 <num>
  401756:	8d 14 03             	lea    (%rbx,%rax,1),%edx
  401759:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40175c:	01 d0                	add    %edx,%eax
  40175e:	89 45 e8             	mov    %eax,-0x18(%rbp)
  401761:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  401768:	83 7d e8 09          	cmpl   $0x9,-0x18(%rbp)
  40176c:	7e 0b                	jle    401779 <addstr+0x95>
  40176e:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
  401775:	83 6d e8 0a          	subl   $0xa,-0x18(%rbp)
  401779:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40177c:	8d 50 ff             	lea    -0x1(%rax),%edx
  40177f:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  401782:	48 63 d0             	movslq %eax,%rdx
  401785:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  401789:	48 01 c2             	add    %rax,%rdx
  40178c:	8b 45 e8             	mov    -0x18(%rbp),%eax
  40178f:	83 c0 30             	add    $0x30,%eax
  401792:	88 02                	mov    %al,(%rdx)
  401794:	83 6d e0 01          	subl   $0x1,-0x20(%rbp)
  401798:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  40179c:	79 82                	jns    401720 <addstr+0x3c>
  40179e:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  4017a2:	74 07                	je     4017ab <addstr+0xc7>
  4017a4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4017a8:	c6 00 31             	movb   $0x31,(%rax)
  4017ab:	48 83 c4 38          	add    $0x38,%rsp
  4017af:	5b                   	pop    %rbx
  4017b0:	5d                   	pop    %rbp
  4017b1:	c3                   	retq   

00000000004017b2 <ft_addstr>:
  4017b2:	55                   	push   %rbp
  4017b3:	48 89 e5             	mov    %rsp,%rbp
  4017b6:	53                   	push   %rbx
  4017b7:	48 83 ec 38          	sub    $0x38,%rsp
  4017bb:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4017bf:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  4017c3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4017c7:	48 89 c7             	mov    %rax,%rdi
  4017ca:	e8 fd ef ff ff       	callq  4007cc <ft_strdup>
  4017cf:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4017d3:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4017d7:	48 89 c7             	mov    %rax,%rdi
  4017da:	e8 ed ef ff ff       	callq  4007cc <ft_strdup>
  4017df:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4017e3:	eb 11                	jmp    4017f6 <ft_addstr+0x44>
  4017e5:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
  4017e9:	be 30 00 00 00       	mov    $0x30,%esi
  4017ee:	48 89 c7             	mov    %rax,%rdi
  4017f1:	e8 08 fc ff ff       	callq  4013fe <ft_straddcharf>
  4017f6:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4017fa:	48 89 c7             	mov    %rax,%rdi
  4017fd:	e8 a1 fe ff ff       	callq  4016a3 <strlennum>
  401802:	89 c3                	mov    %eax,%ebx
  401804:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401808:	48 89 c7             	mov    %rax,%rdi
  40180b:	e8 93 fe ff ff       	callq  4016a3 <strlennum>
  401810:	39 c3                	cmp    %eax,%ebx
  401812:	7c d1                	jl     4017e5 <ft_addstr+0x33>
  401814:	eb 11                	jmp    401827 <ft_addstr+0x75>
  401816:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  40181a:	be 30 00 00 00       	mov    $0x30,%esi
  40181f:	48 89 c7             	mov    %rax,%rdi
  401822:	e8 d7 fb ff ff       	callq  4013fe <ft_straddcharf>
  401827:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  40182b:	48 89 c7             	mov    %rax,%rdi
  40182e:	e8 70 fe ff ff       	callq  4016a3 <strlennum>
  401833:	89 c3                	mov    %eax,%ebx
  401835:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401839:	48 89 c7             	mov    %rax,%rdi
  40183c:	e8 62 fe ff ff       	callq  4016a3 <strlennum>
  401841:	39 c3                	cmp    %eax,%ebx
  401843:	7c d1                	jl     401816 <ft_addstr+0x64>
  401845:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401849:	48 89 c7             	mov    %rax,%rdi
  40184c:	e8 15 f0 ff ff       	callq  400866 <ft_strlen>
  401851:	89 c7                	mov    %eax,%edi
  401853:	e8 c3 03 00 00       	callq  401c1b <ft_strint>
  401858:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  40185c:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  401860:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401864:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401868:	48 89 ce             	mov    %rcx,%rsi
  40186b:	48 89 c7             	mov    %rax,%rdi
  40186e:	e8 71 fe ff ff       	callq  4016e4 <addstr>
  401873:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
  401877:	48 89 c7             	mov    %rax,%rdi
  40187a:	e8 21 ef ff ff       	callq  4007a0 <ft_strdel>
  40187f:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  401883:	48 89 c7             	mov    %rax,%rdi
  401886:	e8 15 ef ff ff       	callq  4007a0 <ft_strdel>
  40188b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  40188f:	48 83 c4 38          	add    $0x38,%rsp
  401893:	5b                   	pop    %rbx
  401894:	5d                   	pop    %rbp
  401895:	c3                   	retq   

0000000000401896 <strlennum>:
  401896:	55                   	push   %rbp
  401897:	48 89 e5             	mov    %rsp,%rbp
  40189a:	48 83 ec 20          	sub    $0x20,%rsp
  40189e:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  4018a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4018a6:	48 89 c7             	mov    %rax,%rdi
  4018a9:	e8 b8 ef ff ff       	callq  400866 <ft_strlen>
  4018ae:	89 45 fc             	mov    %eax,-0x4(%rbp)
  4018b1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  4018b5:	0f b6 00             	movzbl (%rax),%eax
  4018b8:	3c 2d                	cmp    $0x2d,%al
  4018ba:	75 04                	jne    4018c0 <strlennum+0x2a>
  4018bc:	83 6d fc 01          	subl   $0x1,-0x4(%rbp)
  4018c0:	8b 45 fc             	mov    -0x4(%rbp),%eax
  4018c3:	c9                   	leaveq 
  4018c4:	c3                   	retq   

00000000004018c5 <num>:
  4018c5:	55                   	push   %rbp
  4018c6:	48 89 e5             	mov    %rsp,%rbp
  4018c9:	89 f8                	mov    %edi,%eax
  4018cb:	88 45 fc             	mov    %al,-0x4(%rbp)
  4018ce:	0f be 45 fc          	movsbl -0x4(%rbp),%eax
  4018d2:	83 e8 30             	sub    $0x30,%eax
  4018d5:	5d                   	pop    %rbp
  4018d6:	c3                   	retq   

00000000004018d7 <substr>:
  4018d7:	55                   	push   %rbp
  4018d8:	48 89 e5             	mov    %rsp,%rbp
  4018db:	53                   	push   %rbx
  4018dc:	48 83 ec 38          	sub    $0x38,%rsp
  4018e0:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
  4018e4:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
  4018e8:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
  4018ec:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4018f0:	48 89 c7             	mov    %rax,%rdi
  4018f3:	e8 6e ef ff ff       	callq  400866 <ft_strlen>
  4018f8:	89 45 e0             	mov    %eax,-0x20(%rbp)
  4018fb:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4018ff:	48 89 c7             	mov    %rax,%rdi
  401902:	e8 5f ef ff ff       	callq  400866 <ft_strlen>
  401907:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40190a:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  401911:	eb 73                	jmp    401986 <substr+0xaf>
  401913:	8b 45 e0             	mov    -0x20(%rbp),%eax
  401916:	48 63 d0             	movslq %eax,%rdx
  401919:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  40191d:	48 01 d0             	add    %rdx,%rax
  401920:	0f b6 00             	movzbl (%rax),%eax
  401923:	0f be c0             	movsbl %al,%eax
  401926:	89 c7                	mov    %eax,%edi
  401928:	e8 98 ff ff ff       	callq  4018c5 <num>
  40192d:	89 c3                	mov    %eax,%ebx
  40192f:	8b 45 e0             	mov    -0x20(%rbp),%eax
  401932:	48 63 d0             	movslq %eax,%rdx
  401935:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
  401939:	48 01 d0             	add    %rdx,%rax
  40193c:	0f b6 00             	movzbl (%rax),%eax
  40193f:	0f be c0             	movsbl %al,%eax
  401942:	89 c7                	mov    %eax,%edi
  401944:	e8 7c ff ff ff       	callq  4018c5 <num>
  401949:	29 c3                	sub    %eax,%ebx
  40194b:	89 d8                	mov    %ebx,%eax
  40194d:	2b 45 ec             	sub    -0x14(%rbp),%eax
  401950:	89 45 e8             	mov    %eax,-0x18(%rbp)
  401953:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
  40195a:	83 7d e8 00          	cmpl   $0x0,-0x18(%rbp)
  40195e:	79 0b                	jns    40196b <substr+0x94>
  401960:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
  401967:	83 45 e8 0a          	addl   $0xa,-0x18(%rbp)
  40196b:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  40196e:	8d 50 ff             	lea    -0x1(%rax),%edx
  401971:	89 55 e4             	mov    %edx,-0x1c(%rbp)
  401974:	48 63 d0             	movslq %eax,%rdx
  401977:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40197b:	48 01 c2             	add    %rax,%rdx
  40197e:	8b 45 e8             	mov    -0x18(%rbp),%eax
  401981:	83 c0 30             	add    $0x30,%eax
  401984:	88 02                	mov    %al,(%rdx)
  401986:	83 6d e0 01          	subl   $0x1,-0x20(%rbp)
  40198a:	83 7d e0 00          	cmpl   $0x0,-0x20(%rbp)
  40198e:	79 83                	jns    401913 <substr+0x3c>
  401990:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  401994:	74 07                	je     40199d <substr+0xc6>
  401996:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  40199a:	c6 00 31             	movb   $0x31,(%rax)
  40199d:	48 83 c4 38          	add    $0x38,%rsp
  4019a1:	5b                   	pop    %rbx
  4019a2:	5d                   	pop    %rbp
  4019a3:	c3                   	retq   

00000000004019a4 <ft_substr>:
  4019a4:	55                   	push   %rbp
  4019a5:	48 89 e5             	mov    %rsp,%rbp
  4019a8:	53                   	push   %rbx
  4019a9:	48 83 ec 38          	sub    $0x38,%rsp
  4019ad:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
  4019b1:	48 89 75 c0          	mov    %rsi,-0x40(%rbp)
  4019b5:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
  4019b9:	48 89 c7             	mov    %rax,%rdi
  4019bc:	e8 0b ee ff ff       	callq  4007cc <ft_strdup>
  4019c1:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
  4019c5:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
  4019c9:	48 89 c7             	mov    %rax,%rdi
  4019cc:	e8 fb ed ff ff       	callq  4007cc <ft_strdup>
  4019d1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
  4019d5:	eb 11                	jmp    4019e8 <ft_substr+0x44>
  4019d7:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
  4019db:	be 30 00 00 00       	mov    $0x30,%esi
  4019e0:	48 89 c7             	mov    %rax,%rdi
  4019e3:	e8 16 fa ff ff       	callq  4013fe <ft_straddcharf>
  4019e8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  4019ec:	48 89 c7             	mov    %rax,%rdi
  4019ef:	e8 a2 fe ff ff       	callq  401896 <strlennum>
  4019f4:	89 c3                	mov    %eax,%ebx
  4019f6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  4019fa:	48 89 c7             	mov    %rax,%rdi
  4019fd:	e8 94 fe ff ff       	callq  401896 <strlennum>
  401a02:	39 c3                	cmp    %eax,%ebx
  401a04:	7c d1                	jl     4019d7 <ft_substr+0x33>
  401a06:	eb 11                	jmp    401a19 <ft_substr+0x75>
  401a08:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  401a0c:	be 30 00 00 00       	mov    $0x30,%esi
  401a11:	48 89 c7             	mov    %rax,%rdi
  401a14:	e8 e5 f9 ff ff       	callq  4013fe <ft_straddcharf>
  401a19:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401a1d:	48 89 c7             	mov    %rax,%rdi
  401a20:	e8 71 fe ff ff       	callq  401896 <strlennum>
  401a25:	89 c3                	mov    %eax,%ebx
  401a27:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401a2b:	48 89 c7             	mov    %rax,%rdi
  401a2e:	e8 63 fe ff ff       	callq  401896 <strlennum>
  401a33:	39 c3                	cmp    %eax,%ebx
  401a35:	7c d1                	jl     401a08 <ft_substr+0x64>
  401a37:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401a3b:	48 89 c7             	mov    %rax,%rdi
  401a3e:	e8 23 ee ff ff       	callq  400866 <ft_strlen>
  401a43:	89 c7                	mov    %eax,%edi
  401a45:	e8 d1 01 00 00       	callq  401c1b <ft_strint>
  401a4a:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  401a4e:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
  401a52:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401a56:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  401a5a:	48 89 ce             	mov    %rcx,%rsi
  401a5d:	48 89 c7             	mov    %rax,%rdi
  401a60:	e8 72 fe ff ff       	callq  4018d7 <substr>
  401a65:	48 8d 45 d8          	lea    -0x28(%rbp),%rax
  401a69:	48 89 c7             	mov    %rax,%rdi
  401a6c:	e8 2f ed ff ff       	callq  4007a0 <ft_strdel>
  401a71:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
  401a75:	48 89 c7             	mov    %rax,%rdi
  401a78:	e8 23 ed ff ff       	callq  4007a0 <ft_strdel>
  401a7d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401a81:	48 83 c4 38          	add    $0x38,%rsp
  401a85:	5b                   	pop    %rbx
  401a86:	5d                   	pop    %rbp
  401a87:	c3                   	retq   

0000000000401a88 <ft_nbrlen>:
  401a88:	55                   	push   %rbp
  401a89:	48 89 e5             	mov    %rsp,%rbp
  401a8c:	89 7d ec             	mov    %edi,-0x14(%rbp)
  401a8f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  401a96:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  401a9a:	75 07                	jne    401aa3 <ft_nbrlen+0x1b>
  401a9c:	b8 01 00 00 00       	mov    $0x1,%eax
  401aa1:	eb 3e                	jmp    401ae1 <ft_nbrlen+0x59>
  401aa3:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  401aa7:	79 0c                	jns    401ab5 <ft_nbrlen+0x2d>
  401aa9:	f7 5d ec             	negl   -0x14(%rbp)
  401aac:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%rbp)
  401ab3:	eb 21                	jmp    401ad6 <ft_nbrlen+0x4e>
  401ab5:	eb 1f                	jmp    401ad6 <ft_nbrlen+0x4e>
  401ab7:	8b 4d ec             	mov    -0x14(%rbp),%ecx
  401aba:	ba 67 66 66 66       	mov    $0x66666667,%edx
  401abf:	89 c8                	mov    %ecx,%eax
  401ac1:	f7 ea                	imul   %edx
  401ac3:	c1 fa 02             	sar    $0x2,%edx
  401ac6:	89 c8                	mov    %ecx,%eax
  401ac8:	c1 f8 1f             	sar    $0x1f,%eax
  401acb:	29 c2                	sub    %eax,%edx
  401acd:	89 d0                	mov    %edx,%eax
  401acf:	89 45 ec             	mov    %eax,-0x14(%rbp)
  401ad2:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
  401ad6:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  401ada:	7f db                	jg     401ab7 <ft_nbrlen+0x2f>
  401adc:	8b 45 fc             	mov    -0x4(%rbp),%eax
  401adf:	48 98                	cltq   
  401ae1:	5d                   	pop    %rbp
  401ae2:	c3                   	retq   

0000000000401ae3 <ft_longlen>:
  401ae3:	55                   	push   %rbp
  401ae4:	48 89 e5             	mov    %rsp,%rbp
  401ae7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401aeb:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
  401af2:	00 
  401af3:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401af8:	79 0e                	jns    401b08 <ft_longlen+0x25>
  401afa:	48 f7 5d e8          	negq   -0x18(%rbp)
  401afe:	48 c7 45 f8 01 00 00 	movq   $0x1,-0x8(%rbp)
  401b05:	00 
  401b06:	eb 30                	jmp    401b38 <ft_longlen+0x55>
  401b08:	eb 2e                	jmp    401b38 <ft_longlen+0x55>
  401b0a:	48 8b 4d e8          	mov    -0x18(%rbp),%rcx
  401b0e:	48 ba 67 66 66 66 66 	movabs $0x6666666666666667,%rdx
  401b15:	66 66 66 
  401b18:	48 89 c8             	mov    %rcx,%rax
  401b1b:	48 f7 ea             	imul   %rdx
  401b1e:	48 c1 fa 02          	sar    $0x2,%rdx
  401b22:	48 89 c8             	mov    %rcx,%rax
  401b25:	48 c1 f8 3f          	sar    $0x3f,%rax
  401b29:	48 29 c2             	sub    %rax,%rdx
  401b2c:	48 89 d0             	mov    %rdx,%rax
  401b2f:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
  401b33:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  401b38:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
  401b3d:	7f cb                	jg     401b0a <ft_longlen+0x27>
  401b3f:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401b43:	5d                   	pop    %rbp
  401b44:	c3                   	retq   

0000000000401b45 <ft_putchar>:
  401b45:	55                   	push   %rbp
  401b46:	48 89 e5             	mov    %rsp,%rbp
  401b49:	48 83 ec 10          	sub    $0x10,%rsp
  401b4d:	89 f8                	mov    %edi,%eax
  401b4f:	88 45 fc             	mov    %al,-0x4(%rbp)
  401b52:	48 8d 45 fc          	lea    -0x4(%rbp),%rax
  401b56:	ba 01 00 00 00       	mov    $0x1,%edx
  401b5b:	48 89 c6             	mov    %rax,%rsi
  401b5e:	bf 01 00 00 00       	mov    $0x1,%edi
  401b63:	e8 28 e9 ff ff       	callq  400490 <write@plt>
  401b68:	c9                   	leaveq 
  401b69:	c3                   	retq   

0000000000401b6a <ft_putstr>:
  401b6a:	55                   	push   %rbp
  401b6b:	48 89 e5             	mov    %rsp,%rbp
  401b6e:	48 83 ec 10          	sub    $0x10,%rsp
  401b72:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  401b76:	eb 16                	jmp    401b8e <ft_putstr+0x24>
  401b78:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401b7c:	0f b6 00             	movzbl (%rax),%eax
  401b7f:	0f be c0             	movsbl %al,%eax
  401b82:	89 c7                	mov    %eax,%edi
  401b84:	e8 bc ff ff ff       	callq  401b45 <ft_putchar>
  401b89:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
  401b8e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401b92:	0f b6 00             	movzbl (%rax),%eax
  401b95:	84 c0                	test   %al,%al
  401b97:	75 df                	jne    401b78 <ft_putstr+0xe>
  401b99:	c9                   	leaveq 
  401b9a:	c3                   	retq   

0000000000401b9b <ft_putnbr>:
  401b9b:	55                   	push   %rbp
  401b9c:	48 89 e5             	mov    %rsp,%rbp
  401b9f:	48 83 ec 20          	sub    $0x20,%rsp
  401ba3:	89 7d ec             	mov    %edi,-0x14(%rbp)
  401ba6:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401ba9:	89 c7                	mov    %eax,%edi
  401bab:	e8 93 f2 ff ff       	callq  400e43 <ft_itoa>
  401bb0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401bb4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401bb8:	48 89 c7             	mov    %rax,%rdi
  401bbb:	e8 aa ff ff ff       	callq  401b6a <ft_putstr>
  401bc0:	48 8d 45 f8          	lea    -0x8(%rbp),%rax
  401bc4:	48 89 c7             	mov    %rax,%rdi
  401bc7:	e8 d4 eb ff ff       	callq  4007a0 <ft_strdel>
  401bcc:	c9                   	leaveq 
  401bcd:	c3                   	retq   

0000000000401bce <ft_memset>:
  401bce:	55                   	push   %rbp
  401bcf:	48 89 e5             	mov    %rsp,%rbp
  401bd2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401bd6:	89 75 e4             	mov    %esi,-0x1c(%rbp)
  401bd9:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  401bdd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  401be4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401be8:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401bec:	eb 16                	jmp    401c04 <ft_memset+0x36>
  401bee:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401bf1:	48 63 d0             	movslq %eax,%rdx
  401bf4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401bf8:	48 01 c2             	add    %rax,%rdx
  401bfb:	8b 45 e4             	mov    -0x1c(%rbp),%eax
  401bfe:	88 02                	mov    %al,(%rdx)
  401c00:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  401c04:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
  401c08:	48 8d 50 ff          	lea    -0x1(%rax),%rdx
  401c0c:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
  401c10:	48 85 c0             	test   %rax,%rax
  401c13:	75 d9                	jne    401bee <ft_memset+0x20>
  401c15:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401c19:	5d                   	pop    %rbp
  401c1a:	c3                   	retq   

0000000000401c1b <ft_strint>:
  401c1b:	55                   	push   %rbp
  401c1c:	48 89 e5             	mov    %rsp,%rbp
  401c1f:	48 83 ec 20          	sub    $0x20,%rsp
  401c23:	89 7d ec             	mov    %edi,-0x14(%rbp)
  401c26:	83 7d ec 00          	cmpl   $0x0,-0x14(%rbp)
  401c2a:	7f 07                	jg     401c33 <ft_strint+0x18>
  401c2c:	b8 00 00 00 00       	mov    $0x0,%eax
  401c31:	eb 3f                	jmp    401c72 <ft_strint+0x57>
  401c33:	8b 45 ec             	mov    -0x14(%rbp),%eax
  401c36:	83 c0 01             	add    $0x1,%eax
  401c39:	48 98                	cltq   
  401c3b:	48 89 c7             	mov    %rax,%rdi
  401c3e:	e8 d2 f6 ff ff       	callq  401315 <ft_strnew>
  401c43:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401c47:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  401c4e:	eb 16                	jmp    401c66 <ft_strint+0x4b>
  401c50:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401c53:	8d 50 01             	lea    0x1(%rax),%edx
  401c56:	89 55 f4             	mov    %edx,-0xc(%rbp)
  401c59:	48 63 d0             	movslq %eax,%rdx
  401c5c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c60:	48 01 d0             	add    %rdx,%rax
  401c63:	c6 00 30             	movb   $0x30,(%rax)
  401c66:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401c69:	3b 45 ec             	cmp    -0x14(%rbp),%eax
  401c6c:	7c e2                	jl     401c50 <ft_strint+0x35>
  401c6e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c72:	c9                   	leaveq 
  401c73:	c3                   	retq   

0000000000401c74 <ft_strcpy>:
  401c74:	55                   	push   %rbp
  401c75:	48 89 e5             	mov    %rsp,%rbp
  401c78:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401c7c:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  401c80:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%rbp)
  401c87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401c8b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
  401c8f:	eb 23                	jmp    401cb4 <ft_strcpy+0x40>
  401c91:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401c94:	48 63 d0             	movslq %eax,%rdx
  401c97:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401c9b:	48 01 c2             	add    %rax,%rdx
  401c9e:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401ca1:	48 63 c8             	movslq %eax,%rcx
  401ca4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401ca8:	48 01 c8             	add    %rcx,%rax
  401cab:	0f b6 00             	movzbl (%rax),%eax
  401cae:	88 02                	mov    %al,(%rdx)
  401cb0:	83 45 f4 01          	addl   $0x1,-0xc(%rbp)
  401cb4:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401cb7:	48 63 d0             	movslq %eax,%rdx
  401cba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401cbe:	48 01 d0             	add    %rdx,%rax
  401cc1:	0f b6 00             	movzbl (%rax),%eax
  401cc4:	84 c0                	test   %al,%al
  401cc6:	75 c9                	jne    401c91 <ft_strcpy+0x1d>
  401cc8:	8b 45 f4             	mov    -0xc(%rbp),%eax
  401ccb:	48 63 d0             	movslq %eax,%rdx
  401cce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  401cd2:	48 01 d0             	add    %rdx,%rax
  401cd5:	c6 00 00             	movb   $0x0,(%rax)
  401cd8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401cdc:	5d                   	pop    %rbp
  401cdd:	c3                   	retq   

0000000000401cde <ft_strcat>:
  401cde:	55                   	push   %rbp
  401cdf:	48 89 e5             	mov    %rsp,%rbp
  401ce2:	48 83 ec 20          	sub    $0x20,%rsp
  401ce6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
  401cea:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
  401cee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401cf2:	48 89 c7             	mov    %rax,%rdi
  401cf5:	e8 6c eb ff ff       	callq  400866 <ft_strlen>
  401cfa:	89 45 fc             	mov    %eax,-0x4(%rbp)
  401cfd:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%rbp)
  401d04:	eb 24                	jmp    401d2a <ft_strcat+0x4c>
  401d06:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401d09:	8b 55 fc             	mov    -0x4(%rbp),%edx
  401d0c:	01 d0                	add    %edx,%eax
  401d0e:	89 c2                	mov    %eax,%edx
  401d10:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401d14:	48 01 c2             	add    %rax,%rdx
  401d17:	8b 4d f8             	mov    -0x8(%rbp),%ecx
  401d1a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401d1e:	48 01 c8             	add    %rcx,%rax
  401d21:	0f b6 00             	movzbl (%rax),%eax
  401d24:	88 02                	mov    %al,(%rdx)
  401d26:	83 45 f8 01          	addl   $0x1,-0x8(%rbp)
  401d2a:	8b 55 f8             	mov    -0x8(%rbp),%edx
  401d2d:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  401d31:	48 01 d0             	add    %rdx,%rax
  401d34:	0f b6 00             	movzbl (%rax),%eax
  401d37:	84 c0                	test   %al,%al
  401d39:	75 cb                	jne    401d06 <ft_strcat+0x28>
  401d3b:	8b 45 f8             	mov    -0x8(%rbp),%eax
  401d3e:	8b 55 fc             	mov    -0x4(%rbp),%edx
  401d41:	01 d0                	add    %edx,%eax
  401d43:	89 c2                	mov    %eax,%edx
  401d45:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401d49:	48 01 d0             	add    %rdx,%rax
  401d4c:	c6 00 00             	movb   $0x0,(%rax)
  401d4f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
  401d53:	c9                   	leaveq 
  401d54:	c3                   	retq   
  401d55:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  401d5c:	00 00 00 
  401d5f:	90                   	nop

0000000000401d60 <__libc_csu_init>:
  401d60:	41 57                	push   %r15
  401d62:	41 89 ff             	mov    %edi,%r15d
  401d65:	41 56                	push   %r14
  401d67:	49 89 f6             	mov    %rsi,%r14
  401d6a:	41 55                	push   %r13
  401d6c:	49 89 d5             	mov    %rdx,%r13
  401d6f:	41 54                	push   %r12
  401d71:	4c 8d 25 98 10 20 00 	lea    0x201098(%rip),%r12        # 602e10 <__frame_dummy_init_array_entry>
  401d78:	55                   	push   %rbp
  401d79:	48 8d 2d 98 10 20 00 	lea    0x201098(%rip),%rbp        # 602e18 <__init_array_end>
  401d80:	53                   	push   %rbx
  401d81:	4c 29 e5             	sub    %r12,%rbp
  401d84:	31 db                	xor    %ebx,%ebx
  401d86:	48 c1 fd 03          	sar    $0x3,%rbp
  401d8a:	48 83 ec 08          	sub    $0x8,%rsp
  401d8e:	e8 bd e6 ff ff       	callq  400450 <_init>
  401d93:	48 85 ed             	test   %rbp,%rbp
  401d96:	74 1e                	je     401db6 <__libc_csu_init+0x56>
  401d98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  401d9f:	00 
  401da0:	4c 89 ea             	mov    %r13,%rdx
  401da3:	4c 89 f6             	mov    %r14,%rsi
  401da6:	44 89 ff             	mov    %r15d,%edi
  401da9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  401dad:	48 83 c3 01          	add    $0x1,%rbx
  401db1:	48 39 eb             	cmp    %rbp,%rbx
  401db4:	75 ea                	jne    401da0 <__libc_csu_init+0x40>
  401db6:	48 83 c4 08          	add    $0x8,%rsp
  401dba:	5b                   	pop    %rbx
  401dbb:	5d                   	pop    %rbp
  401dbc:	41 5c                	pop    %r12
  401dbe:	41 5d                	pop    %r13
  401dc0:	41 5e                	pop    %r14
  401dc2:	41 5f                	pop    %r15
  401dc4:	c3                   	retq   
  401dc5:	66 66 2e 0f 1f 84 00 	data32 nopw %cs:0x0(%rax,%rax,1)
  401dcc:	00 00 00 00 

0000000000401dd0 <__libc_csu_fini>:
  401dd0:	f3 c3                	repz retq 

Déassemblage de la section .fini:

0000000000401dd4 <_fini>:
  401dd4:	48 83 ec 08          	sub    $0x8,%rsp
  401dd8:	48 83 c4 08          	add    $0x8,%rsp
  401ddc:	c3                   	retq   
